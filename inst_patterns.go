// Code generated by gen/inst.go; DO NOT EDIT.

package arm

// The Patterns table contains matching info for all instruction encodings.
// Each instruction's list of encodings is prefixed with the encoding count,
// followed by a length-prefixed list of matching operators and commands offset
// for each encoding; the commands offset is a 16-bit index into the Commands array.
//
// Matching operators apply to unflattened Arg types.
var Patterns = [...]byte{
	0,
	/* abs */ 5,
	2, MatD, MatD, 0x0, 0x0, // => 0
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x0, 0x7, // => 7
	2, MatV, byte(WORD), MatV, byte(WORD), 0x0, 0xf, // => 15
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x0, 0x17, // => 23
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x0, 0x1f, // => 31
	/* adc */ 2,
	3, MatW, MatW, MatW, 0x0, 0x27, // => 39
	3, MatX, MatX, MatX, 0x0, 0x2f, // => 47
	/* adcs */ 2,
	3, MatW, MatW, MatW, 0x0, 0x37, // => 55
	3, MatX, MatX, MatX, 0x0, 0x3f, // => 63
	/* add */ 12,
	5, MatW, MatW, MatW, MatEnd, MatMod, SymShifts, 0x0, 0x47, // => 71
	5, MatX, MatX, MatX, MatEnd, MatMod, SymShifts, 0x0, 0x53, // => 83
	5, MatWSP, MatWSP, MatW, MatEnd, MatMod, SymExtends, 0x0, 0x5f, // => 95
	5, MatXSP, MatXSP, MatW, MatEnd, MatMod, SymExtendsW, 0x0, 0x6c, // => 108
	5, MatXSP, MatXSP, MatX, MatEnd, MatMod, SymExtendsX, 0x0, 0x79, // => 121
	5, MatWSP, MatWSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x0, 0x86, // => 134
	5, MatXSP, MatXSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x0, 0x93, // => 147
	3, MatD, MatD, MatD, 0x0, 0xa0, // => 160
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x0, 0xa8, // => 168
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x0, 0xb1, // => 177
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x0, 0xba, // => 186
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x0, 0xc3, // => 195
	/* addhn */ 3,
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x0, 0xcc, // => 204
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x0, 0xd4, // => 212
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x0, 0xdc, // => 220
	/* addhn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x0, 0xe4, // => 228
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x0, 0xec, // => 236
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x0, 0xf4, // => 244
	/* addp */ 5,
	2, MatD, MatVStatic, byte(QWORD), 2, 0x0, 0xfc, // => 252
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x1, 0x3, // => 259
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x1, 0xc, // => 268
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x1, 0x15, // => 277
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x1, 0x1e, // => 286
	/* adds */ 7,
	5, MatW, MatW, MatW, MatEnd, MatMod, SymShifts, 0x1, 0x27, // => 295
	5, MatX, MatX, MatX, MatEnd, MatMod, SymShifts, 0x1, 0x33, // => 307
	5, MatW, MatWSP, MatW, MatEnd, MatMod, SymExtends, 0x1, 0x3f, // => 319
	5, MatX, MatXSP, MatW, MatEnd, MatMod, SymExtendsW, 0x1, 0x4c, // => 332
	5, MatX, MatXSP, MatX, MatEnd, MatMod, SymExtendsX, 0x1, 0x59, // => 345
	5, MatW, MatWSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x1, 0x66, // => 358
	5, MatX, MatXSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x1, 0x73, // => 371
	/* addv */ 3,
	2, MatB, MatV, byte(BYTE), 0x1, 0x80, // => 384
	2, MatH, MatV, byte(WORD), 0x1, 0x88, // => 392
	2, MatS, MatVStatic, byte(DWORD), 4, 0x1, 0x90, // => 400
	/* adr */ 1,
	2, MatX, MatOffset, 0x1, 0x98, // => 408
	/* adrp */ 1,
	2, MatX, MatOffset, 0x1, 0xa0, // => 416
	/* aesd */ 1,
	2, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x1, 0xa8, // => 424
	/* aese */ 1,
	2, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x1, 0xaf, // => 431
	/* aesimc */ 1,
	2, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x1, 0xb6, // => 438
	/* aesmc */ 1,
	2, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x1, 0xbd, // => 445
	/* and */ 5,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x1, 0xc4, // => 452
	3, MatWSP, MatW, MatImm, 0x1, 0xcd, // => 461
	3, MatXSP, MatX, MatImm, 0x1, 0xd7, // => 471
	5, MatW, MatW, MatW, MatEnd, MatMod, SymRotates, 0x1, 0xe1, // => 481
	5, MatX, MatX, MatX, MatEnd, MatMod, SymRotates, 0x1, 0xed, // => 493
	/* ands */ 4,
	3, MatW, MatW, MatImm, 0x1, 0xf9, // => 505
	3, MatX, MatX, MatImm, 0x2, 0x3, // => 515
	5, MatW, MatW, MatW, MatEnd, MatMod, SymRotates, 0x2, 0xd, // => 525
	5, MatX, MatX, MatX, MatEnd, MatMod, SymRotates, 0x2, 0x19, // => 537
	/* asr */ 4,
	3, MatW, MatW, MatW, 0x2, 0x25, // => 549
	3, MatX, MatX, MatX, 0x2, 0x2d, // => 557
	3, MatW, MatW, MatImm, 0x2, 0x35, // => 565
	3, MatX, MatX, MatImm, 0x2, 0x3f, // => 575
	/* asrv */ 2,
	3, MatW, MatW, MatW, 0x2, 0x49, // => 585
	3, MatX, MatX, MatX, 0x2, 0x51, // => 593
	/* at */ 1,
	2, MatSymbol, MatX, 0x2, 0x59, // => 601
	/* autda */ 1,
	2, MatX, MatXSP, 0x2, 0x62, // => 610
	/* autdb */ 1,
	2, MatX, MatXSP, 0x2, 0x69, // => 617
	/* autdza */ 1,
	1, MatX, 0x2, 0x70, // => 624
	/* autdzb */ 1,
	1, MatX, 0x2, 0x76, // => 630
	/* autia */ 1,
	2, MatX, MatXSP, 0x2, 0x7c, // => 636
	/* autia1716 */ 1,
	0, 0x2, 0x83, // => 643
	/* autiasp */ 1,
	0, 0x2, 0x88, // => 648
	/* autiaz */ 1,
	0, 0x2, 0x8d, // => 653
	/* autib */ 1,
	2, MatX, MatXSP, 0x2, 0x92, // => 658
	/* autib1716 */ 1,
	0, 0x2, 0x99, // => 665
	/* autibsp */ 1,
	0, 0x2, 0x9e, // => 670
	/* autibz */ 1,
	0, 0x2, 0xa3, // => 675
	/* autiza */ 1,
	1, MatX, 0x2, 0xa8, // => 680
	/* autizb */ 1,
	1, MatX, 0x2, 0xae, // => 686
	/* b */ 2,
	2, MatCond, MatOffset, 0x2, 0xb4, // => 692
	1, MatOffset, 0x2, 0xbd, // => 701
	/* bcax */ 1,
	4, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x2, 0xc4, // => 708
	/* bfc */ 2,
	3, MatW, MatImm, MatImm, 0x2, 0xcd, // => 717
	3, MatX, MatImm, MatImm, 0x2, 0xdc, // => 732
	/* bfi */ 2,
	4, MatW, MatW, MatImm, MatImm, 0x2, 0xeb, // => 747
	4, MatX, MatX, MatImm, MatImm, 0x2, 0xfb, // => 763
	/* bfm */ 2,
	4, MatW, MatW, MatImm, MatImm, 0x3, 0xb, // => 779
	4, MatX, MatX, MatImm, MatImm, 0x3, 0x18, // => 792
	/* bfxil */ 2,
	4, MatW, MatW, MatImm, MatImm, 0x3, 0x27, // => 807
	4, MatX, MatX, MatImm, MatImm, 0x3, 0x36, // => 822
	/* bic */ 5,
	4, MatV, byte(WORD), MatImm, MatEnd, MatLitMod, SymLSL, 0x3, 0x45, // => 837
	4, MatV, byte(DWORD), MatImm, MatEnd, MatLitMod, SymLSL, 0x3, 0x5a, // => 858
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x3, 0x6f, // => 879
	5, MatW, MatW, MatW, MatEnd, MatMod, SymRotates, 0x3, 0x78, // => 888
	5, MatX, MatX, MatX, MatEnd, MatMod, SymRotates, 0x3, 0x84, // => 900
	/* bics */ 2,
	5, MatW, MatW, MatW, MatEnd, MatMod, SymRotates, 0x3, 0x90, // => 912
	5, MatX, MatX, MatX, MatEnd, MatMod, SymRotates, 0x3, 0x9c, // => 924
	/* bif */ 1,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x3, 0xa8, // => 936
	/* bit */ 1,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x3, 0xb1, // => 945
	/* bl */ 1,
	1, MatOffset, 0x3, 0xba, // => 954
	/* blr */ 1,
	1, MatX, 0x3, 0xc1, // => 961
	/* blraa */ 1,
	2, MatX, MatXSP, 0x3, 0xc7, // => 967
	/* blraaz */ 1,
	1, MatX, 0x3, 0xce, // => 974
	/* blrab */ 1,
	2, MatX, MatXSP, 0x3, 0xd4, // => 980
	/* blrabz */ 1,
	1, MatX, 0x3, 0xdb, // => 987
	/* br */ 1,
	1, MatX, 0x3, 0xe1, // => 993
	/* braa */ 1,
	2, MatX, MatXSP, 0x3, 0xe7, // => 999
	/* braaz */ 1,
	1, MatX, 0x3, 0xee, // => 1006
	/* brab */ 1,
	2, MatX, MatXSP, 0x3, 0xf4, // => 1012
	/* brabz */ 1,
	1, MatX, 0x3, 0xfb, // => 1019
	/* brk */ 1,
	1, MatImm, 0x4, 0x1, // => 1025
	/* bsl */ 1,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x4, 0x9, // => 1033
	/* cas */ 2,
	3, MatW, MatW, MatRefBase, 0x4, 0x12, // => 1042
	3, MatX, MatX, MatRefBase, 0x4, 0x1a, // => 1050
	/* casa */ 2,
	3, MatW, MatW, MatRefBase, 0x4, 0x22, // => 1058
	3, MatX, MatX, MatRefBase, 0x4, 0x2a, // => 1066
	/* casab */ 1,
	3, MatW, MatW, MatRefBase, 0x4, 0x32, // => 1074
	/* casah */ 1,
	3, MatW, MatW, MatRefBase, 0x4, 0x3a, // => 1082
	/* casal */ 2,
	3, MatW, MatW, MatRefBase, 0x4, 0x42, // => 1090
	3, MatX, MatX, MatRefBase, 0x4, 0x4a, // => 1098
	/* casalb */ 1,
	3, MatW, MatW, MatRefBase, 0x4, 0x52, // => 1106
	/* casalh */ 1,
	3, MatW, MatW, MatRefBase, 0x4, 0x5a, // => 1114
	/* casb */ 1,
	3, MatW, MatW, MatRefBase, 0x4, 0x62, // => 1122
	/* cash */ 1,
	3, MatW, MatW, MatRefBase, 0x4, 0x6a, // => 1130
	/* casl */ 2,
	3, MatW, MatW, MatRefBase, 0x4, 0x72, // => 1138
	3, MatX, MatX, MatRefBase, 0x4, 0x7a, // => 1146
	/* caslb */ 1,
	3, MatW, MatW, MatRefBase, 0x4, 0x82, // => 1154
	/* caslh */ 1,
	3, MatW, MatW, MatRefBase, 0x4, 0x8a, // => 1162
	/* casp */ 2,
	5, MatW, MatW, MatW, MatW, MatRefBase, 0x4, 0x92, // => 1170
	5, MatX, MatX, MatX, MatX, MatRefBase, 0x4, 0x9e, // => 1182
	/* caspa */ 2,
	5, MatW, MatW, MatW, MatW, MatRefBase, 0x4, 0xaa, // => 1194
	5, MatX, MatX, MatX, MatX, MatRefBase, 0x4, 0xb6, // => 1206
	/* caspal */ 2,
	5, MatW, MatW, MatW, MatW, MatRefBase, 0x4, 0xc2, // => 1218
	5, MatX, MatX, MatX, MatX, MatRefBase, 0x4, 0xce, // => 1230
	/* caspl */ 2,
	5, MatW, MatW, MatW, MatW, MatRefBase, 0x4, 0xda, // => 1242
	5, MatX, MatX, MatX, MatX, MatRefBase, 0x4, 0xe6, // => 1254
	/* cbnz */ 2,
	2, MatW, MatOffset, 0x4, 0xf2, // => 1266
	2, MatX, MatOffset, 0x4, 0xfa, // => 1274
	/* cbz */ 2,
	2, MatW, MatOffset, 0x5, 0x2, // => 1282
	2, MatX, MatOffset, 0x5, 0xa, // => 1290
	/* ccmn */ 4,
	4, MatW, MatImm, MatImm, MatCond, 0x5, 0x12, // => 1298
	4, MatX, MatImm, MatImm, MatCond, 0x5, 0x20, // => 1312
	4, MatW, MatW, MatImm, MatCond, 0x5, 0x2e, // => 1326
	4, MatX, MatX, MatImm, MatCond, 0x5, 0x3a, // => 1338
	/* ccmp */ 4,
	4, MatW, MatImm, MatImm, MatCond, 0x5, 0x46, // => 1350
	4, MatX, MatImm, MatImm, MatCond, 0x5, 0x54, // => 1364
	4, MatW, MatW, MatImm, MatCond, 0x5, 0x62, // => 1378
	4, MatX, MatX, MatImm, MatCond, 0x5, 0x6e, // => 1390
	/* cfinv */ 1,
	0, 0x5, 0x7a, // => 1402
	/* cfp */ 1,
	2, MatLitSymbol, byte(RCTX), MatX, 0x5, 0x7f, // => 1407
	/* cinc */ 2,
	3, MatW, MatW, MatCond, 0x5, 0x85, // => 1413
	3, MatX, MatX, MatCond, 0x5, 0x90, // => 1424
	/* cinv */ 2,
	3, MatW, MatW, MatCond, 0x5, 0x9b, // => 1435
	3, MatX, MatX, MatCond, 0x5, 0xa6, // => 1446
	/* clrex */ 2,
	1, MatImm, 0x5, 0xb1, // => 1457
	0, 0x5, 0xb9, // => 1465
	/* cls */ 5,
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x5, 0xbe, // => 1470
	2, MatV, byte(WORD), MatV, byte(WORD), 0x5, 0xc6, // => 1478
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x5, 0xce, // => 1486
	2, MatW, MatW, 0x5, 0xd6, // => 1494
	2, MatX, MatX, 0x5, 0xdd, // => 1501
	/* clz */ 5,
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x5, 0xe4, // => 1508
	2, MatV, byte(WORD), MatV, byte(WORD), 0x5, 0xec, // => 1516
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x5, 0xf4, // => 1524
	2, MatW, MatW, 0x5, 0xfc, // => 1532
	2, MatX, MatX, 0x6, 0x3, // => 1539
	/* cmeq */ 10,
	3, MatD, MatD, MatD, 0x6, 0xa, // => 1546
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x6, 0x12, // => 1554
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x6, 0x1b, // => 1563
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x6, 0x24, // => 1572
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x6, 0x2d, // => 1581
	3, MatD, MatD, MatLitInt, 0, 0x6, 0x36, // => 1590
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatLitInt, 0, 0x6, 0x3d, // => 1597
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitInt, 0, 0x6, 0x45, // => 1605
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitInt, 0, 0x6, 0x4d, // => 1613
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitInt, 0, 0x6, 0x55, // => 1621
	/* cmge */ 10,
	3, MatD, MatD, MatD, 0x6, 0x5d, // => 1629
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x6, 0x65, // => 1637
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x6, 0x6e, // => 1646
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x6, 0x77, // => 1655
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x6, 0x80, // => 1664
	3, MatD, MatD, MatLitInt, 0, 0x6, 0x89, // => 1673
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatLitInt, 0, 0x6, 0x90, // => 1680
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitInt, 0, 0x6, 0x98, // => 1688
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitInt, 0, 0x6, 0xa0, // => 1696
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitInt, 0, 0x6, 0xa8, // => 1704
	/* cmgt */ 10,
	3, MatD, MatD, MatD, 0x6, 0xb0, // => 1712
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x6, 0xb8, // => 1720
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x6, 0xc1, // => 1729
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x6, 0xca, // => 1738
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x6, 0xd3, // => 1747
	3, MatD, MatD, MatLitInt, 0, 0x6, 0xdc, // => 1756
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatLitInt, 0, 0x6, 0xe3, // => 1763
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitInt, 0, 0x6, 0xeb, // => 1771
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitInt, 0, 0x6, 0xf3, // => 1779
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitInt, 0, 0x6, 0xfb, // => 1787
	/* cmhi */ 5,
	3, MatD, MatD, MatD, 0x7, 0x3, // => 1795
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x7, 0xb, // => 1803
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x7, 0x14, // => 1812
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x7, 0x1d, // => 1821
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x7, 0x26, // => 1830
	/* cmhs */ 5,
	3, MatD, MatD, MatD, 0x7, 0x2f, // => 1839
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x7, 0x37, // => 1847
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x7, 0x40, // => 1856
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x7, 0x49, // => 1865
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x7, 0x52, // => 1874
	/* cmle */ 5,
	3, MatD, MatD, MatLitInt, 0, 0x7, 0x5b, // => 1883
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatLitInt, 0, 0x7, 0x62, // => 1890
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitInt, 0, 0x7, 0x6a, // => 1898
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitInt, 0, 0x7, 0x72, // => 1906
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitInt, 0, 0x7, 0x7a, // => 1914
	/* cmlt */ 5,
	3, MatD, MatD, MatLitInt, 0, 0x7, 0x82, // => 1922
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatLitInt, 0, 0x7, 0x89, // => 1929
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitInt, 0, 0x7, 0x91, // => 1937
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitInt, 0, 0x7, 0x99, // => 1945
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitInt, 0, 0x7, 0xa1, // => 1953
	/* cmn */ 7,
	4, MatW, MatW, MatEnd, MatMod, SymShifts, 0x7, 0xa9, // => 1961
	4, MatX, MatX, MatEnd, MatMod, SymShifts, 0x7, 0xb4, // => 1972
	4, MatWSP, MatW, MatEnd, MatMod, SymExtends, 0x7, 0xbf, // => 1983
	3, MatXSP, MatW, MatMod, SymExtendsW, 0x7, 0xcb, // => 1995
	4, MatXSP, MatX, MatEnd, MatMod, SymExtendsX, 0x7, 0xd7, // => 2007
	4, MatWSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x7, 0xe3, // => 2019
	4, MatXSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x7, 0xef, // => 2031
	/* cmp */ 7,
	4, MatW, MatW, MatEnd, MatMod, SymShifts, 0x7, 0xfb, // => 2043
	4, MatX, MatX, MatEnd, MatMod, SymShifts, 0x8, 0x6, // => 2054
	4, MatWSP, MatW, MatEnd, MatMod, SymExtends, 0x8, 0x11, // => 2065
	3, MatXSP, MatW, MatMod, SymExtendsW, 0x8, 0x1d, // => 2077
	4, MatXSP, MatX, MatEnd, MatMod, SymExtendsX, 0x8, 0x29, // => 2089
	4, MatWSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x8, 0x35, // => 2101
	4, MatXSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x8, 0x41, // => 2113
	/* cmtst */ 5,
	3, MatD, MatD, MatD, 0x8, 0x4d, // => 2125
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x8, 0x55, // => 2133
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x8, 0x5e, // => 2142
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x8, 0x67, // => 2151
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x8, 0x70, // => 2160
	/* cneg */ 2,
	3, MatW, MatW, MatCond, 0x8, 0x79, // => 2169
	3, MatX, MatX, MatCond, 0x8, 0x84, // => 2180
	/* cnt */ 1,
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x8, 0x8f, // => 2191
	/* cpp */ 1,
	2, MatLitSymbol, byte(RCTX), MatX, 0x8, 0x97, // => 2199
	/* crc32b */ 1,
	3, MatW, MatW, MatW, 0x8, 0x9d, // => 2205
	/* crc32cb */ 1,
	3, MatW, MatW, MatW, 0x8, 0xa5, // => 2213
	/* crc32ch */ 1,
	3, MatW, MatW, MatW, 0x8, 0xad, // => 2221
	/* crc32cw */ 1,
	3, MatW, MatW, MatW, 0x8, 0xb5, // => 2229
	/* crc32cx */ 1,
	3, MatW, MatW, MatX, 0x8, 0xbd, // => 2237
	/* crc32h */ 1,
	3, MatW, MatW, MatW, 0x8, 0xc5, // => 2245
	/* crc32w */ 1,
	3, MatW, MatW, MatW, 0x8, 0xcd, // => 2253
	/* crc32x */ 1,
	3, MatW, MatW, MatX, 0x8, 0xd5, // => 2261
	/* csdb */ 1,
	0, 0x8, 0xdd, // => 2269
	/* csel */ 2,
	4, MatW, MatW, MatW, MatCond, 0x8, 0xe2, // => 2274
	4, MatX, MatX, MatX, MatCond, 0x8, 0xec, // => 2284
	/* cset */ 2,
	2, MatW, MatCond, 0x8, 0xf6, // => 2294
	2, MatX, MatCond, 0x8, 0xfe, // => 2302
	/* csetm */ 2,
	2, MatW, MatCond, 0x9, 0x6, // => 2310
	2, MatX, MatCond, 0x9, 0xe, // => 2318
	/* csinc */ 2,
	4, MatW, MatW, MatW, MatCond, 0x9, 0x16, // => 2326
	4, MatX, MatX, MatX, MatCond, 0x9, 0x20, // => 2336
	/* csinv */ 2,
	4, MatW, MatW, MatW, MatCond, 0x9, 0x2a, // => 2346
	4, MatX, MatX, MatX, MatCond, 0x9, 0x34, // => 2356
	/* csneg */ 2,
	4, MatW, MatW, MatW, MatCond, 0x9, 0x3e, // => 2366
	4, MatX, MatX, MatX, MatCond, 0x9, 0x48, // => 2376
	/* dc */ 1,
	2, MatSymbol, MatX, 0x9, 0x52, // => 2386
	/* dcps1 */ 1,
	2, MatEnd, MatImm, 0x9, 0x5b, // => 2395
	/* dcps2 */ 1,
	2, MatEnd, MatImm, 0x9, 0x63, // => 2403
	/* dcps3 */ 1,
	2, MatEnd, MatImm, 0x9, 0x6b, // => 2411
	/* dmb */ 2,
	1, MatSymbol, 0x9, 0x73, // => 2419
	1, MatImm, 0x9, 0x7b, // => 2427
	/* drps */ 1,
	0, 0x9, 0x83, // => 2435
	/* dsb */ 2,
	1, MatSymbol, 0x9, 0x88, // => 2440
	1, MatImm, 0x9, 0x90, // => 2448
	/* dup */ 12,
	2, MatB, MatVElement, byte(BYTE), 0x9, 0x98, // => 2456
	2, MatH, MatVElement, byte(WORD), 0x9, 0xa2, // => 2466
	2, MatS, MatVElement, byte(DWORD), 0x9, 0xac, // => 2476
	2, MatD, MatVElement, byte(QWORD), 0x9, 0xb6, // => 2486
	2, MatV, byte(BYTE), MatVElement, byte(BYTE), 0x9, 0xc0, // => 2496
	2, MatV, byte(WORD), MatVElement, byte(WORD), 0x9, 0xcb, // => 2507
	2, MatV, byte(DWORD), MatVElement, byte(DWORD), 0x9, 0xd6, // => 2518
	2, MatVStatic, byte(QWORD), 2, MatVElement, byte(QWORD), 0x9, 0xe1, // => 2529
	2, MatV, byte(BYTE), MatW, 0x9, 0xec, // => 2540
	2, MatV, byte(WORD), MatW, 0x9, 0xf4, // => 2548
	2, MatV, byte(DWORD), MatW, 0x9, 0xfc, // => 2556
	2, MatVStatic, byte(QWORD), 2, MatX, 0xa, 0x4, // => 2564
	/* dvp */ 1,
	2, MatLitSymbol, byte(RCTX), MatX, 0xa, 0xc, // => 2572
	/* eon */ 2,
	5, MatW, MatW, MatW, MatEnd, MatMod, SymRotates, 0xa, 0x12, // => 2578
	5, MatX, MatX, MatX, MatEnd, MatMod, SymRotates, 0xa, 0x1e, // => 2590
	/* eor */ 5,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0xa, 0x2a, // => 2602
	3, MatWSP, MatW, MatImm, 0xa, 0x33, // => 2611
	3, MatXSP, MatX, MatImm, 0xa, 0x3d, // => 2621
	5, MatW, MatW, MatW, MatEnd, MatMod, SymRotates, 0xa, 0x47, // => 2631
	5, MatX, MatX, MatX, MatEnd, MatMod, SymRotates, 0xa, 0x53, // => 2643
	/* eor3 */ 1,
	4, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0xa, 0x5f, // => 2655
	/* eret */ 1,
	0, 0xa, 0x68, // => 2664
	/* eretaa */ 1,
	0, 0xa, 0x6d, // => 2669
	/* eretab */ 1,
	0, 0xa, 0x72, // => 2674
	/* esb */ 1,
	0, 0xa, 0x77, // => 2679
	/* ext */ 2,
	4, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, MatImm, 0xa, 0x7c, // => 2684
	4, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, MatImm, 0xa, 0x87, // => 2695
	/* extr */ 2,
	4, MatW, MatW, MatW, MatImm, 0xa, 0x92, // => 2706
	4, MatX, MatX, MatX, MatImm, 0xa, 0x9d, // => 2717
	/* fabd */ 6,
	3, MatH, MatH, MatH, 0xa, 0xa8, // => 2728
	3, MatS, MatS, MatS, 0xa, 0xb0, // => 2736
	3, MatD, MatD, MatD, 0xa, 0xb8, // => 2744
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0xa, 0xc0, // => 2752
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0xa, 0xc9, // => 2761
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xa, 0xd2, // => 2770
	/* fabs */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0xa, 0xdb, // => 2779
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0xa, 0xe3, // => 2787
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xa, 0xeb, // => 2795
	2, MatH, MatH, 0xa, 0xf3, // => 2803
	2, MatS, MatS, 0xa, 0xfa, // => 2810
	2, MatD, MatD, 0xb, 0x1, // => 2817
	/* facge */ 6,
	3, MatH, MatH, MatH, 0xb, 0x8, // => 2824
	3, MatS, MatS, MatS, 0xb, 0x10, // => 2832
	3, MatD, MatD, MatD, 0xb, 0x18, // => 2840
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0xb, 0x20, // => 2848
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0xb, 0x29, // => 2857
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xb, 0x32, // => 2866
	/* facgt */ 6,
	3, MatH, MatH, MatH, 0xb, 0x3b, // => 2875
	3, MatS, MatS, MatS, 0xb, 0x43, // => 2883
	3, MatD, MatD, MatD, 0xb, 0x4b, // => 2891
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0xb, 0x53, // => 2899
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0xb, 0x5c, // => 2908
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xb, 0x65, // => 2917
	/* fadd */ 6,
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0xb, 0x6e, // => 2926
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0xb, 0x77, // => 2935
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xb, 0x80, // => 2944
	3, MatH, MatH, MatH, 0xb, 0x89, // => 2953
	3, MatS, MatS, MatS, 0xb, 0x91, // => 2961
	3, MatD, MatD, MatD, 0xb, 0x99, // => 2969
	/* faddp */ 6,
	2, MatH, MatVStatic, byte(WORD), 2, 0xb, 0xa1, // => 2977
	2, MatS, MatVStatic, byte(DWORD), 2, 0xb, 0xa8, // => 2984
	2, MatD, MatVStatic, byte(QWORD), 2, 0xb, 0xaf, // => 2991
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0xb, 0xb6, // => 2998
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0xb, 0xbf, // => 3007
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xb, 0xc8, // => 3016
	/* fcadd */ 3,
	4, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), MatImm, 0xb, 0xd1, // => 3025
	4, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0xb, 0xdd, // => 3037
	4, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0xb, 0xe9, // => 3049
	/* fccmp */ 3,
	4, MatH, MatH, MatImm, MatCond, 0xb, 0xf5, // => 3061
	4, MatS, MatS, MatImm, MatCond, 0xc, 0x1, // => 3073
	4, MatD, MatD, MatImm, MatCond, 0xc, 0xd, // => 3085
	/* fccmpe */ 3,
	4, MatH, MatH, MatImm, MatCond, 0xc, 0x19, // => 3097
	4, MatS, MatS, MatImm, MatCond, 0xc, 0x25, // => 3109
	4, MatD, MatD, MatImm, MatCond, 0xc, 0x31, // => 3121
	/* fcmeq */ 12,
	3, MatH, MatH, MatH, 0xc, 0x3d, // => 3133
	3, MatS, MatS, MatS, 0xc, 0x45, // => 3141
	3, MatD, MatD, MatD, 0xc, 0x4d, // => 3149
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0xc, 0x55, // => 3157
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0xc, 0x5e, // => 3166
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xc, 0x67, // => 3175
	3, MatH, MatH, MatLitFloat, 0, 0xc, 0x70, // => 3184
	3, MatS, MatS, MatLitFloat, 0, 0xc, 0x77, // => 3191
	3, MatD, MatD, MatLitFloat, 0, 0xc, 0x7e, // => 3198
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitFloat, 0, 0xc, 0x85, // => 3205
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitFloat, 0, 0xc, 0x8d, // => 3213
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitFloat, 0, 0xc, 0x95, // => 3221
	/* fcmge */ 12,
	3, MatH, MatH, MatH, 0xc, 0x9d, // => 3229
	3, MatS, MatS, MatS, 0xc, 0xa5, // => 3237
	3, MatD, MatD, MatD, 0xc, 0xad, // => 3245
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0xc, 0xb5, // => 3253
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0xc, 0xbe, // => 3262
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xc, 0xc7, // => 3271
	3, MatH, MatH, MatLitFloat, 0, 0xc, 0xd0, // => 3280
	3, MatS, MatS, MatLitFloat, 0, 0xc, 0xd7, // => 3287
	3, MatD, MatD, MatLitFloat, 0, 0xc, 0xde, // => 3294
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitFloat, 0, 0xc, 0xe5, // => 3301
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitFloat, 0, 0xc, 0xed, // => 3309
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitFloat, 0, 0xc, 0xf5, // => 3317
	/* fcmgt */ 12,
	3, MatH, MatH, MatH, 0xc, 0xfd, // => 3325
	3, MatS, MatS, MatS, 0xd, 0x5, // => 3333
	3, MatD, MatD, MatD, 0xd, 0xd, // => 3341
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0xd, 0x15, // => 3349
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0xd, 0x1e, // => 3358
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xd, 0x27, // => 3367
	3, MatH, MatH, MatLitFloat, 0, 0xd, 0x30, // => 3376
	3, MatS, MatS, MatLitFloat, 0, 0xd, 0x37, // => 3383
	3, MatD, MatD, MatLitFloat, 0, 0xd, 0x3e, // => 3390
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitFloat, 0, 0xd, 0x45, // => 3397
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitFloat, 0, 0xd, 0x4d, // => 3405
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitFloat, 0, 0xd, 0x55, // => 3413
	/* fcmla */ 6,
	4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), MatImm, 0xd, 0x5d, // => 3421
	4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), MatImm, 0xd, 0x69, // => 3433
	4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), MatImm, 0xd, 0x76, // => 3446
	4, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), MatImm, 0xd, 0x84, // => 3460
	4, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0xd, 0x90, // => 3472
	4, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0xd, 0x9c, // => 3484
	/* fcmle */ 6,
	3, MatH, MatH, MatLitFloat, 0, 0xd, 0xa8, // => 3496
	3, MatS, MatS, MatLitFloat, 0, 0xd, 0xaf, // => 3503
	3, MatD, MatD, MatLitFloat, 0, 0xd, 0xb6, // => 3510
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitFloat, 0, 0xd, 0xbd, // => 3517
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitFloat, 0, 0xd, 0xc5, // => 3525
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitFloat, 0, 0xd, 0xcd, // => 3533
	/* fcmlt */ 6,
	3, MatH, MatH, MatLitFloat, 0, 0xd, 0xd5, // => 3541
	3, MatS, MatS, MatLitFloat, 0, 0xd, 0xdc, // => 3548
	3, MatD, MatD, MatLitFloat, 0, 0xd, 0xe3, // => 3555
	3, MatV, byte(WORD), MatV, byte(WORD), MatLitFloat, 0, 0xd, 0xea, // => 3562
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatLitFloat, 0, 0xd, 0xf2, // => 3570
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatLitFloat, 0, 0xd, 0xfa, // => 3578
	/* fcmp */ 6,
	2, MatH, MatH, 0xe, 0x2, // => 3586
	2, MatH, MatLitFloat, 0, 0xe, 0x9, // => 3593
	2, MatS, MatS, 0xe, 0xf, // => 3599
	2, MatS, MatLitFloat, 0, 0xe, 0x16, // => 3606
	2, MatD, MatD, 0xe, 0x1c, // => 3612
	2, MatD, MatLitFloat, 0, 0xe, 0x23, // => 3619
	/* fcmpe */ 6,
	2, MatH, MatH, 0xe, 0x29, // => 3625
	2, MatH, MatLitFloat, 0, 0xe, 0x30, // => 3632
	2, MatS, MatS, 0xe, 0x36, // => 3638
	2, MatS, MatLitFloat, 0, 0xe, 0x3d, // => 3645
	2, MatD, MatD, 0xe, 0x43, // => 3651
	2, MatD, MatLitFloat, 0, 0xe, 0x4a, // => 3658
	/* fcsel */ 3,
	4, MatH, MatH, MatH, MatCond, 0xe, 0x50, // => 3664
	4, MatS, MatS, MatS, MatCond, 0xe, 0x5a, // => 3674
	4, MatD, MatD, MatD, MatCond, 0xe, 0x64, // => 3684
	/* fcvt */ 6,
	2, MatS, MatH, 0xe, 0x6e, // => 3694
	2, MatD, MatH, 0xe, 0x75, // => 3701
	2, MatH, MatS, 0xe, 0x7c, // => 3708
	2, MatD, MatS, 0xe, 0x83, // => 3715
	2, MatH, MatD, 0xe, 0x8a, // => 3722
	2, MatS, MatD, 0xe, 0x91, // => 3729
	/* fcvtas */ 12,
	2, MatH, MatH, 0xe, 0x98, // => 3736
	2, MatS, MatS, 0xe, 0x9f, // => 3743
	2, MatD, MatD, 0xe, 0xa6, // => 3750
	2, MatV, byte(WORD), MatV, byte(WORD), 0xe, 0xad, // => 3757
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0xe, 0xb5, // => 3765
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xe, 0xbd, // => 3773
	2, MatW, MatH, 0xe, 0xc5, // => 3781
	2, MatX, MatH, 0xe, 0xcc, // => 3788
	2, MatW, MatS, 0xe, 0xd3, // => 3795
	2, MatX, MatS, 0xe, 0xda, // => 3802
	2, MatW, MatD, 0xe, 0xe1, // => 3809
	2, MatX, MatD, 0xe, 0xe8, // => 3816
	/* fcvtau */ 12,
	2, MatH, MatH, 0xe, 0xef, // => 3823
	2, MatS, MatS, 0xe, 0xf6, // => 3830
	2, MatD, MatD, 0xe, 0xfd, // => 3837
	2, MatV, byte(WORD), MatV, byte(WORD), 0xf, 0x4, // => 3844
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0xf, 0xc, // => 3852
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xf, 0x14, // => 3860
	2, MatW, MatH, 0xf, 0x1c, // => 3868
	2, MatX, MatH, 0xf, 0x23, // => 3875
	2, MatW, MatS, 0xf, 0x2a, // => 3882
	2, MatX, MatS, 0xf, 0x31, // => 3889
	2, MatW, MatD, 0xf, 0x38, // => 3896
	2, MatX, MatD, 0xf, 0x3f, // => 3903
	/* fcvtl */ 2,
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, 0xf, 0x46, // => 3910
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, 0xf, 0x4d, // => 3917
	/* fcvtl2 */ 2,
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, 0xf, 0x54, // => 3924
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, 0xf, 0x5b, // => 3931
	/* fcvtms */ 12,
	2, MatH, MatH, 0xf, 0x62, // => 3938
	2, MatS, MatS, 0xf, 0x69, // => 3945
	2, MatD, MatD, 0xf, 0x70, // => 3952
	2, MatV, byte(WORD), MatV, byte(WORD), 0xf, 0x77, // => 3959
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0xf, 0x7f, // => 3967
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xf, 0x87, // => 3975
	2, MatW, MatH, 0xf, 0x8f, // => 3983
	2, MatX, MatH, 0xf, 0x96, // => 3990
	2, MatW, MatS, 0xf, 0x9d, // => 3997
	2, MatX, MatS, 0xf, 0xa4, // => 4004
	2, MatW, MatD, 0xf, 0xab, // => 4011
	2, MatX, MatD, 0xf, 0xb2, // => 4018
	/* fcvtmu */ 12,
	2, MatH, MatH, 0xf, 0xb9, // => 4025
	2, MatS, MatS, 0xf, 0xc0, // => 4032
	2, MatD, MatD, 0xf, 0xc7, // => 4039
	2, MatV, byte(WORD), MatV, byte(WORD), 0xf, 0xce, // => 4046
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0xf, 0xd6, // => 4054
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0xf, 0xde, // => 4062
	2, MatW, MatH, 0xf, 0xe6, // => 4070
	2, MatX, MatH, 0xf, 0xed, // => 4077
	2, MatW, MatS, 0xf, 0xf4, // => 4084
	2, MatX, MatS, 0xf, 0xfb, // => 4091
	2, MatW, MatD, 0x10, 0x2, // => 4098
	2, MatX, MatD, 0x10, 0x9, // => 4105
	/* fcvtn */ 1,
	2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, 0x10, 0x10, // => 4112
	/* fcvtn2 */ 1,
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, 0x10, 0x17, // => 4119
	/* fcvtns */ 12,
	2, MatH, MatH, 0x10, 0x1e, // => 4126
	2, MatS, MatS, 0x10, 0x25, // => 4133
	2, MatD, MatD, 0x10, 0x2c, // => 4140
	2, MatV, byte(WORD), MatV, byte(WORD), 0x10, 0x33, // => 4147
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x10, 0x3b, // => 4155
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x10, 0x43, // => 4163
	2, MatW, MatH, 0x10, 0x4b, // => 4171
	2, MatX, MatH, 0x10, 0x52, // => 4178
	2, MatW, MatS, 0x10, 0x59, // => 4185
	2, MatX, MatS, 0x10, 0x60, // => 4192
	2, MatW, MatD, 0x10, 0x67, // => 4199
	2, MatX, MatD, 0x10, 0x6e, // => 4206
	/* fcvtnu */ 12,
	2, MatH, MatH, 0x10, 0x75, // => 4213
	2, MatS, MatS, 0x10, 0x7c, // => 4220
	2, MatD, MatD, 0x10, 0x83, // => 4227
	2, MatV, byte(WORD), MatV, byte(WORD), 0x10, 0x8a, // => 4234
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x10, 0x92, // => 4242
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x10, 0x9a, // => 4250
	2, MatW, MatH, 0x10, 0xa2, // => 4258
	2, MatX, MatH, 0x10, 0xa9, // => 4265
	2, MatW, MatS, 0x10, 0xb0, // => 4272
	2, MatX, MatS, 0x10, 0xb7, // => 4279
	2, MatW, MatD, 0x10, 0xbe, // => 4286
	2, MatX, MatD, 0x10, 0xc5, // => 4293
	/* fcvtps */ 12,
	2, MatH, MatH, 0x10, 0xcc, // => 4300
	2, MatS, MatS, 0x10, 0xd3, // => 4307
	2, MatD, MatD, 0x10, 0xda, // => 4314
	2, MatV, byte(WORD), MatV, byte(WORD), 0x10, 0xe1, // => 4321
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x10, 0xe9, // => 4329
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x10, 0xf1, // => 4337
	2, MatW, MatH, 0x10, 0xf9, // => 4345
	2, MatX, MatH, 0x11, 0x0, // => 4352
	2, MatW, MatS, 0x11, 0x7, // => 4359
	2, MatX, MatS, 0x11, 0xe, // => 4366
	2, MatW, MatD, 0x11, 0x15, // => 4373
	2, MatX, MatD, 0x11, 0x1c, // => 4380
	/* fcvtpu */ 12,
	2, MatH, MatH, 0x11, 0x23, // => 4387
	2, MatS, MatS, 0x11, 0x2a, // => 4394
	2, MatD, MatD, 0x11, 0x31, // => 4401
	2, MatV, byte(WORD), MatV, byte(WORD), 0x11, 0x38, // => 4408
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x11, 0x40, // => 4416
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x11, 0x48, // => 4424
	2, MatW, MatH, 0x11, 0x50, // => 4432
	2, MatX, MatH, 0x11, 0x57, // => 4439
	2, MatW, MatS, 0x11, 0x5e, // => 4446
	2, MatX, MatS, 0x11, 0x65, // => 4453
	2, MatW, MatD, 0x11, 0x6c, // => 4460
	2, MatX, MatD, 0x11, 0x73, // => 4467
	/* fcvtxn */ 2,
	2, MatS, MatD, 0x11, 0x7a, // => 4474
	2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, 0x11, 0x81, // => 4481
	/* fcvtxn2 */ 1,
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, 0x11, 0x88, // => 4488
	/* fcvtzs */ 24,
	3, MatH, MatH, MatImm, 0x11, 0x8f, // => 4495
	3, MatS, MatS, MatImm, 0x11, 0x9c, // => 4508
	3, MatD, MatD, MatImm, 0x11, 0xa9, // => 4521
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x11, 0xb6, // => 4534
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x11, 0xc2, // => 4546
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x11, 0xce, // => 4558
	2, MatH, MatH, 0x11, 0xda, // => 4570
	2, MatS, MatS, 0x11, 0xe1, // => 4577
	2, MatD, MatD, 0x11, 0xe8, // => 4584
	2, MatV, byte(WORD), MatV, byte(WORD), 0x11, 0xef, // => 4591
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x11, 0xf7, // => 4599
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x11, 0xff, // => 4607
	3, MatW, MatH, MatImm, 0x12, 0x7, // => 4615
	3, MatX, MatH, MatImm, 0x12, 0x14, // => 4628
	3, MatW, MatS, MatImm, 0x12, 0x1f, // => 4639
	3, MatX, MatS, MatImm, 0x12, 0x2c, // => 4652
	3, MatW, MatD, MatImm, 0x12, 0x37, // => 4663
	3, MatX, MatD, MatImm, 0x12, 0x44, // => 4676
	2, MatW, MatH, 0x12, 0x4f, // => 4687
	2, MatX, MatH, 0x12, 0x56, // => 4694
	2, MatW, MatS, 0x12, 0x5d, // => 4701
	2, MatX, MatS, 0x12, 0x64, // => 4708
	2, MatW, MatD, 0x12, 0x6b, // => 4715
	2, MatX, MatD, 0x12, 0x72, // => 4722
	/* fcvtzu */ 24,
	3, MatH, MatH, MatImm, 0x12, 0x79, // => 4729
	3, MatS, MatS, MatImm, 0x12, 0x86, // => 4742
	3, MatD, MatD, MatImm, 0x12, 0x93, // => 4755
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x12, 0xa0, // => 4768
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x12, 0xac, // => 4780
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x12, 0xb8, // => 4792
	2, MatH, MatH, 0x12, 0xc4, // => 4804
	2, MatS, MatS, 0x12, 0xcb, // => 4811
	2, MatD, MatD, 0x12, 0xd2, // => 4818
	2, MatV, byte(WORD), MatV, byte(WORD), 0x12, 0xd9, // => 4825
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x12, 0xe1, // => 4833
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x12, 0xe9, // => 4841
	3, MatW, MatH, MatImm, 0x12, 0xf1, // => 4849
	3, MatX, MatH, MatImm, 0x12, 0xfe, // => 4862
	3, MatW, MatS, MatImm, 0x13, 0x9, // => 4873
	3, MatX, MatS, MatImm, 0x13, 0x16, // => 4886
	3, MatW, MatD, MatImm, 0x13, 0x21, // => 4897
	3, MatX, MatD, MatImm, 0x13, 0x2e, // => 4910
	2, MatW, MatH, 0x13, 0x39, // => 4921
	2, MatX, MatH, 0x13, 0x40, // => 4928
	2, MatW, MatS, 0x13, 0x47, // => 4935
	2, MatX, MatS, 0x13, 0x4e, // => 4942
	2, MatW, MatD, 0x13, 0x55, // => 4949
	2, MatX, MatD, 0x13, 0x5c, // => 4956
	/* fdiv */ 6,
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x13, 0x63, // => 4963
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x13, 0x6c, // => 4972
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x13, 0x75, // => 4981
	3, MatH, MatH, MatH, 0x13, 0x7e, // => 4990
	3, MatS, MatS, MatS, 0x13, 0x86, // => 4998
	3, MatD, MatD, MatD, 0x13, 0x8e, // => 5006
	/* fjcvtzs */ 1,
	2, MatW, MatD, 0x13, 0x96, // => 5014
	/* fmadd */ 3,
	4, MatH, MatH, MatH, MatH, 0x13, 0x9d, // => 5021
	4, MatS, MatS, MatS, MatS, 0x13, 0xa6, // => 5030
	4, MatD, MatD, MatD, MatD, 0x13, 0xaf, // => 5039
	/* fmax */ 6,
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x13, 0xb8, // => 5048
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x13, 0xc1, // => 5057
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x13, 0xca, // => 5066
	3, MatH, MatH, MatH, 0x13, 0xd3, // => 5075
	3, MatS, MatS, MatS, 0x13, 0xdb, // => 5083
	3, MatD, MatD, MatD, 0x13, 0xe3, // => 5091
	/* fmaxnm */ 6,
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x13, 0xeb, // => 5099
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x13, 0xf4, // => 5108
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x13, 0xfd, // => 5117
	3, MatH, MatH, MatH, 0x14, 0x6, // => 5126
	3, MatS, MatS, MatS, 0x14, 0xe, // => 5134
	3, MatD, MatD, MatD, 0x14, 0x16, // => 5142
	/* fmaxnmp */ 6,
	2, MatH, MatVStatic, byte(WORD), 2, 0x14, 0x1e, // => 5150
	2, MatS, MatVStatic, byte(DWORD), 2, 0x14, 0x25, // => 5157
	2, MatD, MatVStatic, byte(QWORD), 2, 0x14, 0x2c, // => 5164
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x14, 0x33, // => 5171
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x14, 0x3c, // => 5180
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x14, 0x45, // => 5189
	/* fmaxnmv */ 2,
	2, MatH, MatV, byte(WORD), 0x14, 0x4e, // => 5198
	2, MatS, MatVStatic, byte(DWORD), 4, 0x14, 0x56, // => 5206
	/* fmaxp */ 6,
	2, MatH, MatVStatic, byte(WORD), 2, 0x14, 0x5e, // => 5214
	2, MatS, MatVStatic, byte(DWORD), 2, 0x14, 0x65, // => 5221
	2, MatD, MatVStatic, byte(QWORD), 2, 0x14, 0x6c, // => 5228
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x14, 0x73, // => 5235
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x14, 0x7c, // => 5244
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x14, 0x85, // => 5253
	/* fmaxv */ 2,
	2, MatH, MatV, byte(WORD), 0x14, 0x8e, // => 5262
	2, MatS, MatVStatic, byte(DWORD), 4, 0x14, 0x96, // => 5270
	/* fmin */ 6,
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x14, 0x9e, // => 5278
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x14, 0xa7, // => 5287
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x14, 0xb0, // => 5296
	3, MatH, MatH, MatH, 0x14, 0xb9, // => 5305
	3, MatS, MatS, MatS, 0x14, 0xc1, // => 5313
	3, MatD, MatD, MatD, 0x14, 0xc9, // => 5321
	/* fminnm */ 6,
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x14, 0xd1, // => 5329
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x14, 0xda, // => 5338
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x14, 0xe3, // => 5347
	3, MatH, MatH, MatH, 0x14, 0xec, // => 5356
	3, MatS, MatS, MatS, 0x14, 0xf4, // => 5364
	3, MatD, MatD, MatD, 0x14, 0xfc, // => 5372
	/* fminnmp */ 6,
	2, MatH, MatVStatic, byte(WORD), 2, 0x15, 0x4, // => 5380
	2, MatS, MatVStatic, byte(DWORD), 2, 0x15, 0xb, // => 5387
	2, MatD, MatVStatic, byte(QWORD), 2, 0x15, 0x12, // => 5394
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x15, 0x19, // => 5401
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x15, 0x22, // => 5410
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x15, 0x2b, // => 5419
	/* fminnmv */ 2,
	2, MatH, MatV, byte(WORD), 0x15, 0x34, // => 5428
	2, MatS, MatVStatic, byte(DWORD), 4, 0x15, 0x3c, // => 5436
	/* fminp */ 6,
	2, MatH, MatVStatic, byte(WORD), 2, 0x15, 0x44, // => 5444
	2, MatS, MatVStatic, byte(DWORD), 2, 0x15, 0x4b, // => 5451
	2, MatD, MatVStatic, byte(QWORD), 2, 0x15, 0x52, // => 5458
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x15, 0x59, // => 5465
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x15, 0x62, // => 5474
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x15, 0x6b, // => 5483
	/* fminv */ 2,
	2, MatH, MatV, byte(WORD), 0x15, 0x74, // => 5492
	2, MatS, MatVStatic, byte(DWORD), 4, 0x15, 0x7c, // => 5500
	/* fmla */ 9,
	3, MatH, MatH, MatVElement, byte(WORD), 0x15, 0x84, // => 5508
	3, MatS, MatS, MatVElement, byte(DWORD), 0x15, 0x8e, // => 5518
	3, MatD, MatD, MatVElement, byte(QWORD), 0x15, 0x98, // => 5528
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x15, 0xa2, // => 5538
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x15, 0xad, // => 5549
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVElement, byte(QWORD), 0x15, 0xb8, // => 5560
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x15, 0xc3, // => 5571
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x15, 0xcc, // => 5580
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x15, 0xd5, // => 5589
	/* fmlal */ 4,
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(WORD), 2, MatVElement, byte(WORD), 0x15, 0xde, // => 5598
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x15, 0xe8, // => 5608
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(WORD), 2, MatVStatic, byte(WORD), 2, 0x15, 0xf2, // => 5618
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x15, 0xfa, // => 5626
	/* fmlal2 */ 4,
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(WORD), 2, MatVElement, byte(WORD), 0x16, 0x2, // => 5634
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x16, 0xc, // => 5644
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(WORD), 2, MatVStatic, byte(WORD), 2, 0x16, 0x16, // => 5654
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x16, 0x1e, // => 5662
	/* fmls */ 9,
	3, MatH, MatH, MatVElement, byte(WORD), 0x16, 0x26, // => 5670
	3, MatS, MatS, MatVElement, byte(DWORD), 0x16, 0x30, // => 5680
	3, MatD, MatD, MatVElement, byte(QWORD), 0x16, 0x3a, // => 5690
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x16, 0x44, // => 5700
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x16, 0x4f, // => 5711
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVElement, byte(QWORD), 0x16, 0x5a, // => 5722
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x16, 0x65, // => 5733
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x16, 0x6e, // => 5742
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x16, 0x77, // => 5751
	/* fmlsl */ 4,
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(WORD), 2, MatVElement, byte(WORD), 0x16, 0x80, // => 5760
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x16, 0x8a, // => 5770
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(WORD), 2, MatVStatic, byte(WORD), 2, 0x16, 0x94, // => 5780
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x16, 0x9c, // => 5788
	/* fmlsl2 */ 4,
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(WORD), 2, MatVElement, byte(WORD), 0x16, 0xa4, // => 5796
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x16, 0xae, // => 5806
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(WORD), 2, MatVStatic, byte(WORD), 2, 0x16, 0xb8, // => 5816
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x16, 0xc0, // => 5824
	/* fmov */ 19,
	2, MatV, byte(WORD), MatFloat, 0x16, 0xc8, // => 5832
	2, MatV, byte(DWORD), MatFloat, 0x16, 0xd2, // => 5842
	2, MatVStatic, byte(QWORD), 2, MatFloat, 0x16, 0xdc, // => 5852
	2, MatH, MatH, 0x16, 0xe5, // => 5861
	2, MatS, MatS, 0x16, 0xec, // => 5868
	2, MatD, MatD, 0x16, 0xf3, // => 5875
	2, MatW, MatH, 0x16, 0xfa, // => 5882
	2, MatX, MatH, 0x17, 0x1, // => 5889
	2, MatH, MatW, 0x17, 0x8, // => 5896
	2, MatS, MatW, 0x17, 0xf, // => 5903
	2, MatW, MatS, 0x17, 0x16, // => 5910
	2, MatH, MatX, 0x17, 0x1d, // => 5917
	2, MatD, MatX, 0x17, 0x24, // => 5924
	2, MatVElementStatic, byte(QWORD), 1, MatX, 0x17, 0x2b, // => 5931
	2, MatX, MatD, 0x17, 0x32, // => 5938
	2, MatX, MatVElementStatic, byte(QWORD), 1, 0x17, 0x39, // => 5945
	2, MatH, MatFloat, 0x17, 0x40, // => 5952
	2, MatS, MatFloat, 0x17, 0x49, // => 5961
	2, MatD, MatFloat, 0x17, 0x52, // => 5970
	/* fmsub */ 3,
	4, MatH, MatH, MatH, MatH, 0x17, 0x5b, // => 5979
	4, MatS, MatS, MatS, MatS, 0x17, 0x64, // => 5988
	4, MatD, MatD, MatD, MatD, 0x17, 0x6d, // => 5997
	/* fmul */ 12,
	3, MatH, MatH, MatVElement, byte(WORD), 0x17, 0x76, // => 6006
	3, MatS, MatS, MatVElement, byte(DWORD), 0x17, 0x80, // => 6016
	3, MatD, MatD, MatVElement, byte(QWORD), 0x17, 0x8a, // => 6026
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x17, 0x94, // => 6036
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x17, 0x9f, // => 6047
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVElement, byte(QWORD), 0x17, 0xaa, // => 6058
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x17, 0xb5, // => 6069
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x17, 0xbe, // => 6078
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x17, 0xc7, // => 6087
	3, MatH, MatH, MatH, 0x17, 0xd0, // => 6096
	3, MatS, MatS, MatS, 0x17, 0xd8, // => 6104
	3, MatD, MatD, MatD, 0x17, 0xe0, // => 6112
	/* fmulx */ 12,
	3, MatH, MatH, MatVElement, byte(WORD), 0x17, 0xe8, // => 6120
	3, MatS, MatS, MatVElement, byte(DWORD), 0x17, 0xf2, // => 6130
	3, MatD, MatD, MatVElement, byte(QWORD), 0x17, 0xfc, // => 6140
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x18, 0x6, // => 6150
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x18, 0x11, // => 6161
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVElement, byte(QWORD), 0x18, 0x1c, // => 6172
	3, MatH, MatH, MatH, 0x18, 0x27, // => 6183
	3, MatS, MatS, MatS, 0x18, 0x2f, // => 6191
	3, MatD, MatD, MatD, 0x18, 0x37, // => 6199
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x18, 0x3f, // => 6207
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x18, 0x48, // => 6216
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x18, 0x51, // => 6225
	/* fneg */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0x18, 0x5a, // => 6234
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x18, 0x62, // => 6242
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x18, 0x6a, // => 6250
	2, MatH, MatH, 0x18, 0x72, // => 6258
	2, MatS, MatS, 0x18, 0x79, // => 6265
	2, MatD, MatD, 0x18, 0x80, // => 6272
	/* fnmadd */ 3,
	4, MatH, MatH, MatH, MatH, 0x18, 0x87, // => 6279
	4, MatS, MatS, MatS, MatS, 0x18, 0x90, // => 6288
	4, MatD, MatD, MatD, MatD, 0x18, 0x99, // => 6297
	/* fnmsub */ 3,
	4, MatH, MatH, MatH, MatH, 0x18, 0xa2, // => 6306
	4, MatS, MatS, MatS, MatS, 0x18, 0xab, // => 6315
	4, MatD, MatD, MatD, MatD, 0x18, 0xb4, // => 6324
	/* fnmul */ 3,
	3, MatH, MatH, MatH, 0x18, 0xbd, // => 6333
	3, MatS, MatS, MatS, 0x18, 0xc5, // => 6341
	3, MatD, MatD, MatD, 0x18, 0xcd, // => 6349
	/* frecpe */ 6,
	2, MatH, MatH, 0x18, 0xd5, // => 6357
	2, MatS, MatS, 0x18, 0xdc, // => 6364
	2, MatD, MatD, 0x18, 0xe3, // => 6371
	2, MatV, byte(WORD), MatV, byte(WORD), 0x18, 0xea, // => 6378
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x18, 0xf2, // => 6386
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x18, 0xfa, // => 6394
	/* frecps */ 6,
	3, MatH, MatH, MatH, 0x19, 0x2, // => 6402
	3, MatS, MatS, MatS, 0x19, 0xa, // => 6410
	3, MatD, MatD, MatD, 0x19, 0x12, // => 6418
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x19, 0x1a, // => 6426
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x19, 0x23, // => 6435
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x19, 0x2c, // => 6444
	/* frecpx */ 3,
	2, MatH, MatH, 0x19, 0x35, // => 6453
	2, MatS, MatS, 0x19, 0x3c, // => 6460
	2, MatD, MatD, 0x19, 0x43, // => 6467
	/* frinta */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0x19, 0x4a, // => 6474
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x19, 0x52, // => 6482
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x19, 0x5a, // => 6490
	2, MatH, MatH, 0x19, 0x62, // => 6498
	2, MatS, MatS, 0x19, 0x69, // => 6505
	2, MatD, MatD, 0x19, 0x70, // => 6512
	/* frinti */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0x19, 0x77, // => 6519
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x19, 0x7f, // => 6527
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x19, 0x87, // => 6535
	2, MatH, MatH, 0x19, 0x8f, // => 6543
	2, MatS, MatS, 0x19, 0x96, // => 6550
	2, MatD, MatD, 0x19, 0x9d, // => 6557
	/* frintm */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0x19, 0xa4, // => 6564
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x19, 0xac, // => 6572
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x19, 0xb4, // => 6580
	2, MatH, MatH, 0x19, 0xbc, // => 6588
	2, MatS, MatS, 0x19, 0xc3, // => 6595
	2, MatD, MatD, 0x19, 0xca, // => 6602
	/* frintn */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0x19, 0xd1, // => 6609
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x19, 0xd9, // => 6617
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x19, 0xe1, // => 6625
	2, MatH, MatH, 0x19, 0xe9, // => 6633
	2, MatS, MatS, 0x19, 0xf0, // => 6640
	2, MatD, MatD, 0x19, 0xf7, // => 6647
	/* frintp */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0x19, 0xfe, // => 6654
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x1a, 0x6, // => 6662
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x1a, 0xe, // => 6670
	2, MatH, MatH, 0x1a, 0x16, // => 6678
	2, MatS, MatS, 0x1a, 0x1d, // => 6685
	2, MatD, MatD, 0x1a, 0x24, // => 6692
	/* frintx */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0x1a, 0x2b, // => 6699
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x1a, 0x33, // => 6707
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x1a, 0x3b, // => 6715
	2, MatH, MatH, 0x1a, 0x43, // => 6723
	2, MatS, MatS, 0x1a, 0x4a, // => 6730
	2, MatD, MatD, 0x1a, 0x51, // => 6737
	/* frintz */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0x1a, 0x58, // => 6744
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x1a, 0x60, // => 6752
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x1a, 0x68, // => 6760
	2, MatH, MatH, 0x1a, 0x70, // => 6768
	2, MatS, MatS, 0x1a, 0x77, // => 6775
	2, MatD, MatD, 0x1a, 0x7e, // => 6782
	/* frsqrte */ 6,
	2, MatH, MatH, 0x1a, 0x85, // => 6789
	2, MatS, MatS, 0x1a, 0x8c, // => 6796
	2, MatD, MatD, 0x1a, 0x93, // => 6803
	2, MatV, byte(WORD), MatV, byte(WORD), 0x1a, 0x9a, // => 6810
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x1a, 0xa2, // => 6818
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x1a, 0xaa, // => 6826
	/* frsqrts */ 6,
	3, MatH, MatH, MatH, 0x1a, 0xb2, // => 6834
	3, MatS, MatS, MatS, 0x1a, 0xba, // => 6842
	3, MatD, MatD, MatD, 0x1a, 0xc2, // => 6850
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x1a, 0xca, // => 6858
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x1a, 0xd3, // => 6867
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x1a, 0xdc, // => 6876
	/* fsqrt */ 6,
	2, MatV, byte(WORD), MatV, byte(WORD), 0x1a, 0xe5, // => 6885
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x1a, 0xed, // => 6893
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x1a, 0xf5, // => 6901
	2, MatH, MatH, 0x1a, 0xfd, // => 6909
	2, MatS, MatS, 0x1b, 0x4, // => 6916
	2, MatD, MatD, 0x1b, 0xb, // => 6923
	/* fsub */ 6,
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x1b, 0x12, // => 6930
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x1b, 0x1b, // => 6939
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x1b, 0x24, // => 6948
	3, MatH, MatH, MatH, 0x1b, 0x2d, // => 6957
	3, MatS, MatS, MatS, 0x1b, 0x35, // => 6965
	3, MatD, MatD, MatD, 0x1b, 0x3d, // => 6973
	/* hint */ 1,
	1, MatImm, 0x1b, 0x45, // => 6981
	/* hlt */ 1,
	1, MatImm, 0x1b, 0x4d, // => 6989
	/* hvc */ 1,
	1, MatImm, 0x1b, 0x55, // => 6997
	/* ic */ 2,
	2, MatLitSymbol, byte(IVAU), MatX, 0x1b, 0x5d, // => 7005
	1, MatSymbol, 0x1b, 0x63, // => 7011
	/* ins */ 8,
	2, MatVElement, byte(BYTE), MatVElement, byte(BYTE), 0x1b, 0x6b, // => 7019
	2, MatVElement, byte(WORD), MatVElement, byte(WORD), 0x1b, 0x78, // => 7032
	2, MatVElement, byte(DWORD), MatVElement, byte(DWORD), 0x1b, 0x85, // => 7045
	2, MatVElement, byte(QWORD), MatVElement, byte(QWORD), 0x1b, 0x92, // => 7058
	2, MatVElement, byte(BYTE), MatW, 0x1b, 0x9f, // => 7071
	2, MatVElement, byte(WORD), MatW, 0x1b, 0xa9, // => 7081
	2, MatVElement, byte(DWORD), MatW, 0x1b, 0xb3, // => 7091
	2, MatVElement, byte(QWORD), MatX, 0x1b, 0xbd, // => 7101
	/* isb */ 3,
	1, MatLitSymbol, byte(SY), 0x1b, 0xc7, // => 7111
	1, MatImm, 0x1b, 0xcc, // => 7116
	0, 0x1b, 0xd4, // => 7124
	/* ld1 */ 76,
	2, MatRegList, 1, byte(BYTE), MatRefBase, 0x1b, 0xd9, // => 7129
	2, MatRegList, 1, byte(WORD), MatRefBase, 0x1b, 0xe1, // => 7137
	2, MatRegList, 1, byte(DWORD), MatRefBase, 0x1b, 0xe9, // => 7145
	2, MatRegList, 1, byte(QWORD), MatRefBase, 0x1b, 0xf1, // => 7153
	2, MatRegList, 2, byte(BYTE), MatRefBase, 0x1b, 0xf9, // => 7161
	2, MatRegList, 2, byte(WORD), MatRefBase, 0x1c, 0x1, // => 7169
	2, MatRegList, 2, byte(DWORD), MatRefBase, 0x1c, 0x9, // => 7177
	2, MatRegList, 2, byte(QWORD), MatRefBase, 0x1c, 0x11, // => 7185
	2, MatRegList, 3, byte(BYTE), MatRefBase, 0x1c, 0x19, // => 7193
	2, MatRegList, 3, byte(WORD), MatRefBase, 0x1c, 0x21, // => 7201
	2, MatRegList, 3, byte(DWORD), MatRefBase, 0x1c, 0x29, // => 7209
	2, MatRegList, 3, byte(QWORD), MatRefBase, 0x1c, 0x31, // => 7217
	2, MatRegList, 4, byte(BYTE), MatRefBase, 0x1c, 0x39, // => 7225
	2, MatRegList, 4, byte(WORD), MatRefBase, 0x1c, 0x41, // => 7233
	2, MatRegList, 4, byte(DWORD), MatRefBase, 0x1c, 0x49, // => 7241
	2, MatRegList, 4, byte(QWORD), MatRefBase, 0x1c, 0x51, // => 7249
	3, MatRegListStatic, 1, byte(BYTE), 8, MatRefBase, MatLitInt, 8, 0x1c, 0x59, // => 7257
	3, MatRegListStatic, 1, byte(WORD), 4, MatRefBase, MatLitInt, 8, 0x1c, 0x60, // => 7264
	3, MatRegListStatic, 1, byte(DWORD), 2, MatRefBase, MatLitInt, 8, 0x1c, 0x67, // => 7271
	3, MatRegListStatic, 1, byte(QWORD), 1, MatRefBase, MatLitInt, 8, 0x1c, 0x6e, // => 7278
	3, MatRegListStatic, 1, byte(BYTE), 16, MatRefBase, MatLitInt, 16, 0x1c, 0x75, // => 7285
	3, MatRegListStatic, 1, byte(WORD), 8, MatRefBase, MatLitInt, 16, 0x1c, 0x7c, // => 7292
	3, MatRegListStatic, 1, byte(DWORD), 4, MatRefBase, MatLitInt, 16, 0x1c, 0x83, // => 7299
	3, MatRegListStatic, 1, byte(QWORD), 2, MatRefBase, MatLitInt, 16, 0x1c, 0x8a, // => 7306
	3, MatRegList, 1, byte(BYTE), MatRefBase, MatX, 0x1c, 0x91, // => 7313
	3, MatRegList, 1, byte(WORD), MatRefBase, MatX, 0x1c, 0x9a, // => 7322
	3, MatRegList, 1, byte(DWORD), MatRefBase, MatX, 0x1c, 0xa3, // => 7331
	3, MatRegList, 1, byte(QWORD), MatRefBase, MatX, 0x1c, 0xac, // => 7340
	3, MatRegListStatic, 2, byte(BYTE), 8, MatRefBase, MatLitInt, 16, 0x1c, 0xb5, // => 7349
	3, MatRegListStatic, 2, byte(WORD), 4, MatRefBase, MatLitInt, 16, 0x1c, 0xbc, // => 7356
	3, MatRegListStatic, 2, byte(DWORD), 2, MatRefBase, MatLitInt, 16, 0x1c, 0xc3, // => 7363
	3, MatRegListStatic, 2, byte(QWORD), 1, MatRefBase, MatLitInt, 16, 0x1c, 0xca, // => 7370
	3, MatRegListStatic, 2, byte(BYTE), 16, MatRefBase, MatLitInt, 32, 0x1c, 0xd1, // => 7377
	3, MatRegListStatic, 2, byte(WORD), 8, MatRefBase, MatLitInt, 32, 0x1c, 0xd8, // => 7384
	3, MatRegListStatic, 2, byte(DWORD), 4, MatRefBase, MatLitInt, 32, 0x1c, 0xdf, // => 7391
	3, MatRegListStatic, 2, byte(QWORD), 2, MatRefBase, MatLitInt, 32, 0x1c, 0xe6, // => 7398
	3, MatRegList, 2, byte(BYTE), MatRefBase, MatX, 0x1c, 0xed, // => 7405
	3, MatRegList, 2, byte(WORD), MatRefBase, MatX, 0x1c, 0xf6, // => 7414
	3, MatRegList, 2, byte(DWORD), MatRefBase, MatX, 0x1c, 0xff, // => 7423
	3, MatRegList, 2, byte(QWORD), MatRefBase, MatX, 0x1d, 0x8, // => 7432
	3, MatRegListStatic, 3, byte(BYTE), 8, MatRefBase, MatLitInt, 24, 0x1d, 0x11, // => 7441
	3, MatRegListStatic, 3, byte(WORD), 4, MatRefBase, MatLitInt, 24, 0x1d, 0x18, // => 7448
	3, MatRegListStatic, 3, byte(DWORD), 2, MatRefBase, MatLitInt, 24, 0x1d, 0x1f, // => 7455
	3, MatRegListStatic, 3, byte(QWORD), 1, MatRefBase, MatLitInt, 24, 0x1d, 0x26, // => 7462
	3, MatRegListStatic, 3, byte(BYTE), 16, MatRefBase, MatLitInt, 48, 0x1d, 0x2d, // => 7469
	3, MatRegListStatic, 3, byte(WORD), 8, MatRefBase, MatLitInt, 48, 0x1d, 0x34, // => 7476
	3, MatRegListStatic, 3, byte(DWORD), 4, MatRefBase, MatLitInt, 48, 0x1d, 0x3b, // => 7483
	3, MatRegListStatic, 3, byte(QWORD), 2, MatRefBase, MatLitInt, 48, 0x1d, 0x42, // => 7490
	3, MatRegList, 3, byte(BYTE), MatRefBase, MatX, 0x1d, 0x49, // => 7497
	3, MatRegList, 3, byte(WORD), MatRefBase, MatX, 0x1d, 0x52, // => 7506
	3, MatRegList, 3, byte(DWORD), MatRefBase, MatX, 0x1d, 0x5b, // => 7515
	3, MatRegList, 3, byte(QWORD), MatRefBase, MatX, 0x1d, 0x64, // => 7524
	3, MatRegListStatic, 4, byte(BYTE), 8, MatRefBase, MatLitInt, 32, 0x1d, 0x6d, // => 7533
	3, MatRegListStatic, 4, byte(WORD), 4, MatRefBase, MatLitInt, 32, 0x1d, 0x74, // => 7540
	3, MatRegListStatic, 4, byte(DWORD), 2, MatRefBase, MatLitInt, 32, 0x1d, 0x7b, // => 7547
	3, MatRegListStatic, 4, byte(QWORD), 1, MatRefBase, MatLitInt, 32, 0x1d, 0x82, // => 7554
	3, MatRegListStatic, 4, byte(BYTE), 16, MatRefBase, MatLitInt, 64, 0x1d, 0x89, // => 7561
	3, MatRegListStatic, 4, byte(WORD), 8, MatRefBase, MatLitInt, 64, 0x1d, 0x90, // => 7568
	3, MatRegListStatic, 4, byte(DWORD), 4, MatRefBase, MatLitInt, 64, 0x1d, 0x97, // => 7575
	3, MatRegListStatic, 4, byte(QWORD), 2, MatRefBase, MatLitInt, 64, 0x1d, 0x9e, // => 7582
	3, MatRegList, 4, byte(BYTE), MatRefBase, MatX, 0x1d, 0xa5, // => 7589
	3, MatRegList, 4, byte(WORD), MatRefBase, MatX, 0x1d, 0xae, // => 7598
	3, MatRegList, 4, byte(DWORD), MatRefBase, MatX, 0x1d, 0xb7, // => 7607
	3, MatRegList, 4, byte(QWORD), MatRefBase, MatX, 0x1d, 0xc0, // => 7616
	2, MatRegListElement, 1, byte(BYTE), MatRefBase, 0x1d, 0xc9, // => 7625
	2, MatRegListElement, 1, byte(WORD), MatRefBase, 0x1d, 0xd2, // => 7634
	2, MatRegListElement, 1, byte(DWORD), MatRefBase, 0x1d, 0xdb, // => 7643
	2, MatRegListElement, 1, byte(QWORD), MatRefBase, 0x1d, 0xe4, // => 7652
	3, MatRegListElement, 1, byte(BYTE), MatRefBase, MatLitInt, 1, 0x1d, 0xed, // => 7661
	3, MatRegListElement, 1, byte(BYTE), MatRefBase, MatX, 0x1d, 0xf6, // => 7670
	3, MatRegListElement, 1, byte(WORD), MatRefBase, MatLitInt, 2, 0x1e, 0x0, // => 7680
	3, MatRegListElement, 1, byte(WORD), MatRefBase, MatX, 0x1e, 0x9, // => 7689
	3, MatRegListElement, 1, byte(DWORD), MatRefBase, MatLitInt, 4, 0x1e, 0x13, // => 7699
	3, MatRegListElement, 1, byte(DWORD), MatRefBase, MatX, 0x1e, 0x1c, // => 7708
	3, MatRegListElement, 1, byte(QWORD), MatRefBase, MatLitInt, 8, 0x1e, 0x26, // => 7718
	3, MatRegListElement, 1, byte(QWORD), MatRefBase, MatX, 0x1e, 0x2f, // => 7727
	/* ld1r */ 12,
	2, MatRegList, 1, byte(BYTE), MatRefBase, 0x1e, 0x39, // => 7737
	2, MatRegList, 1, byte(WORD), MatRefBase, 0x1e, 0x41, // => 7745
	2, MatRegList, 1, byte(DWORD), MatRefBase, 0x1e, 0x49, // => 7753
	2, MatRegList, 1, byte(QWORD), MatRefBase, 0x1e, 0x51, // => 7761
	3, MatRegList, 1, byte(BYTE), MatRefBase, MatLitInt, 1, 0x1e, 0x59, // => 7769
	3, MatRegList, 1, byte(WORD), MatRefBase, MatLitInt, 2, 0x1e, 0x61, // => 7777
	3, MatRegList, 1, byte(DWORD), MatRefBase, MatLitInt, 4, 0x1e, 0x69, // => 7785
	3, MatRegList, 1, byte(QWORD), MatRefBase, MatLitInt, 8, 0x1e, 0x71, // => 7793
	3, MatRegList, 1, byte(BYTE), MatRefBase, MatX, 0x1e, 0x79, // => 7801
	3, MatRegList, 1, byte(WORD), MatRefBase, MatX, 0x1e, 0x82, // => 7810
	3, MatRegList, 1, byte(DWORD), MatRefBase, MatX, 0x1e, 0x8b, // => 7819
	3, MatRegList, 1, byte(QWORD), MatRefBase, MatX, 0x1e, 0x94, // => 7828
	/* ld2 */ 27,
	2, MatRegList, 2, byte(BYTE), MatRefBase, 0x1e, 0x9d, // => 7837
	2, MatRegList, 2, byte(WORD), MatRefBase, 0x1e, 0xa5, // => 7845
	2, MatRegList, 2, byte(DWORD), MatRefBase, 0x1e, 0xad, // => 7853
	2, MatRegListStatic, 2, byte(QWORD), 2, MatRefBase, 0x1e, 0xb5, // => 7861
	3, MatRegListStatic, 2, byte(BYTE), 8, MatRefBase, MatLitInt, 16, 0x1e, 0xbd, // => 7869
	3, MatRegListStatic, 2, byte(WORD), 4, MatRefBase, MatLitInt, 16, 0x1e, 0xc4, // => 7876
	3, MatRegListStatic, 2, byte(DWORD), 2, MatRefBase, MatLitInt, 16, 0x1e, 0xcb, // => 7883
	3, MatRegListStatic, 2, byte(BYTE), 16, MatRefBase, MatLitInt, 32, 0x1e, 0xd2, // => 7890
	3, MatRegListStatic, 2, byte(WORD), 8, MatRefBase, MatLitInt, 32, 0x1e, 0xd9, // => 7897
	3, MatRegListStatic, 2, byte(DWORD), 4, MatRefBase, MatLitInt, 32, 0x1e, 0xe0, // => 7904
	3, MatRegListStatic, 2, byte(QWORD), 2, MatRefBase, MatLitInt, 32, 0x1e, 0xe7, // => 7911
	3, MatRegList, 2, byte(BYTE), MatRefBase, MatX, 0x1e, 0xee, // => 7918
	3, MatRegList, 2, byte(WORD), MatRefBase, MatX, 0x1e, 0xf7, // => 7927
	3, MatRegList, 2, byte(DWORD), MatRefBase, MatX, 0x1f, 0x0, // => 7936
	3, MatRegListStatic, 2, byte(QWORD), 2, MatRefBase, MatX, 0x1f, 0x9, // => 7945
	2, MatRegListElement, 2, byte(BYTE), MatRefBase, 0x1f, 0x12, // => 7954
	2, MatRegListElement, 2, byte(WORD), MatRefBase, 0x1f, 0x1b, // => 7963
	2, MatRegListElement, 2, byte(DWORD), MatRefBase, 0x1f, 0x24, // => 7972
	2, MatRegListElement, 2, byte(QWORD), MatRefBase, 0x1f, 0x2d, // => 7981
	3, MatRegListElement, 2, byte(BYTE), MatRefBase, MatLitInt, 2, 0x1f, 0x36, // => 7990
	3, MatRegListElement, 2, byte(BYTE), MatRefBase, MatX, 0x1f, 0x3f, // => 7999
	3, MatRegListElement, 2, byte(WORD), MatRefBase, MatLitInt, 4, 0x1f, 0x49, // => 8009
	3, MatRegListElement, 2, byte(WORD), MatRefBase, MatX, 0x1f, 0x52, // => 8018
	3, MatRegListElement, 2, byte(DWORD), MatRefBase, MatLitInt, 8, 0x1f, 0x5c, // => 8028
	3, MatRegListElement, 2, byte(DWORD), MatRefBase, MatX, 0x1f, 0x65, // => 8037
	3, MatRegListElement, 2, byte(QWORD), MatRefBase, MatLitInt, 16, 0x1f, 0x6f, // => 8047
	3, MatRegListElement, 2, byte(QWORD), MatRefBase, MatX, 0x1f, 0x78, // => 8056
	/* ld2r */ 12,
	2, MatRegList, 2, byte(BYTE), MatRefBase, 0x1f, 0x82, // => 8066
	2, MatRegList, 2, byte(WORD), MatRefBase, 0x1f, 0x8a, // => 8074
	2, MatRegList, 2, byte(DWORD), MatRefBase, 0x1f, 0x92, // => 8082
	2, MatRegList, 2, byte(QWORD), MatRefBase, 0x1f, 0x9a, // => 8090
	3, MatRegList, 2, byte(BYTE), MatRefBase, MatLitInt, 2, 0x1f, 0xa2, // => 8098
	3, MatRegList, 2, byte(WORD), MatRefBase, MatLitInt, 4, 0x1f, 0xaa, // => 8106
	3, MatRegList, 2, byte(DWORD), MatRefBase, MatLitInt, 8, 0x1f, 0xb2, // => 8114
	3, MatRegList, 2, byte(QWORD), MatRefBase, MatLitInt, 16, 0x1f, 0xba, // => 8122
	3, MatRegList, 2, byte(BYTE), MatRefBase, MatX, 0x1f, 0xc2, // => 8130
	3, MatRegList, 2, byte(WORD), MatRefBase, MatX, 0x1f, 0xcb, // => 8139
	3, MatRegList, 2, byte(DWORD), MatRefBase, MatX, 0x1f, 0xd4, // => 8148
	3, MatRegList, 2, byte(QWORD), MatRefBase, MatX, 0x1f, 0xdd, // => 8157
	/* ld3 */ 27,
	2, MatRegList, 3, byte(BYTE), MatRefBase, 0x1f, 0xe6, // => 8166
	2, MatRegList, 3, byte(WORD), MatRefBase, 0x1f, 0xee, // => 8174
	2, MatRegList, 3, byte(DWORD), MatRefBase, 0x1f, 0xf6, // => 8182
	2, MatRegListStatic, 3, byte(QWORD), 2, MatRefBase, 0x1f, 0xfe, // => 8190
	3, MatRegListStatic, 3, byte(BYTE), 8, MatRefBase, MatLitInt, 24, 0x20, 0x6, // => 8198
	3, MatRegListStatic, 3, byte(WORD), 4, MatRefBase, MatLitInt, 24, 0x20, 0xd, // => 8205
	3, MatRegListStatic, 3, byte(DWORD), 2, MatRefBase, MatLitInt, 24, 0x20, 0x14, // => 8212
	3, MatRegListStatic, 3, byte(BYTE), 16, MatRefBase, MatLitInt, 48, 0x20, 0x1b, // => 8219
	3, MatRegListStatic, 3, byte(WORD), 8, MatRefBase, MatLitInt, 48, 0x20, 0x22, // => 8226
	3, MatRegListStatic, 3, byte(DWORD), 4, MatRefBase, MatLitInt, 48, 0x20, 0x29, // => 8233
	3, MatRegListStatic, 3, byte(QWORD), 2, MatRefBase, MatLitInt, 48, 0x20, 0x30, // => 8240
	3, MatRegList, 3, byte(BYTE), MatRefBase, MatX, 0x20, 0x37, // => 8247
	3, MatRegList, 3, byte(WORD), MatRefBase, MatX, 0x20, 0x40, // => 8256
	3, MatRegList, 3, byte(DWORD), MatRefBase, MatX, 0x20, 0x49, // => 8265
	3, MatRegListStatic, 3, byte(QWORD), 2, MatRefBase, MatX, 0x20, 0x52, // => 8274
	2, MatRegListElement, 3, byte(BYTE), MatRefBase, 0x20, 0x5b, // => 8283
	2, MatRegListElement, 3, byte(WORD), MatRefBase, 0x20, 0x64, // => 8292
	2, MatRegListElement, 3, byte(DWORD), MatRefBase, 0x20, 0x6d, // => 8301
	2, MatRegListElement, 3, byte(QWORD), MatRefBase, 0x20, 0x76, // => 8310
	3, MatRegListElement, 3, byte(BYTE), MatRefBase, MatLitInt, 3, 0x20, 0x7f, // => 8319
	3, MatRegListElement, 3, byte(BYTE), MatRefBase, MatX, 0x20, 0x88, // => 8328
	3, MatRegListElement, 3, byte(WORD), MatRefBase, MatLitInt, 6, 0x20, 0x92, // => 8338
	3, MatRegListElement, 3, byte(WORD), MatRefBase, MatX, 0x20, 0x9b, // => 8347
	3, MatRegListElement, 3, byte(DWORD), MatRefBase, MatLitInt, 12, 0x20, 0xa5, // => 8357
	3, MatRegListElement, 3, byte(DWORD), MatRefBase, MatX, 0x20, 0xae, // => 8366
	3, MatRegListElement, 3, byte(QWORD), MatRefBase, MatLitInt, 24, 0x20, 0xb8, // => 8376
	3, MatRegListElement, 3, byte(QWORD), MatRefBase, MatX, 0x20, 0xc1, // => 8385
	/* ld3r */ 12,
	2, MatRegList, 3, byte(BYTE), MatRefBase, 0x20, 0xcb, // => 8395
	2, MatRegList, 3, byte(WORD), MatRefBase, 0x20, 0xd3, // => 8403
	2, MatRegList, 3, byte(DWORD), MatRefBase, 0x20, 0xdb, // => 8411
	2, MatRegList, 3, byte(QWORD), MatRefBase, 0x20, 0xe3, // => 8419
	3, MatRegList, 3, byte(BYTE), MatRefBase, MatLitInt, 3, 0x20, 0xeb, // => 8427
	3, MatRegList, 3, byte(WORD), MatRefBase, MatLitInt, 6, 0x20, 0xf3, // => 8435
	3, MatRegList, 3, byte(DWORD), MatRefBase, MatLitInt, 12, 0x20, 0xfb, // => 8443
	3, MatRegList, 3, byte(QWORD), MatRefBase, MatLitInt, 24, 0x21, 0x3, // => 8451
	3, MatRegList, 3, byte(BYTE), MatRefBase, MatX, 0x21, 0xb, // => 8459
	3, MatRegList, 3, byte(WORD), MatRefBase, MatX, 0x21, 0x14, // => 8468
	3, MatRegList, 3, byte(DWORD), MatRefBase, MatX, 0x21, 0x1d, // => 8477
	3, MatRegList, 3, byte(QWORD), MatRefBase, MatX, 0x21, 0x26, // => 8486
	/* ld4 */ 27,
	2, MatRegList, 4, byte(BYTE), MatRefBase, 0x21, 0x2f, // => 8495
	2, MatRegList, 4, byte(WORD), MatRefBase, 0x21, 0x37, // => 8503
	2, MatRegList, 4, byte(DWORD), MatRefBase, 0x21, 0x3f, // => 8511
	2, MatRegListStatic, 4, byte(QWORD), 2, MatRefBase, 0x21, 0x47, // => 8519
	3, MatRegListStatic, 4, byte(BYTE), 8, MatRefBase, MatLitInt, 32, 0x21, 0x4f, // => 8527
	3, MatRegListStatic, 4, byte(WORD), 4, MatRefBase, MatLitInt, 32, 0x21, 0x56, // => 8534
	3, MatRegListStatic, 4, byte(DWORD), 2, MatRefBase, MatLitInt, 32, 0x21, 0x5d, // => 8541
	3, MatRegListStatic, 4, byte(BYTE), 16, MatRefBase, MatLitInt, 64, 0x21, 0x64, // => 8548
	3, MatRegListStatic, 4, byte(WORD), 8, MatRefBase, MatLitInt, 64, 0x21, 0x6b, // => 8555
	3, MatRegListStatic, 4, byte(DWORD), 4, MatRefBase, MatLitInt, 64, 0x21, 0x72, // => 8562
	3, MatRegListStatic, 4, byte(QWORD), 2, MatRefBase, MatLitInt, 64, 0x21, 0x79, // => 8569
	3, MatRegList, 4, byte(BYTE), MatRefBase, MatX, 0x21, 0x80, // => 8576
	3, MatRegList, 4, byte(WORD), MatRefBase, MatX, 0x21, 0x89, // => 8585
	3, MatRegList, 4, byte(DWORD), MatRefBase, MatX, 0x21, 0x92, // => 8594
	3, MatRegListStatic, 4, byte(QWORD), 2, MatRefBase, MatX, 0x21, 0x9b, // => 8603
	2, MatRegListElement, 4, byte(BYTE), MatRefBase, 0x21, 0xa4, // => 8612
	2, MatRegListElement, 4, byte(WORD), MatRefBase, 0x21, 0xad, // => 8621
	2, MatRegListElement, 4, byte(DWORD), MatRefBase, 0x21, 0xb6, // => 8630
	2, MatRegListElement, 4, byte(QWORD), MatRefBase, 0x21, 0xbf, // => 8639
	3, MatRegListElement, 4, byte(BYTE), MatRefBase, MatLitInt, 4, 0x21, 0xc8, // => 8648
	3, MatRegListElement, 4, byte(BYTE), MatRefBase, MatX, 0x21, 0xd1, // => 8657
	3, MatRegListElement, 4, byte(WORD), MatRefBase, MatLitInt, 8, 0x21, 0xdb, // => 8667
	3, MatRegListElement, 4, byte(WORD), MatRefBase, MatX, 0x21, 0xe4, // => 8676
	3, MatRegListElement, 4, byte(DWORD), MatRefBase, MatLitInt, 16, 0x21, 0xee, // => 8686
	3, MatRegListElement, 4, byte(DWORD), MatRefBase, MatX, 0x21, 0xf7, // => 8695
	3, MatRegListElement, 4, byte(QWORD), MatRefBase, MatLitInt, 32, 0x22, 0x1, // => 8705
	3, MatRegListElement, 4, byte(QWORD), MatRefBase, MatX, 0x22, 0xa, // => 8714
	/* ld4r */ 12,
	2, MatRegList, 4, byte(BYTE), MatRefBase, 0x22, 0x14, // => 8724
	2, MatRegList, 4, byte(WORD), MatRefBase, 0x22, 0x1c, // => 8732
	2, MatRegList, 4, byte(DWORD), MatRefBase, 0x22, 0x24, // => 8740
	2, MatRegList, 4, byte(QWORD), MatRefBase, 0x22, 0x2c, // => 8748
	3, MatRegList, 4, byte(BYTE), MatRefBase, MatLitInt, 4, 0x22, 0x34, // => 8756
	3, MatRegList, 4, byte(WORD), MatRefBase, MatLitInt, 8, 0x22, 0x3c, // => 8764
	3, MatRegList, 4, byte(DWORD), MatRefBase, MatLitInt, 16, 0x22, 0x44, // => 8772
	3, MatRegList, 4, byte(QWORD), MatRefBase, MatLitInt, 32, 0x22, 0x4c, // => 8780
	3, MatRegList, 4, byte(BYTE), MatRefBase, MatX, 0x22, 0x54, // => 8788
	3, MatRegList, 4, byte(WORD), MatRefBase, MatX, 0x22, 0x5d, // => 8797
	3, MatRegList, 4, byte(DWORD), MatRefBase, MatX, 0x22, 0x66, // => 8806
	3, MatRegList, 4, byte(QWORD), MatRefBase, MatX, 0x22, 0x6f, // => 8815
	/* ldadd */ 2,
	3, MatW, MatW, MatRefBase, 0x22, 0x78, // => 8824
	3, MatX, MatX, MatRefBase, 0x22, 0x80, // => 8832
	/* ldadda */ 2,
	3, MatW, MatW, MatRefBase, 0x22, 0x88, // => 8840
	3, MatX, MatX, MatRefBase, 0x22, 0x90, // => 8848
	/* ldaddab */ 1,
	3, MatW, MatW, MatRefBase, 0x22, 0x98, // => 8856
	/* ldaddah */ 1,
	3, MatW, MatW, MatRefBase, 0x22, 0xa0, // => 8864
	/* ldaddal */ 2,
	3, MatW, MatW, MatRefBase, 0x22, 0xa8, // => 8872
	3, MatX, MatX, MatRefBase, 0x22, 0xb0, // => 8880
	/* ldaddalb */ 1,
	3, MatW, MatW, MatRefBase, 0x22, 0xb8, // => 8888
	/* ldaddalh */ 1,
	3, MatW, MatW, MatRefBase, 0x22, 0xc0, // => 8896
	/* ldaddb */ 1,
	3, MatW, MatW, MatRefBase, 0x22, 0xc8, // => 8904
	/* ldaddh */ 1,
	3, MatW, MatW, MatRefBase, 0x22, 0xd0, // => 8912
	/* ldaddl */ 2,
	3, MatW, MatW, MatRefBase, 0x22, 0xd8, // => 8920
	3, MatX, MatX, MatRefBase, 0x22, 0xe0, // => 8928
	/* ldaddlb */ 1,
	3, MatW, MatW, MatRefBase, 0x22, 0xe8, // => 8936
	/* ldaddlh */ 1,
	3, MatW, MatW, MatRefBase, 0x22, 0xf0, // => 8944
	/* ldapr */ 2,
	2, MatW, MatRefBase, 0x22, 0xf8, // => 8952
	2, MatX, MatRefBase, 0x22, 0xff, // => 8959
	/* ldaprb */ 1,
	2, MatW, MatRefBase, 0x23, 0x6, // => 8966
	/* ldaprh */ 1,
	2, MatW, MatRefBase, 0x23, 0xd, // => 8973
	/* ldapur */ 2,
	2, MatW, MatRefOffset, 0x23, 0x14, // => 8980
	2, MatX, MatRefOffset, 0x23, 0x1c, // => 8988
	/* ldapurb */ 1,
	2, MatW, MatRefOffset, 0x23, 0x24, // => 8996
	/* ldapurh */ 1,
	2, MatW, MatRefOffset, 0x23, 0x2c, // => 9004
	/* ldapursb */ 2,
	2, MatW, MatRefOffset, 0x23, 0x34, // => 9012
	2, MatX, MatRefOffset, 0x23, 0x3c, // => 9020
	/* ldapursh */ 2,
	2, MatW, MatRefOffset, 0x23, 0x44, // => 9028
	2, MatX, MatRefOffset, 0x23, 0x4c, // => 9036
	/* ldapursw */ 1,
	2, MatX, MatRefOffset, 0x23, 0x54, // => 9044
	/* ldar */ 2,
	2, MatW, MatRefBase, 0x23, 0x5c, // => 9052
	2, MatX, MatRefBase, 0x23, 0x63, // => 9059
	/* ldarb */ 1,
	2, MatW, MatRefBase, 0x23, 0x6a, // => 9066
	/* ldarh */ 1,
	2, MatW, MatRefBase, 0x23, 0x71, // => 9073
	/* ldaxp */ 2,
	3, MatW, MatW, MatRefBase, 0x23, 0x78, // => 9080
	3, MatX, MatX, MatRefBase, 0x23, 0x80, // => 9088
	/* ldaxr */ 2,
	2, MatW, MatRefBase, 0x23, 0x88, // => 9096
	2, MatX, MatRefBase, 0x23, 0x8f, // => 9103
	/* ldaxrb */ 1,
	2, MatW, MatRefBase, 0x23, 0x96, // => 9110
	/* ldaxrh */ 1,
	2, MatW, MatRefBase, 0x23, 0x9d, // => 9117
	/* ldclr */ 2,
	3, MatW, MatW, MatRefBase, 0x23, 0xa4, // => 9124
	3, MatX, MatX, MatRefBase, 0x23, 0xac, // => 9132
	/* ldclra */ 2,
	3, MatW, MatW, MatRefBase, 0x23, 0xb4, // => 9140
	3, MatX, MatX, MatRefBase, 0x23, 0xbc, // => 9148
	/* ldclrab */ 1,
	3, MatW, MatW, MatRefBase, 0x23, 0xc4, // => 9156
	/* ldclrah */ 1,
	3, MatW, MatW, MatRefBase, 0x23, 0xcc, // => 9164
	/* ldclral */ 2,
	3, MatW, MatW, MatRefBase, 0x23, 0xd4, // => 9172
	3, MatX, MatX, MatRefBase, 0x23, 0xdc, // => 9180
	/* ldclralb */ 1,
	3, MatW, MatW, MatRefBase, 0x23, 0xe4, // => 9188
	/* ldclralh */ 1,
	3, MatW, MatW, MatRefBase, 0x23, 0xec, // => 9196
	/* ldclrb */ 1,
	3, MatW, MatW, MatRefBase, 0x23, 0xf4, // => 9204
	/* ldclrh */ 1,
	3, MatW, MatW, MatRefBase, 0x23, 0xfc, // => 9212
	/* ldclrl */ 2,
	3, MatW, MatW, MatRefBase, 0x24, 0x4, // => 9220
	3, MatX, MatX, MatRefBase, 0x24, 0xc, // => 9228
	/* ldclrlb */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x14, // => 9236
	/* ldclrlh */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x1c, // => 9244
	/* ldeor */ 2,
	3, MatW, MatW, MatRefBase, 0x24, 0x24, // => 9252
	3, MatX, MatX, MatRefBase, 0x24, 0x2c, // => 9260
	/* ldeora */ 2,
	3, MatW, MatW, MatRefBase, 0x24, 0x34, // => 9268
	3, MatX, MatX, MatRefBase, 0x24, 0x3c, // => 9276
	/* ldeorab */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x44, // => 9284
	/* ldeorah */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x4c, // => 9292
	/* ldeoral */ 2,
	3, MatW, MatW, MatRefBase, 0x24, 0x54, // => 9300
	3, MatX, MatX, MatRefBase, 0x24, 0x5c, // => 9308
	/* ldeoralb */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x64, // => 9316
	/* ldeoralh */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x6c, // => 9324
	/* ldeorb */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x74, // => 9332
	/* ldeorh */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x7c, // => 9340
	/* ldeorl */ 2,
	3, MatW, MatW, MatRefBase, 0x24, 0x84, // => 9348
	3, MatX, MatX, MatRefBase, 0x24, 0x8c, // => 9356
	/* ldeorlb */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x94, // => 9364
	/* ldeorlh */ 1,
	3, MatW, MatW, MatRefBase, 0x24, 0x9c, // => 9372
	/* ldlar */ 2,
	2, MatW, MatRefBase, 0x24, 0xa4, // => 9380
	2, MatX, MatRefBase, 0x24, 0xab, // => 9387
	/* ldlarb */ 1,
	2, MatW, MatRefBase, 0x24, 0xb2, // => 9394
	/* ldlarh */ 1,
	2, MatW, MatRefBase, 0x24, 0xb9, // => 9401
	/* ldnp */ 5,
	3, MatS, MatS, MatRefOffset, 0x24, 0xc0, // => 9408
	3, MatD, MatD, MatRefOffset, 0x24, 0xca, // => 9418
	3, MatQ, MatQ, MatRefOffset, 0x24, 0xd4, // => 9428
	3, MatW, MatW, MatRefOffset, 0x24, 0xde, // => 9438
	3, MatX, MatX, MatRefOffset, 0x24, 0xe8, // => 9448
	/* ldp */ 15,
	4, MatS, MatS, MatRefBase, MatImm, 0x24, 0xf2, // => 9458
	4, MatD, MatD, MatRefBase, MatImm, 0x24, 0xfc, // => 9468
	4, MatQ, MatQ, MatRefBase, MatImm, 0x25, 0x6, // => 9478
	3, MatS, MatS, MatRefPre, 0x25, 0x10, // => 9488
	3, MatD, MatD, MatRefPre, 0x25, 0x1a, // => 9498
	3, MatQ, MatQ, MatRefPre, 0x25, 0x24, // => 9508
	3, MatS, MatS, MatRefOffset, 0x25, 0x2e, // => 9518
	3, MatD, MatD, MatRefOffset, 0x25, 0x38, // => 9528
	3, MatQ, MatQ, MatRefOffset, 0x25, 0x42, // => 9538
	4, MatW, MatW, MatRefBase, MatImm, 0x25, 0x4c, // => 9548
	4, MatX, MatX, MatRefBase, MatImm, 0x25, 0x56, // => 9558
	3, MatW, MatW, MatRefPre, 0x25, 0x60, // => 9568
	3, MatX, MatX, MatRefPre, 0x25, 0x6a, // => 9578
	3, MatW, MatW, MatRefOffset, 0x25, 0x74, // => 9588
	3, MatX, MatX, MatRefOffset, 0x25, 0x7e, // => 9598
	/* ldpsw */ 3,
	4, MatX, MatX, MatRefBase, MatImm, 0x25, 0x88, // => 9608
	3, MatX, MatX, MatRefPre, 0x25, 0x92, // => 9618
	3, MatX, MatX, MatRefOffset, 0x25, 0x9c, // => 9628
	/* ldr */ 33,
	3, MatB, MatRefBase, MatImm, 0x25, 0xa6, // => 9638
	3, MatH, MatRefBase, MatImm, 0x25, 0xae, // => 9646
	3, MatS, MatRefBase, MatImm, 0x25, 0xb6, // => 9654
	3, MatD, MatRefBase, MatImm, 0x25, 0xbe, // => 9662
	3, MatQ, MatRefBase, MatImm, 0x25, 0xc6, // => 9670
	2, MatB, MatRefPre, 0x25, 0xce, // => 9678
	2, MatH, MatRefPre, 0x25, 0xd6, // => 9686
	2, MatS, MatRefPre, 0x25, 0xde, // => 9694
	2, MatD, MatRefPre, 0x25, 0xe6, // => 9702
	2, MatQ, MatRefPre, 0x25, 0xee, // => 9710
	2, MatB, MatRefOffset, 0x25, 0xf6, // => 9718
	2, MatH, MatRefOffset, 0x26, 0x0, // => 9728
	2, MatS, MatRefOffset, 0x26, 0xb, // => 9739
	2, MatD, MatRefOffset, 0x26, 0x16, // => 9750
	2, MatQ, MatRefOffset, 0x26, 0x21, // => 9761
	3, MatW, MatRefBase, MatImm, 0x26, 0x2c, // => 9772
	3, MatX, MatRefBase, MatImm, 0x26, 0x34, // => 9780
	2, MatW, MatRefPre, 0x26, 0x3c, // => 9788
	2, MatX, MatRefPre, 0x26, 0x44, // => 9796
	2, MatW, MatRefOffset, 0x26, 0x4c, // => 9804
	2, MatX, MatRefOffset, 0x26, 0x57, // => 9815
	2, MatS, MatOffset, 0x26, 0x62, // => 9826
	2, MatD, MatOffset, 0x26, 0x6a, // => 9834
	2, MatQ, MatOffset, 0x26, 0x72, // => 9842
	2, MatW, MatOffset, 0x26, 0x7a, // => 9850
	2, MatX, MatOffset, 0x26, 0x82, // => 9858
	2, MatB, MatRefIndex, 0x26, 0x8a, // => 9866
	2, MatH, MatRefIndex, 0x26, 0x96, // => 9878
	2, MatS, MatRefIndex, 0x26, 0xa2, // => 9890
	2, MatD, MatRefIndex, 0x26, 0xae, // => 9902
	2, MatQ, MatRefIndex, 0x26, 0xba, // => 9914
	2, MatW, MatRefIndex, 0x26, 0xc6, // => 9926
	2, MatX, MatRefIndex, 0x26, 0xd2, // => 9938
	/* ldraa */ 2,
	2, MatX, MatRefOffset, 0x26, 0xde, // => 9950
	2, MatX, MatRefPre, 0x26, 0xef, // => 9967
	/* ldrab */ 2,
	2, MatX, MatRefOffset, 0x27, 0x0, // => 9984
	2, MatX, MatRefPre, 0x27, 0x11, // => 10001
	/* ldrb */ 4,
	3, MatW, MatRefBase, MatImm, 0x27, 0x22, // => 10018
	2, MatW, MatRefPre, 0x27, 0x2a, // => 10026
	2, MatW, MatRefOffset, 0x27, 0x32, // => 10034
	2, MatW, MatRefIndex, 0x27, 0x3c, // => 10044
	/* ldrh */ 4,
	3, MatW, MatRefBase, MatImm, 0x27, 0x48, // => 10056
	2, MatW, MatRefPre, 0x27, 0x50, // => 10064
	2, MatW, MatRefOffset, 0x27, 0x58, // => 10072
	2, MatW, MatRefIndex, 0x27, 0x63, // => 10083
	/* ldrsb */ 8,
	3, MatW, MatRefBase, MatImm, 0x27, 0x6f, // => 10095
	3, MatX, MatRefBase, MatImm, 0x27, 0x77, // => 10103
	2, MatW, MatRefPre, 0x27, 0x7f, // => 10111
	2, MatX, MatRefPre, 0x27, 0x87, // => 10119
	2, MatW, MatRefOffset, 0x27, 0x8f, // => 10127
	2, MatX, MatRefOffset, 0x27, 0x99, // => 10137
	2, MatW, MatRefIndex, 0x27, 0xa3, // => 10147
	2, MatX, MatRefIndex, 0x27, 0xaf, // => 10159
	/* ldrsh */ 8,
	3, MatW, MatRefBase, MatImm, 0x27, 0xbb, // => 10171
	3, MatX, MatRefBase, MatImm, 0x27, 0xc3, // => 10179
	2, MatW, MatRefPre, 0x27, 0xcb, // => 10187
	2, MatX, MatRefPre, 0x27, 0xd3, // => 10195
	2, MatW, MatRefOffset, 0x27, 0xdb, // => 10203
	2, MatX, MatRefOffset, 0x27, 0xe6, // => 10214
	2, MatW, MatRefIndex, 0x27, 0xf1, // => 10225
	2, MatX, MatRefIndex, 0x27, 0xfd, // => 10237
	/* ldrsw */ 5,
	3, MatX, MatRefBase, MatImm, 0x28, 0x9, // => 10249
	2, MatX, MatRefPre, 0x28, 0x11, // => 10257
	2, MatX, MatRefOffset, 0x28, 0x19, // => 10265
	2, MatX, MatOffset, 0x28, 0x24, // => 10276
	2, MatX, MatRefIndex, 0x28, 0x2c, // => 10284
	/* ldset */ 2,
	3, MatW, MatW, MatRefBase, 0x28, 0x38, // => 10296
	3, MatX, MatX, MatRefBase, 0x28, 0x40, // => 10304
	/* ldseta */ 2,
	3, MatW, MatW, MatRefBase, 0x28, 0x48, // => 10312
	3, MatX, MatX, MatRefBase, 0x28, 0x50, // => 10320
	/* ldsetab */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0x58, // => 10328
	/* ldsetah */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0x60, // => 10336
	/* ldsetal */ 2,
	3, MatW, MatW, MatRefBase, 0x28, 0x68, // => 10344
	3, MatX, MatX, MatRefBase, 0x28, 0x70, // => 10352
	/* ldsetalb */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0x78, // => 10360
	/* ldsetalh */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0x80, // => 10368
	/* ldsetb */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0x88, // => 10376
	/* ldseth */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0x90, // => 10384
	/* ldsetl */ 2,
	3, MatW, MatW, MatRefBase, 0x28, 0x98, // => 10392
	3, MatX, MatX, MatRefBase, 0x28, 0xa0, // => 10400
	/* ldsetlb */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0xa8, // => 10408
	/* ldsetlh */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0xb0, // => 10416
	/* ldsmax */ 2,
	3, MatW, MatW, MatRefBase, 0x28, 0xb8, // => 10424
	3, MatX, MatX, MatRefBase, 0x28, 0xc0, // => 10432
	/* ldsmaxa */ 2,
	3, MatW, MatW, MatRefBase, 0x28, 0xc8, // => 10440
	3, MatX, MatX, MatRefBase, 0x28, 0xd0, // => 10448
	/* ldsmaxab */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0xd8, // => 10456
	/* ldsmaxah */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0xe0, // => 10464
	/* ldsmaxal */ 2,
	3, MatW, MatW, MatRefBase, 0x28, 0xe8, // => 10472
	3, MatX, MatX, MatRefBase, 0x28, 0xf0, // => 10480
	/* ldsmaxalb */ 1,
	3, MatW, MatW, MatRefBase, 0x28, 0xf8, // => 10488
	/* ldsmaxalh */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x0, // => 10496
	/* ldsmaxb */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x8, // => 10504
	/* ldsmaxh */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x10, // => 10512
	/* ldsmaxl */ 2,
	3, MatW, MatW, MatRefBase, 0x29, 0x18, // => 10520
	3, MatX, MatX, MatRefBase, 0x29, 0x20, // => 10528
	/* ldsmaxlb */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x28, // => 10536
	/* ldsmaxlh */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x30, // => 10544
	/* ldsmin */ 2,
	3, MatW, MatW, MatRefBase, 0x29, 0x38, // => 10552
	3, MatX, MatX, MatRefBase, 0x29, 0x40, // => 10560
	/* ldsmina */ 2,
	3, MatW, MatW, MatRefBase, 0x29, 0x48, // => 10568
	3, MatX, MatX, MatRefBase, 0x29, 0x50, // => 10576
	/* ldsminab */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x58, // => 10584
	/* ldsminah */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x60, // => 10592
	/* ldsminal */ 2,
	3, MatW, MatW, MatRefBase, 0x29, 0x68, // => 10600
	3, MatX, MatX, MatRefBase, 0x29, 0x70, // => 10608
	/* ldsminalb */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x78, // => 10616
	/* ldsminalh */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x80, // => 10624
	/* ldsminb */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x88, // => 10632
	/* ldsminh */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0x90, // => 10640
	/* ldsminl */ 2,
	3, MatW, MatW, MatRefBase, 0x29, 0x98, // => 10648
	3, MatX, MatX, MatRefBase, 0x29, 0xa0, // => 10656
	/* ldsminlb */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0xa8, // => 10664
	/* ldsminlh */ 1,
	3, MatW, MatW, MatRefBase, 0x29, 0xb0, // => 10672
	/* ldtr */ 2,
	2, MatW, MatRefOffset, 0x29, 0xb8, // => 10680
	2, MatX, MatRefOffset, 0x29, 0xc0, // => 10688
	/* ldtrb */ 1,
	2, MatW, MatRefOffset, 0x29, 0xc8, // => 10696
	/* ldtrh */ 1,
	2, MatW, MatRefOffset, 0x29, 0xd0, // => 10704
	/* ldtrsb */ 2,
	2, MatW, MatRefOffset, 0x29, 0xd8, // => 10712
	2, MatX, MatRefOffset, 0x29, 0xe0, // => 10720
	/* ldtrsh */ 2,
	2, MatW, MatRefOffset, 0x29, 0xe8, // => 10728
	2, MatX, MatRefOffset, 0x29, 0xf0, // => 10736
	/* ldtrsw */ 1,
	2, MatX, MatRefOffset, 0x29, 0xf8, // => 10744
	/* ldumax */ 2,
	3, MatW, MatW, MatRefBase, 0x2a, 0x0, // => 10752
	3, MatX, MatX, MatRefBase, 0x2a, 0x8, // => 10760
	/* ldumaxa */ 2,
	3, MatW, MatW, MatRefBase, 0x2a, 0x10, // => 10768
	3, MatX, MatX, MatRefBase, 0x2a, 0x18, // => 10776
	/* ldumaxab */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0x20, // => 10784
	/* ldumaxah */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0x28, // => 10792
	/* ldumaxal */ 2,
	3, MatW, MatW, MatRefBase, 0x2a, 0x30, // => 10800
	3, MatX, MatX, MatRefBase, 0x2a, 0x38, // => 10808
	/* ldumaxalb */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0x40, // => 10816
	/* ldumaxalh */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0x48, // => 10824
	/* ldumaxb */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0x50, // => 10832
	/* ldumaxh */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0x58, // => 10840
	/* ldumaxl */ 2,
	3, MatW, MatW, MatRefBase, 0x2a, 0x60, // => 10848
	3, MatX, MatX, MatRefBase, 0x2a, 0x68, // => 10856
	/* ldumaxlb */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0x70, // => 10864
	/* ldumaxlh */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0x78, // => 10872
	/* ldumin */ 2,
	3, MatW, MatW, MatRefBase, 0x2a, 0x80, // => 10880
	3, MatX, MatX, MatRefBase, 0x2a, 0x88, // => 10888
	/* ldumina */ 2,
	3, MatW, MatW, MatRefBase, 0x2a, 0x90, // => 10896
	3, MatX, MatX, MatRefBase, 0x2a, 0x98, // => 10904
	/* lduminab */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0xa0, // => 10912
	/* lduminah */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0xa8, // => 10920
	/* lduminal */ 2,
	3, MatW, MatW, MatRefBase, 0x2a, 0xb0, // => 10928
	3, MatX, MatX, MatRefBase, 0x2a, 0xb8, // => 10936
	/* lduminalb */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0xc0, // => 10944
	/* lduminalh */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0xc8, // => 10952
	/* lduminb */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0xd0, // => 10960
	/* lduminh */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0xd8, // => 10968
	/* lduminl */ 2,
	3, MatW, MatW, MatRefBase, 0x2a, 0xe0, // => 10976
	3, MatX, MatX, MatRefBase, 0x2a, 0xe8, // => 10984
	/* lduminlb */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0xf0, // => 10992
	/* lduminlh */ 1,
	3, MatW, MatW, MatRefBase, 0x2a, 0xf8, // => 11000
	/* ldur */ 7,
	2, MatB, MatRefOffset, 0x2b, 0x0, // => 11008
	2, MatH, MatRefOffset, 0x2b, 0x8, // => 11016
	2, MatS, MatRefOffset, 0x2b, 0x10, // => 11024
	2, MatD, MatRefOffset, 0x2b, 0x18, // => 11032
	2, MatQ, MatRefOffset, 0x2b, 0x20, // => 11040
	2, MatW, MatRefOffset, 0x2b, 0x28, // => 11048
	2, MatX, MatRefOffset, 0x2b, 0x30, // => 11056
	/* ldurb */ 1,
	2, MatW, MatRefOffset, 0x2b, 0x38, // => 11064
	/* ldurh */ 1,
	2, MatW, MatRefOffset, 0x2b, 0x40, // => 11072
	/* ldursb */ 2,
	2, MatW, MatRefOffset, 0x2b, 0x48, // => 11080
	2, MatX, MatRefOffset, 0x2b, 0x50, // => 11088
	/* ldursh */ 2,
	2, MatW, MatRefOffset, 0x2b, 0x58, // => 11096
	2, MatX, MatRefOffset, 0x2b, 0x60, // => 11104
	/* ldursw */ 1,
	2, MatX, MatRefOffset, 0x2b, 0x68, // => 11112
	/* ldxp */ 2,
	3, MatW, MatW, MatRefBase, 0x2b, 0x70, // => 11120
	3, MatX, MatX, MatRefBase, 0x2b, 0x78, // => 11128
	/* ldxr */ 2,
	2, MatW, MatRefBase, 0x2b, 0x80, // => 11136
	2, MatX, MatRefBase, 0x2b, 0x87, // => 11143
	/* ldxrb */ 1,
	2, MatW, MatRefBase, 0x2b, 0x8e, // => 11150
	/* ldxrh */ 1,
	2, MatW, MatRefBase, 0x2b, 0x95, // => 11157
	/* lsl */ 4,
	3, MatW, MatW, MatW, 0x2b, 0x9c, // => 11164
	3, MatX, MatX, MatX, 0x2b, 0xa4, // => 11172
	3, MatW, MatW, MatImm, 0x2b, 0xac, // => 11180
	3, MatX, MatX, MatImm, 0x2b, 0xbb, // => 11195
	/* lslv */ 2,
	3, MatW, MatW, MatW, 0x2b, 0xca, // => 11210
	3, MatX, MatX, MatX, 0x2b, 0xd2, // => 11218
	/* lsr */ 4,
	3, MatW, MatW, MatW, 0x2b, 0xda, // => 11226
	3, MatX, MatX, MatX, 0x2b, 0xe2, // => 11234
	3, MatW, MatW, MatImm, 0x2b, 0xea, // => 11242
	3, MatX, MatX, MatImm, 0x2b, 0xf4, // => 11252
	/* lsrv */ 2,
	3, MatW, MatW, MatW, 0x2b, 0xfe, // => 11262
	3, MatX, MatX, MatX, 0x2c, 0x6, // => 11270
	/* madd */ 2,
	4, MatW, MatW, MatW, MatW, 0x2c, 0xe, // => 11278
	4, MatX, MatX, MatX, MatX, 0x2c, 0x17, // => 11287
	/* mla */ 5,
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x2c, 0x20, // => 11296
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x2c, 0x2b, // => 11307
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x2c, 0x36, // => 11318
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x2c, 0x3f, // => 11327
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x2c, 0x48, // => 11336
	/* mls */ 5,
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x2c, 0x51, // => 11345
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x2c, 0x5c, // => 11356
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x2c, 0x67, // => 11367
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x2c, 0x70, // => 11376
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x2c, 0x79, // => 11385
	/* mneg */ 2,
	3, MatW, MatW, MatW, 0x2c, 0x82, // => 11394
	3, MatX, MatX, MatX, 0x2c, 0x8a, // => 11402
	/* mov */ 25,
	2, MatW, MatW, 0x2c, 0x92, // => 11410
	2, MatX, MatX, 0x2c, 0x99, // => 11417
	2, MatWSP, MatWSP, 0x2c, 0xa0, // => 11424
	2, MatXSP, MatXSP, 0x2c, 0xa7, // => 11431
	2, MatB, MatVElement, byte(BYTE), 0x2c, 0xae, // => 11438
	2, MatH, MatVElement, byte(WORD), 0x2c, 0xb8, // => 11448
	2, MatS, MatVElement, byte(DWORD), 0x2c, 0xc2, // => 11458
	2, MatD, MatVElement, byte(QWORD), 0x2c, 0xcc, // => 11468
	2, MatVElement, byte(BYTE), MatVElement, byte(BYTE), 0x2c, 0xd6, // => 11478
	2, MatVElement, byte(WORD), MatVElement, byte(WORD), 0x2c, 0xe3, // => 11491
	2, MatVElement, byte(DWORD), MatVElement, byte(DWORD), 0x2c, 0xf0, // => 11504
	2, MatVElement, byte(QWORD), MatVElement, byte(QWORD), 0x2c, 0xfd, // => 11517
	2, MatVElement, byte(BYTE), MatW, 0x2d, 0xa, // => 11530
	2, MatVElement, byte(WORD), MatW, 0x2d, 0x14, // => 11540
	2, MatVElement, byte(DWORD), MatW, 0x2d, 0x1e, // => 11550
	2, MatVElement, byte(QWORD), MatX, 0x2d, 0x28, // => 11560
	3, MatLitSymbol, byte(INVERTED), MatW, MatImm, 0x2d, 0x32, // => 11570
	3, MatLitSymbol, byte(INVERTED), MatX, MatImm, 0x2d, 0x3b, // => 11579
	2, MatW, MatImm, 0x2d, 0x44, // => 11588
	2, MatX, MatImm, 0x2d, 0x4d, // => 11597
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x2d, 0x56, // => 11606
	3, MatLitSymbol, byte(LOGICAL), MatWSP, MatImm, 0x2d, 0x60, // => 11616
	3, MatLitSymbol, byte(LOGICAL), MatXSP, MatImm, 0x2d, 0x69, // => 11625
	2, MatW, MatVElement, byte(DWORD), 0x2d, 0x72, // => 11634
	2, MatX, MatVElement, byte(QWORD), 0x2d, 0x7c, // => 11644
	/* movi */ 6,
	4, MatV, byte(BYTE), MatImm, MatEnd, MatLitMod, SymLSL, 0x2d, 0x86, // => 11654
	4, MatV, byte(WORD), MatImm, MatEnd, MatLitMod, SymLSL, 0x2d, 0x9b, // => 11675
	4, MatV, byte(DWORD), MatImm, MatEnd, MatLitMod, SymLSL, 0x2d, 0xb0, // => 11696
	3, MatV, byte(DWORD), MatImm, MatLitMod, SymMSL, 0x2d, 0xc5, // => 11717
	2, MatD, MatImm, 0x2d, 0xda, // => 11738
	2, MatVStatic, byte(QWORD), 2, MatImm, 0x2d, 0xe3, // => 11747
	/* movk */ 2,
	4, MatW, MatImm, MatEnd, MatLitMod, SymLSL, 0x2d, 0xec, // => 11756
	4, MatX, MatImm, MatEnd, MatLitMod, SymLSL, 0x2d, 0xf8, // => 11768
	/* movn */ 2,
	4, MatW, MatImm, MatEnd, MatLitMod, SymLSL, 0x2e, 0x4, // => 11780
	4, MatX, MatImm, MatEnd, MatLitMod, SymLSL, 0x2e, 0x10, // => 11792
	/* movz */ 2,
	4, MatW, MatImm, MatEnd, MatLitMod, SymLSL, 0x2e, 0x1c, // => 11804
	4, MatX, MatImm, MatEnd, MatLitMod, SymLSL, 0x2e, 0x28, // => 11816
	/* mrs */ 1,
	2, MatX, MatImm, 0x2e, 0x34, // => 11828
	/* msr */ 2,
	2, MatSymbol, MatImm, 0x2e, 0x3d, // => 11837
	2, MatImm, MatX, 0x2e, 0x48, // => 11848
	/* msub */ 2,
	4, MatW, MatW, MatW, MatW, 0x2e, 0x51, // => 11857
	4, MatX, MatX, MatX, MatX, 0x2e, 0x5a, // => 11866
	/* mul */ 7,
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x2e, 0x63, // => 11875
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x2e, 0x6e, // => 11886
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x2e, 0x79, // => 11897
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x2e, 0x82, // => 11906
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x2e, 0x8b, // => 11915
	3, MatW, MatW, MatW, 0x2e, 0x94, // => 11924
	3, MatX, MatX, MatX, 0x2e, 0x9c, // => 11932
	/* mvn */ 3,
	4, MatW, MatW, MatEnd, MatMod, SymShifts, 0x2e, 0xa4, // => 11940
	4, MatX, MatX, MatEnd, MatMod, SymShifts, 0x2e, 0xaf, // => 11951
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x2e, 0xba, // => 11962
	/* mvni */ 3,
	4, MatV, byte(WORD), MatImm, MatEnd, MatLitMod, SymLSL, 0x2e, 0xc2, // => 11970
	4, MatV, byte(DWORD), MatImm, MatEnd, MatLitMod, SymLSL, 0x2e, 0xd7, // => 11991
	3, MatV, byte(DWORD), MatImm, MatLitMod, SymMSL, 0x2e, 0xec, // => 12012
	/* neg */ 7,
	4, MatW, MatW, MatEnd, MatMod, SymShifts, 0x2f, 0x1, // => 12033
	4, MatX, MatX, MatEnd, MatMod, SymShifts, 0x2f, 0xc, // => 12044
	2, MatD, MatD, 0x2f, 0x17, // => 12055
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x2f, 0x1e, // => 12062
	2, MatV, byte(WORD), MatV, byte(WORD), 0x2f, 0x26, // => 12070
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x2f, 0x2e, // => 12078
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x2f, 0x36, // => 12086
	/* negs */ 2,
	4, MatW, MatW, MatEnd, MatMod, SymShifts, 0x2f, 0x3e, // => 12094
	4, MatX, MatX, MatEnd, MatMod, SymShifts, 0x2f, 0x49, // => 12105
	/* ngc */ 2,
	2, MatW, MatW, 0x2f, 0x54, // => 12116
	2, MatX, MatX, 0x2f, 0x5b, // => 12123
	/* ngcs */ 2,
	2, MatW, MatW, 0x2f, 0x62, // => 12130
	2, MatX, MatX, 0x2f, 0x69, // => 12137
	/* nop */ 1,
	0, 0x2f, 0x70, // => 12144
	/* not */ 1,
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x2f, 0x75, // => 12149
	/* orn */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x2f, 0x7d, // => 12157
	5, MatW, MatW, MatW, MatEnd, MatMod, SymRotates, 0x2f, 0x86, // => 12166
	5, MatX, MatX, MatX, MatEnd, MatMod, SymRotates, 0x2f, 0x92, // => 12178
	/* orr */ 7,
	4, MatV, byte(WORD), MatImm, MatEnd, MatLitMod, SymLSL, 0x2f, 0x9e, // => 12190
	4, MatV, byte(DWORD), MatImm, MatEnd, MatLitMod, SymLSL, 0x2f, 0xb3, // => 12211
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x2f, 0xc8, // => 12232
	3, MatWSP, MatW, MatImm, 0x2f, 0xd1, // => 12241
	3, MatXSP, MatX, MatImm, 0x2f, 0xdb, // => 12251
	5, MatW, MatW, MatW, MatEnd, MatMod, SymRotates, 0x2f, 0xe5, // => 12261
	5, MatX, MatX, MatX, MatEnd, MatMod, SymRotates, 0x2f, 0xf1, // => 12273
	/* pacda */ 1,
	2, MatX, MatXSP, 0x2f, 0xfd, // => 12285
	/* pacdb */ 1,
	2, MatX, MatXSP, 0x30, 0x4, // => 12292
	/* pacdza */ 1,
	1, MatX, 0x30, 0xb, // => 12299
	/* pacdzb */ 1,
	1, MatX, 0x30, 0x11, // => 12305
	/* pacga */ 1,
	3, MatX, MatX, MatXSP, 0x30, 0x17, // => 12311
	/* pacia */ 1,
	2, MatX, MatXSP, 0x30, 0x1f, // => 12319
	/* pacia1716 */ 1,
	0, 0x30, 0x26, // => 12326
	/* paciasp */ 1,
	0, 0x30, 0x2b, // => 12331
	/* paciaz */ 1,
	0, 0x30, 0x30, // => 12336
	/* pacib */ 1,
	2, MatX, MatXSP, 0x30, 0x35, // => 12341
	/* pacib1716 */ 1,
	0, 0x30, 0x3c, // => 12348
	/* pacibsp */ 1,
	0, 0x30, 0x41, // => 12353
	/* pacibz */ 1,
	0, 0x30, 0x46, // => 12358
	/* paciza */ 1,
	1, MatX, 0x30, 0x4b, // => 12363
	/* pacizb */ 1,
	1, MatX, 0x30, 0x51, // => 12369
	/* pmul */ 1,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x30, 0x57, // => 12375
	/* pmull */ 2,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x30, 0x60, // => 12384
	3, MatVStatic, byte(OWORD), 1, MatVStatic, byte(QWORD), 1, MatVStatic, byte(QWORD), 1, 0x30, 0x68, // => 12392
	/* pmull2 */ 2,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x30, 0x70, // => 12400
	3, MatVStatic, byte(OWORD), 1, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x30, 0x78, // => 12408
	/* prfm */ 2,
	2, MatImm, MatOffset, 0x30, 0x80, // => 12416
	2, MatImm, MatRefIndex, 0x30, 0x8a, // => 12426
	/* prfum */ 1,
	2, MatImm, MatRefOffset, 0x30, 0x98, // => 12440
	/* psb */ 1,
	1, MatLitSymbol, byte(CSYNC), 0x30, 0xa2, // => 12450
	/* pssbb */ 1,
	0, 0x30, 0xa7, // => 12455
	/* raddhn */ 3,
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x30, 0xac, // => 12460
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x30, 0xb4, // => 12468
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x30, 0xbc, // => 12476
	/* raddhn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x30, 0xc4, // => 12484
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x30, 0xcc, // => 12492
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x30, 0xd4, // => 12500
	/* rax1 */ 1,
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x30, 0xdc, // => 12508
	/* rbit */ 3,
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x30, 0xe4, // => 12516
	2, MatW, MatW, 0x30, 0xec, // => 12524
	2, MatX, MatX, 0x30, 0xf3, // => 12531
	/* ret */ 2,
	1, MatX, 0x30, 0xfa, // => 12538
	0, 0x31, 0x0, // => 12544
	/* retaa */ 1,
	0, 0x31, 0x5, // => 12549
	/* retab */ 1,
	0, 0x31, 0xa, // => 12554
	/* rev */ 2,
	2, MatW, MatW, 0x31, 0xf, // => 12559
	2, MatX, MatX, 0x31, 0x16, // => 12566
	/* rev16 */ 3,
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x31, 0x1d, // => 12573
	2, MatW, MatW, 0x31, 0x25, // => 12581
	2, MatX, MatX, 0x31, 0x2c, // => 12588
	/* rev32 */ 3,
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x31, 0x33, // => 12595
	2, MatV, byte(WORD), MatV, byte(WORD), 0x31, 0x3b, // => 12603
	2, MatX, MatX, 0x31, 0x43, // => 12611
	/* rev64 */ 4,
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x31, 0x4a, // => 12618
	2, MatV, byte(WORD), MatV, byte(WORD), 0x31, 0x52, // => 12626
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x31, 0x5a, // => 12634
	2, MatX, MatX, 0x31, 0x62, // => 12642
	/* rmif */ 1,
	3, MatX, MatImm, MatImm, 0x31, 0x69, // => 12649
	/* ror */ 4,
	3, MatW, MatW, MatImm, 0x31, 0x75, // => 12661
	3, MatX, MatX, MatImm, 0x31, 0x81, // => 12673
	3, MatW, MatW, MatW, 0x31, 0x8d, // => 12685
	3, MatX, MatX, MatX, 0x31, 0x95, // => 12693
	/* rorv */ 2,
	3, MatW, MatW, MatW, 0x31, 0x9d, // => 12701
	3, MatX, MatX, MatX, 0x31, 0xa5, // => 12709
	/* rshrn */ 3,
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatImm, 0x31, 0xad, // => 12717
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatImm, 0x31, 0xb8, // => 12728
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x31, 0xc3, // => 12739
	/* rshrn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatImm, 0x31, 0xce, // => 12750
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatImm, 0x31, 0xd9, // => 12761
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatImm, 0x31, 0xe4, // => 12772
	/* rsubhn */ 3,
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x31, 0xef, // => 12783
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x31, 0xf7, // => 12791
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x31, 0xff, // => 12799
	/* rsubhn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x32, 0x7, // => 12807
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x32, 0xf, // => 12815
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x32, 0x17, // => 12823
	/* saba */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x32, 0x1f, // => 12831
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x32, 0x28, // => 12840
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x32, 0x31, // => 12849
	/* sabal */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x32, 0x3a, // => 12858
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x32, 0x42, // => 12866
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x32, 0x4a, // => 12874
	/* sabal2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x32, 0x52, // => 12882
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x32, 0x5a, // => 12890
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x32, 0x62, // => 12898
	/* sabd */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x32, 0x6a, // => 12906
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x32, 0x73, // => 12915
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x32, 0x7c, // => 12924
	/* sabdl */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x32, 0x85, // => 12933
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x32, 0x8d, // => 12941
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x32, 0x95, // => 12949
	/* sabdl2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x32, 0x9d, // => 12957
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x32, 0xa5, // => 12965
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x32, 0xad, // => 12973
	/* sadalp */ 3,
	2, MatV, byte(WORD), MatV, byte(BYTE), 0x32, 0xb5, // => 12981
	2, MatV, byte(DWORD), MatV, byte(WORD), 0x32, 0xbd, // => 12989
	2, MatV, byte(QWORD), MatV, byte(DWORD), 0x32, 0xc5, // => 12997
	/* saddl */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x32, 0xcd, // => 13005
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x32, 0xd5, // => 13013
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x32, 0xdd, // => 13021
	/* saddl2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x32, 0xe5, // => 13029
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x32, 0xed, // => 13037
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x32, 0xf5, // => 13045
	/* saddlp */ 3,
	2, MatV, byte(WORD), MatV, byte(BYTE), 0x32, 0xfd, // => 13053
	2, MatV, byte(DWORD), MatV, byte(WORD), 0x33, 0x5, // => 13061
	2, MatV, byte(QWORD), MatV, byte(DWORD), 0x33, 0xd, // => 13069
	/* saddlv */ 3,
	2, MatH, MatV, byte(BYTE), 0x33, 0x15, // => 13077
	2, MatS, MatV, byte(WORD), 0x33, 0x1d, // => 13085
	2, MatD, MatVStatic, byte(DWORD), 4, 0x33, 0x25, // => 13093
	/* saddw */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, 0x33, 0x2d, // => 13101
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, 0x33, 0x35, // => 13109
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, 0x33, 0x3d, // => 13117
	/* saddw2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, 0x33, 0x45, // => 13125
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, 0x33, 0x4d, // => 13133
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, 0x33, 0x55, // => 13141
	/* sb */ 1,
	0, 0x33, 0x5d, // => 13149
	/* sbc */ 2,
	3, MatW, MatW, MatW, 0x33, 0x62, // => 13154
	3, MatX, MatX, MatX, 0x33, 0x6a, // => 13162
	/* sbcs */ 2,
	3, MatW, MatW, MatW, 0x33, 0x72, // => 13170
	3, MatX, MatX, MatX, 0x33, 0x7a, // => 13178
	/* sbfiz */ 2,
	4, MatW, MatW, MatImm, MatImm, 0x33, 0x82, // => 13186
	4, MatX, MatX, MatImm, MatImm, 0x33, 0x92, // => 13202
	/* sbfm */ 2,
	4, MatW, MatW, MatImm, MatImm, 0x33, 0xa2, // => 13218
	4, MatX, MatX, MatImm, MatImm, 0x33, 0xaf, // => 13231
	/* sbfx */ 2,
	4, MatW, MatW, MatImm, MatImm, 0x33, 0xbe, // => 13246
	4, MatX, MatX, MatImm, MatImm, 0x33, 0xcd, // => 13261
	/* scvtf */ 24,
	3, MatH, MatH, MatImm, 0x33, 0xdc, // => 13276
	3, MatS, MatS, MatImm, 0x33, 0xe9, // => 13289
	3, MatD, MatD, MatImm, 0x33, 0xf6, // => 13302
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x34, 0x3, // => 13315
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x34, 0xf, // => 13327
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x34, 0x1b, // => 13339
	2, MatH, MatH, 0x34, 0x27, // => 13351
	2, MatS, MatS, 0x34, 0x2e, // => 13358
	2, MatD, MatD, 0x34, 0x35, // => 13365
	2, MatV, byte(WORD), MatV, byte(WORD), 0x34, 0x3c, // => 13372
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x34, 0x44, // => 13380
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x34, 0x4c, // => 13388
	3, MatH, MatW, MatImm, 0x34, 0x54, // => 13396
	3, MatS, MatW, MatImm, 0x34, 0x61, // => 13409
	3, MatD, MatW, MatImm, 0x34, 0x6e, // => 13422
	3, MatH, MatX, MatImm, 0x34, 0x7b, // => 13435
	3, MatS, MatX, MatImm, 0x34, 0x86, // => 13446
	3, MatD, MatX, MatImm, 0x34, 0x91, // => 13457
	2, MatH, MatW, 0x34, 0x9c, // => 13468
	2, MatS, MatW, 0x34, 0xa3, // => 13475
	2, MatD, MatW, 0x34, 0xaa, // => 13482
	2, MatH, MatX, 0x34, 0xb1, // => 13489
	2, MatS, MatX, 0x34, 0xb8, // => 13496
	2, MatD, MatX, 0x34, 0xbf, // => 13503
	/* sdiv */ 2,
	3, MatW, MatW, MatW, 0x34, 0xc6, // => 13510
	3, MatX, MatX, MatX, 0x34, 0xce, // => 13518
	/* sdot */ 4,
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(BYTE), 8, MatVStaticElement, byte(BYTE), 4, 0x34, 0xd6, // => 13526
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(BYTE), 16, MatVStaticElement, byte(BYTE), 4, 0x34, 0xe0, // => 13536
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x34, 0xea, // => 13546
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x34, 0xf2, // => 13554
	/* setf16 */ 1,
	1, MatW, 0x34, 0xfa, // => 13562
	/* setf8 */ 1,
	1, MatW, 0x35, 0x0, // => 13568
	/* sev */ 1,
	0, 0x35, 0x6, // => 13574
	/* sevl */ 1,
	0, 0x35, 0xb, // => 13579
	/* sha1c */ 1,
	3, MatQ, MatS, MatVStatic, byte(DWORD), 4, 0x35, 0x10, // => 13584
	/* sha1h */ 1,
	2, MatS, MatS, 0x35, 0x18, // => 13592
	/* sha1m */ 1,
	3, MatQ, MatS, MatVStatic, byte(DWORD), 4, 0x35, 0x1f, // => 13599
	/* sha1p */ 1,
	3, MatQ, MatS, MatVStatic, byte(DWORD), 4, 0x35, 0x27, // => 13607
	/* sha1su0 */ 1,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x35, 0x2f, // => 13615
	/* sha1su1 */ 1,
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x35, 0x37, // => 13623
	/* sha256h */ 1,
	3, MatQ, MatQ, MatVStatic, byte(DWORD), 4, 0x35, 0x3e, // => 13630
	/* sha256h2 */ 1,
	3, MatQ, MatQ, MatVStatic, byte(DWORD), 4, 0x35, 0x46, // => 13638
	/* sha256su0 */ 1,
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x35, 0x4e, // => 13646
	/* sha256su1 */ 1,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x35, 0x55, // => 13653
	/* sha512h */ 1,
	3, MatQ, MatQ, MatVStatic, byte(QWORD), 2, 0x35, 0x5d, // => 13661
	/* sha512h2 */ 1,
	3, MatQ, MatQ, MatVStatic, byte(QWORD), 2, 0x35, 0x65, // => 13669
	/* sha512su0 */ 1,
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x35, 0x6d, // => 13677
	/* sha512su1 */ 1,
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x35, 0x74, // => 13684
	/* shadd */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x35, 0x7c, // => 13692
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x35, 0x85, // => 13701
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x35, 0x8e, // => 13710
	/* shl */ 5,
	3, MatD, MatD, MatImm, 0x35, 0x97, // => 13719
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x35, 0xa1, // => 13729
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x35, 0xac, // => 13740
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x35, 0xb7, // => 13751
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x35, 0xc2, // => 13762
	/* shll */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatLitInt, 8, 0x35, 0xcd, // => 13773
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatLitInt, 16, 0x35, 0xd4, // => 13780
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatLitInt, 32, 0x35, 0xdb, // => 13787
	/* shll2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatLitInt, 8, 0x35, 0xe2, // => 13794
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatLitInt, 16, 0x35, 0xe9, // => 13801
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatLitInt, 32, 0x35, 0xf0, // => 13808
	/* shrn */ 3,
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatImm, 0x35, 0xf7, // => 13815
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatImm, 0x36, 0x2, // => 13826
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x36, 0xd, // => 13837
	/* shrn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatImm, 0x36, 0x18, // => 13848
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatImm, 0x36, 0x23, // => 13859
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatImm, 0x36, 0x2e, // => 13870
	/* shsub */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x36, 0x39, // => 13881
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x36, 0x42, // => 13890
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x36, 0x4b, // => 13899
	/* sli */ 5,
	3, MatD, MatD, MatImm, 0x36, 0x54, // => 13908
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x36, 0x5e, // => 13918
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x36, 0x69, // => 13929
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x36, 0x74, // => 13940
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x36, 0x7f, // => 13951
	/* sm3partw1 */ 1,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x36, 0x8a, // => 13962
	/* sm3partw2 */ 1,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x36, 0x92, // => 13970
	/* sm3ss1 */ 1,
	4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x36, 0x9a, // => 13978
	/* sm3tt1a */ 1,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x36, 0xa3, // => 13987
	/* sm3tt1b */ 1,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x36, 0xae, // => 13998
	/* sm3tt2a */ 1,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x36, 0xb9, // => 14009
	/* sm3tt2b */ 1,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x36, 0xc4, // => 14020
	/* sm4e */ 1,
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x36, 0xcf, // => 14031
	/* sm4ekey */ 1,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x36, 0xd6, // => 14038
	/* smaddl */ 1,
	4, MatX, MatW, MatW, MatX, 0x36, 0xde, // => 14046
	/* smax */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x36, 0xe7, // => 14055
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x36, 0xf0, // => 14064
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x36, 0xf9, // => 14073
	/* smaxp */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x37, 0x2, // => 14082
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x37, 0xb, // => 14091
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x37, 0x14, // => 14100
	/* smaxv */ 3,
	2, MatB, MatV, byte(BYTE), 0x37, 0x1d, // => 14109
	2, MatH, MatV, byte(WORD), 0x37, 0x25, // => 14117
	2, MatS, MatVStatic, byte(DWORD), 4, 0x37, 0x2d, // => 14125
	/* smc */ 1,
	1, MatImm, 0x37, 0x35, // => 14133
	/* smin */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x37, 0x3d, // => 14141
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x37, 0x46, // => 14150
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x37, 0x4f, // => 14159
	/* sminp */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x37, 0x58, // => 14168
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x37, 0x61, // => 14177
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x37, 0x6a, // => 14186
	/* sminv */ 3,
	2, MatB, MatV, byte(BYTE), 0x37, 0x73, // => 14195
	2, MatH, MatV, byte(WORD), 0x37, 0x7b, // => 14203
	2, MatS, MatVStatic, byte(DWORD), 4, 0x37, 0x83, // => 14211
	/* smlal */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x37, 0x8b, // => 14219
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVElement, byte(DWORD), 0x37, 0x95, // => 14229
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x37, 0x9f, // => 14239
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x37, 0xa7, // => 14247
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x37, 0xaf, // => 14255
	/* smlal2 */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), 0x37, 0xb7, // => 14263
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x37, 0xc1, // => 14273
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x37, 0xcb, // => 14283
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x37, 0xd3, // => 14291
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x37, 0xdb, // => 14299
	/* smlsl */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x37, 0xe3, // => 14307
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVElement, byte(DWORD), 0x37, 0xed, // => 14317
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x37, 0xf7, // => 14327
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x37, 0xff, // => 14335
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x38, 0x7, // => 14343
	/* smlsl2 */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), 0x38, 0xf, // => 14351
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x38, 0x19, // => 14361
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x38, 0x23, // => 14371
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x38, 0x2b, // => 14379
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x38, 0x33, // => 14387
	/* smnegl */ 1,
	3, MatX, MatW, MatW, 0x38, 0x3b, // => 14395
	/* smov */ 5,
	2, MatW, MatVElement, byte(BYTE), 0x38, 0x43, // => 14403
	2, MatW, MatVElement, byte(WORD), 0x38, 0x4d, // => 14413
	2, MatX, MatVElement, byte(BYTE), 0x38, 0x57, // => 14423
	2, MatX, MatVElement, byte(WORD), 0x38, 0x61, // => 14433
	2, MatX, MatVElement, byte(DWORD), 0x38, 0x6b, // => 14443
	/* smsubl */ 1,
	4, MatX, MatW, MatW, MatX, 0x38, 0x75, // => 14453
	/* smulh */ 1,
	3, MatX, MatX, MatX, 0x38, 0x7e, // => 14462
	/* smull */ 6,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x38, 0x86, // => 14470
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVElement, byte(DWORD), 0x38, 0x90, // => 14480
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x38, 0x9a, // => 14490
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x38, 0xa2, // => 14498
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x38, 0xaa, // => 14506
	3, MatX, MatW, MatW, 0x38, 0xb2, // => 14514
	/* smull2 */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), 0x38, 0xba, // => 14522
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x38, 0xc4, // => 14532
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x38, 0xce, // => 14542
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x38, 0xd6, // => 14550
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x38, 0xde, // => 14558
	/* sqabs */ 8,
	2, MatB, MatB, 0x38, 0xe6, // => 14566
	2, MatH, MatH, 0x38, 0xed, // => 14573
	2, MatS, MatS, 0x38, 0xf4, // => 14580
	2, MatD, MatD, 0x38, 0xfb, // => 14587
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x39, 0x2, // => 14594
	2, MatV, byte(WORD), MatV, byte(WORD), 0x39, 0xa, // => 14602
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x39, 0x12, // => 14610
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x39, 0x1a, // => 14618
	/* sqadd */ 8,
	3, MatB, MatB, MatB, 0x39, 0x22, // => 14626
	3, MatH, MatH, MatH, 0x39, 0x2a, // => 14634
	3, MatS, MatS, MatS, 0x39, 0x32, // => 14642
	3, MatD, MatD, MatD, 0x39, 0x3a, // => 14650
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x39, 0x42, // => 14658
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x39, 0x4b, // => 14667
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x39, 0x54, // => 14676
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x39, 0x5d, // => 14685
	/* sqdmlal */ 8,
	3, MatS, MatH, MatVElement, byte(WORD), 0x39, 0x66, // => 14694
	3, MatD, MatS, MatVElement, byte(DWORD), 0x39, 0x70, // => 14704
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x39, 0x7a, // => 14714
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVElement, byte(DWORD), 0x39, 0x84, // => 14724
	3, MatS, MatH, MatH, 0x39, 0x8e, // => 14734
	3, MatD, MatS, MatS, 0x39, 0x96, // => 14742
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x39, 0x9e, // => 14750
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x39, 0xa6, // => 14758
	/* sqdmlal2 */ 4,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), 0x39, 0xae, // => 14766
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x39, 0xb8, // => 14776
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x39, 0xc2, // => 14786
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x39, 0xca, // => 14794
	/* sqdmlsl */ 8,
	3, MatS, MatH, MatVElement, byte(WORD), 0x39, 0xd2, // => 14802
	3, MatD, MatS, MatVElement, byte(DWORD), 0x39, 0xdc, // => 14812
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x39, 0xe6, // => 14822
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVElement, byte(DWORD), 0x39, 0xf0, // => 14832
	3, MatS, MatH, MatH, 0x39, 0xfa, // => 14842
	3, MatD, MatS, MatS, 0x3a, 0x2, // => 14850
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x3a, 0xa, // => 14858
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x3a, 0x12, // => 14866
	/* sqdmlsl2 */ 4,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), 0x3a, 0x1a, // => 14874
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x3a, 0x24, // => 14884
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x3a, 0x2e, // => 14894
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x3a, 0x36, // => 14902
	/* sqdmulh */ 8,
	3, MatH, MatH, MatVElement, byte(WORD), 0x3a, 0x3e, // => 14910
	3, MatS, MatS, MatVElement, byte(DWORD), 0x3a, 0x48, // => 14920
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x3a, 0x52, // => 14930
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x3a, 0x5d, // => 14941
	3, MatH, MatH, MatH, 0x3a, 0x68, // => 14952
	3, MatS, MatS, MatS, 0x3a, 0x70, // => 14960
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x3a, 0x78, // => 14968
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x3a, 0x81, // => 14977
	/* sqdmull */ 8,
	3, MatS, MatH, MatVElement, byte(WORD), 0x3a, 0x8a, // => 14986
	3, MatD, MatS, MatVElement, byte(DWORD), 0x3a, 0x94, // => 14996
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x3a, 0x9e, // => 15006
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVElement, byte(DWORD), 0x3a, 0xa8, // => 15016
	3, MatS, MatH, MatH, 0x3a, 0xb2, // => 15026
	3, MatD, MatS, MatS, 0x3a, 0xba, // => 15034
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x3a, 0xc2, // => 15042
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x3a, 0xca, // => 15050
	/* sqdmull2 */ 4,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), 0x3a, 0xd2, // => 15058
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x3a, 0xdc, // => 15068
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x3a, 0xe6, // => 15078
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x3a, 0xee, // => 15086
	/* sqneg */ 8,
	2, MatB, MatB, 0x3a, 0xf6, // => 15094
	2, MatH, MatH, 0x3a, 0xfd, // => 15101
	2, MatS, MatS, 0x3b, 0x4, // => 15108
	2, MatD, MatD, 0x3b, 0xb, // => 15115
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x3b, 0x12, // => 15122
	2, MatV, byte(WORD), MatV, byte(WORD), 0x3b, 0x1a, // => 15130
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x3b, 0x22, // => 15138
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x3b, 0x2a, // => 15146
	/* sqrdmlah */ 8,
	3, MatH, MatH, MatVElement, byte(WORD), 0x3b, 0x32, // => 15154
	3, MatS, MatS, MatVElement, byte(DWORD), 0x3b, 0x3c, // => 15164
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x3b, 0x46, // => 15174
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x3b, 0x51, // => 15185
	3, MatH, MatH, MatH, 0x3b, 0x5c, // => 15196
	3, MatS, MatS, MatS, 0x3b, 0x64, // => 15204
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x3b, 0x6c, // => 15212
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x3b, 0x75, // => 15221
	/* sqrdmlsh */ 8,
	3, MatH, MatH, MatVElement, byte(WORD), 0x3b, 0x7e, // => 15230
	3, MatS, MatS, MatVElement, byte(DWORD), 0x3b, 0x88, // => 15240
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x3b, 0x92, // => 15250
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x3b, 0x9d, // => 15261
	3, MatH, MatH, MatH, 0x3b, 0xa8, // => 15272
	3, MatS, MatS, MatS, 0x3b, 0xb0, // => 15280
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x3b, 0xb8, // => 15288
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x3b, 0xc1, // => 15297
	/* sqrdmulh */ 8,
	3, MatH, MatH, MatVElement, byte(WORD), 0x3b, 0xca, // => 15306
	3, MatS, MatS, MatVElement, byte(DWORD), 0x3b, 0xd4, // => 15316
	3, MatV, byte(WORD), MatV, byte(WORD), MatVElement, byte(WORD), 0x3b, 0xde, // => 15326
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatVElement, byte(DWORD), 0x3b, 0xe9, // => 15337
	3, MatH, MatH, MatH, 0x3b, 0xf4, // => 15348
	3, MatS, MatS, MatS, 0x3b, 0xfc, // => 15356
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x3c, 0x4, // => 15364
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x3c, 0xd, // => 15373
	/* sqrshl */ 8,
	3, MatB, MatB, MatB, 0x3c, 0x16, // => 15382
	3, MatH, MatH, MatH, 0x3c, 0x1e, // => 15390
	3, MatS, MatS, MatS, 0x3c, 0x26, // => 15398
	3, MatD, MatD, MatD, 0x3c, 0x2e, // => 15406
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x3c, 0x36, // => 15414
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x3c, 0x3f, // => 15423
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x3c, 0x48, // => 15432
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x3c, 0x51, // => 15441
	/* sqrshrn */ 6,
	3, MatB, MatH, MatImm, 0x3c, 0x5a, // => 15450
	3, MatH, MatS, MatImm, 0x3c, 0x67, // => 15463
	3, MatS, MatD, MatImm, 0x3c, 0x74, // => 15476
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatImm, 0x3c, 0x81, // => 15489
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatImm, 0x3c, 0x8c, // => 15500
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x3c, 0x97, // => 15511
	/* sqrshrn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatImm, 0x3c, 0xa2, // => 15522
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatImm, 0x3c, 0xad, // => 15533
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatImm, 0x3c, 0xb8, // => 15544
	/* sqrshrun */ 6,
	3, MatB, MatH, MatImm, 0x3c, 0xc3, // => 15555
	3, MatH, MatS, MatImm, 0x3c, 0xd0, // => 15568
	3, MatS, MatD, MatImm, 0x3c, 0xdd, // => 15581
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatImm, 0x3c, 0xea, // => 15594
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatImm, 0x3c, 0xf5, // => 15605
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x3d, 0x0, // => 15616
	/* sqrshrun2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatImm, 0x3d, 0xb, // => 15627
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatImm, 0x3d, 0x16, // => 15638
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatImm, 0x3d, 0x21, // => 15649
	/* sqshl */ 16,
	3, MatB, MatB, MatImm, 0x3d, 0x2c, // => 15660
	3, MatH, MatH, MatImm, 0x3d, 0x36, // => 15670
	3, MatS, MatS, MatImm, 0x3d, 0x40, // => 15680
	3, MatD, MatD, MatImm, 0x3d, 0x4a, // => 15690
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x3d, 0x54, // => 15700
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x3d, 0x5f, // => 15711
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x3d, 0x6a, // => 15722
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x3d, 0x75, // => 15733
	3, MatB, MatB, MatB, 0x3d, 0x80, // => 15744
	3, MatH, MatH, MatH, 0x3d, 0x88, // => 15752
	3, MatS, MatS, MatS, 0x3d, 0x90, // => 15760
	3, MatD, MatD, MatD, 0x3d, 0x98, // => 15768
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x3d, 0xa0, // => 15776
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x3d, 0xa9, // => 15785
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x3d, 0xb2, // => 15794
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x3d, 0xbb, // => 15803
	/* sqshlu */ 8,
	3, MatB, MatB, MatImm, 0x3d, 0xc4, // => 15812
	3, MatH, MatH, MatImm, 0x3d, 0xce, // => 15822
	3, MatS, MatS, MatImm, 0x3d, 0xd8, // => 15832
	3, MatD, MatD, MatImm, 0x3d, 0xe2, // => 15842
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x3d, 0xec, // => 15852
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x3d, 0xf7, // => 15863
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x3e, 0x2, // => 15874
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x3e, 0xd, // => 15885
	/* sqshrn */ 6,
	3, MatB, MatH, MatImm, 0x3e, 0x18, // => 15896
	3, MatH, MatS, MatImm, 0x3e, 0x25, // => 15909
	3, MatS, MatD, MatImm, 0x3e, 0x32, // => 15922
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatImm, 0x3e, 0x3f, // => 15935
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatImm, 0x3e, 0x4a, // => 15946
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x3e, 0x55, // => 15957
	/* sqshrn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatImm, 0x3e, 0x60, // => 15968
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatImm, 0x3e, 0x6b, // => 15979
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatImm, 0x3e, 0x76, // => 15990
	/* sqshrun */ 6,
	3, MatB, MatH, MatImm, 0x3e, 0x81, // => 16001
	3, MatH, MatS, MatImm, 0x3e, 0x8e, // => 16014
	3, MatS, MatD, MatImm, 0x3e, 0x9b, // => 16027
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatImm, 0x3e, 0xa8, // => 16040
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatImm, 0x3e, 0xb3, // => 16051
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x3e, 0xbe, // => 16062
	/* sqshrun2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatImm, 0x3e, 0xc9, // => 16073
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatImm, 0x3e, 0xd4, // => 16084
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatImm, 0x3e, 0xdf, // => 16095
	/* sqsub */ 8,
	3, MatB, MatB, MatB, 0x3e, 0xea, // => 16106
	3, MatH, MatH, MatH, 0x3e, 0xf2, // => 16114
	3, MatS, MatS, MatS, 0x3e, 0xfa, // => 16122
	3, MatD, MatD, MatD, 0x3f, 0x2, // => 16130
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x3f, 0xa, // => 16138
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x3f, 0x13, // => 16147
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x3f, 0x1c, // => 16156
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x3f, 0x25, // => 16165
	/* sqxtn */ 6,
	2, MatB, MatH, 0x3f, 0x2e, // => 16174
	2, MatH, MatS, 0x3f, 0x35, // => 16181
	2, MatS, MatD, 0x3f, 0x3c, // => 16188
	2, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, 0x3f, 0x43, // => 16195
	2, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, 0x3f, 0x4a, // => 16202
	2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, 0x3f, 0x51, // => 16209
	/* sqxtn2 */ 3,
	2, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, 0x3f, 0x58, // => 16216
	2, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, 0x3f, 0x5f, // => 16223
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, 0x3f, 0x66, // => 16230
	/* sqxtun */ 6,
	2, MatB, MatH, 0x3f, 0x6d, // => 16237
	2, MatH, MatS, 0x3f, 0x74, // => 16244
	2, MatS, MatD, 0x3f, 0x7b, // => 16251
	2, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, 0x3f, 0x82, // => 16258
	2, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, 0x3f, 0x89, // => 16265
	2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, 0x3f, 0x90, // => 16272
	/* sqxtun2 */ 3,
	2, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, 0x3f, 0x97, // => 16279
	2, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, 0x3f, 0x9e, // => 16286
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, 0x3f, 0xa5, // => 16293
	/* srhadd */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x3f, 0xac, // => 16300
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x3f, 0xb5, // => 16309
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x3f, 0xbe, // => 16318
	/* sri */ 5,
	3, MatD, MatD, MatImm, 0x3f, 0xc7, // => 16327
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x3f, 0xd4, // => 16340
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x3f, 0xe0, // => 16352
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x3f, 0xec, // => 16364
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x3f, 0xf8, // => 16376
	/* srshl */ 5,
	3, MatD, MatD, MatD, 0x40, 0x4, // => 16388
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x40, 0xc, // => 16396
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x40, 0x15, // => 16405
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x40, 0x1e, // => 16414
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x40, 0x27, // => 16423
	/* srshr */ 5,
	3, MatD, MatD, MatImm, 0x40, 0x30, // => 16432
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x40, 0x3d, // => 16445
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x40, 0x49, // => 16457
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x40, 0x55, // => 16469
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x40, 0x61, // => 16481
	/* srsra */ 5,
	3, MatD, MatD, MatImm, 0x40, 0x6d, // => 16493
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x40, 0x7a, // => 16506
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x40, 0x86, // => 16518
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x40, 0x92, // => 16530
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x40, 0x9e, // => 16542
	/* ssbb */ 1,
	0, 0x40, 0xaa, // => 16554
	/* sshl */ 5,
	3, MatD, MatD, MatD, 0x40, 0xaf, // => 16559
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x40, 0xb7, // => 16567
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x40, 0xc0, // => 16576
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x40, 0xc9, // => 16585
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x40, 0xd2, // => 16594
	/* sshll */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatImm, 0x40, 0xdb, // => 16603
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatImm, 0x40, 0xe5, // => 16613
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatImm, 0x40, 0xef, // => 16623
	/* sshll2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatImm, 0x40, 0xf9, // => 16633
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatImm, 0x41, 0x3, // => 16643
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatImm, 0x41, 0xd, // => 16653
	/* sshr */ 5,
	3, MatD, MatD, MatImm, 0x41, 0x17, // => 16663
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x41, 0x24, // => 16676
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x41, 0x30, // => 16688
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x41, 0x3c, // => 16700
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x41, 0x48, // => 16712
	/* ssra */ 5,
	3, MatD, MatD, MatImm, 0x41, 0x54, // => 16724
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x41, 0x61, // => 16737
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x41, 0x6d, // => 16749
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x41, 0x79, // => 16761
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x41, 0x85, // => 16773
	/* ssubl */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x41, 0x91, // => 16785
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x41, 0x99, // => 16793
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x41, 0xa1, // => 16801
	/* ssubl2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x41, 0xa9, // => 16809
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x41, 0xb1, // => 16817
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x41, 0xb9, // => 16825
	/* ssubw */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, 0x41, 0xc1, // => 16833
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, 0x41, 0xc9, // => 16841
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, 0x41, 0xd1, // => 16849
	/* ssubw2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, 0x41, 0xd9, // => 16857
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, 0x41, 0xe1, // => 16865
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, 0x41, 0xe9, // => 16873
	/* st1 */ 76,
	2, MatRegList, 1, byte(BYTE), MatRefBase, 0x41, 0xf1, // => 16881
	2, MatRegList, 1, byte(WORD), MatRefBase, 0x41, 0xf9, // => 16889
	2, MatRegList, 1, byte(DWORD), MatRefBase, 0x42, 0x1, // => 16897
	2, MatRegList, 1, byte(QWORD), MatRefBase, 0x42, 0x9, // => 16905
	2, MatRegList, 2, byte(BYTE), MatRefBase, 0x42, 0x11, // => 16913
	2, MatRegList, 2, byte(WORD), MatRefBase, 0x42, 0x19, // => 16921
	2, MatRegList, 2, byte(DWORD), MatRefBase, 0x42, 0x21, // => 16929
	2, MatRegList, 2, byte(QWORD), MatRefBase, 0x42, 0x29, // => 16937
	2, MatRegList, 3, byte(BYTE), MatRefBase, 0x42, 0x31, // => 16945
	2, MatRegList, 3, byte(WORD), MatRefBase, 0x42, 0x39, // => 16953
	2, MatRegList, 3, byte(DWORD), MatRefBase, 0x42, 0x41, // => 16961
	2, MatRegList, 3, byte(QWORD), MatRefBase, 0x42, 0x49, // => 16969
	2, MatRegList, 4, byte(BYTE), MatRefBase, 0x42, 0x51, // => 16977
	2, MatRegList, 4, byte(WORD), MatRefBase, 0x42, 0x59, // => 16985
	2, MatRegList, 4, byte(DWORD), MatRefBase, 0x42, 0x61, // => 16993
	2, MatRegList, 4, byte(QWORD), MatRefBase, 0x42, 0x69, // => 17001
	3, MatRegListStatic, 1, byte(BYTE), 8, MatRefBase, MatLitInt, 8, 0x42, 0x71, // => 17009
	3, MatRegListStatic, 1, byte(WORD), 4, MatRefBase, MatLitInt, 8, 0x42, 0x78, // => 17016
	3, MatRegListStatic, 1, byte(DWORD), 2, MatRefBase, MatLitInt, 8, 0x42, 0x7f, // => 17023
	3, MatRegListStatic, 1, byte(QWORD), 1, MatRefBase, MatLitInt, 8, 0x42, 0x86, // => 17030
	3, MatRegListStatic, 1, byte(BYTE), 16, MatRefBase, MatLitInt, 16, 0x42, 0x8d, // => 17037
	3, MatRegListStatic, 1, byte(WORD), 8, MatRefBase, MatLitInt, 16, 0x42, 0x94, // => 17044
	3, MatRegListStatic, 1, byte(DWORD), 4, MatRefBase, MatLitInt, 16, 0x42, 0x9b, // => 17051
	3, MatRegListStatic, 1, byte(QWORD), 2, MatRefBase, MatLitInt, 16, 0x42, 0xa2, // => 17058
	3, MatRegList, 1, byte(BYTE), MatRefBase, MatX, 0x42, 0xa9, // => 17065
	3, MatRegList, 1, byte(WORD), MatRefBase, MatX, 0x42, 0xb2, // => 17074
	3, MatRegList, 1, byte(DWORD), MatRefBase, MatX, 0x42, 0xbb, // => 17083
	3, MatRegList, 1, byte(QWORD), MatRefBase, MatX, 0x42, 0xc4, // => 17092
	3, MatRegListStatic, 2, byte(BYTE), 8, MatRefBase, MatLitInt, 16, 0x42, 0xcd, // => 17101
	3, MatRegListStatic, 2, byte(WORD), 4, MatRefBase, MatLitInt, 16, 0x42, 0xd4, // => 17108
	3, MatRegListStatic, 2, byte(DWORD), 2, MatRefBase, MatLitInt, 16, 0x42, 0xdb, // => 17115
	3, MatRegListStatic, 2, byte(QWORD), 1, MatRefBase, MatLitInt, 16, 0x42, 0xe2, // => 17122
	3, MatRegListStatic, 2, byte(BYTE), 16, MatRefBase, MatLitInt, 32, 0x42, 0xe9, // => 17129
	3, MatRegListStatic, 2, byte(WORD), 8, MatRefBase, MatLitInt, 32, 0x42, 0xf0, // => 17136
	3, MatRegListStatic, 2, byte(DWORD), 4, MatRefBase, MatLitInt, 32, 0x42, 0xf7, // => 17143
	3, MatRegListStatic, 2, byte(QWORD), 2, MatRefBase, MatLitInt, 32, 0x42, 0xfe, // => 17150
	3, MatRegList, 2, byte(BYTE), MatRefBase, MatX, 0x43, 0x5, // => 17157
	3, MatRegList, 2, byte(WORD), MatRefBase, MatX, 0x43, 0xe, // => 17166
	3, MatRegList, 2, byte(DWORD), MatRefBase, MatX, 0x43, 0x17, // => 17175
	3, MatRegList, 2, byte(QWORD), MatRefBase, MatX, 0x43, 0x20, // => 17184
	3, MatRegListStatic, 3, byte(BYTE), 8, MatRefBase, MatLitInt, 24, 0x43, 0x29, // => 17193
	3, MatRegListStatic, 3, byte(WORD), 4, MatRefBase, MatLitInt, 24, 0x43, 0x30, // => 17200
	3, MatRegListStatic, 3, byte(DWORD), 2, MatRefBase, MatLitInt, 24, 0x43, 0x37, // => 17207
	3, MatRegListStatic, 3, byte(QWORD), 1, MatRefBase, MatLitInt, 24, 0x43, 0x3e, // => 17214
	3, MatRegListStatic, 3, byte(BYTE), 16, MatRefBase, MatLitInt, 48, 0x43, 0x45, // => 17221
	3, MatRegListStatic, 3, byte(WORD), 8, MatRefBase, MatLitInt, 48, 0x43, 0x4c, // => 17228
	3, MatRegListStatic, 3, byte(DWORD), 4, MatRefBase, MatLitInt, 48, 0x43, 0x53, // => 17235
	3, MatRegListStatic, 3, byte(QWORD), 2, MatRefBase, MatLitInt, 48, 0x43, 0x5a, // => 17242
	3, MatRegList, 3, byte(BYTE), MatRefBase, MatX, 0x43, 0x61, // => 17249
	3, MatRegList, 3, byte(WORD), MatRefBase, MatX, 0x43, 0x6a, // => 17258
	3, MatRegList, 3, byte(DWORD), MatRefBase, MatX, 0x43, 0x73, // => 17267
	3, MatRegList, 3, byte(QWORD), MatRefBase, MatX, 0x43, 0x7c, // => 17276
	3, MatRegListStatic, 4, byte(BYTE), 8, MatRefBase, MatLitInt, 32, 0x43, 0x85, // => 17285
	3, MatRegListStatic, 4, byte(WORD), 4, MatRefBase, MatLitInt, 32, 0x43, 0x8c, // => 17292
	3, MatRegListStatic, 4, byte(DWORD), 2, MatRefBase, MatLitInt, 32, 0x43, 0x93, // => 17299
	3, MatRegListStatic, 4, byte(QWORD), 1, MatRefBase, MatLitInt, 32, 0x43, 0x9a, // => 17306
	3, MatRegListStatic, 4, byte(BYTE), 16, MatRefBase, MatLitInt, 64, 0x43, 0xa1, // => 17313
	3, MatRegListStatic, 4, byte(WORD), 8, MatRefBase, MatLitInt, 64, 0x43, 0xa8, // => 17320
	3, MatRegListStatic, 4, byte(DWORD), 4, MatRefBase, MatLitInt, 64, 0x43, 0xaf, // => 17327
	3, MatRegListStatic, 4, byte(QWORD), 2, MatRefBase, MatLitInt, 64, 0x43, 0xb6, // => 17334
	3, MatRegList, 4, byte(BYTE), MatRefBase, MatX, 0x43, 0xbd, // => 17341
	3, MatRegList, 4, byte(WORD), MatRefBase, MatX, 0x43, 0xc6, // => 17350
	3, MatRegList, 4, byte(DWORD), MatRefBase, MatX, 0x43, 0xcf, // => 17359
	3, MatRegList, 4, byte(QWORD), MatRefBase, MatX, 0x43, 0xd8, // => 17368
	2, MatRegListElement, 1, byte(BYTE), MatRefBase, 0x43, 0xe1, // => 17377
	2, MatRegListElement, 1, byte(WORD), MatRefBase, 0x43, 0xea, // => 17386
	2, MatRegListElement, 1, byte(DWORD), MatRefBase, 0x43, 0xf3, // => 17395
	2, MatRegListElement, 1, byte(QWORD), MatRefBase, 0x43, 0xfc, // => 17404
	3, MatRegListElement, 1, byte(BYTE), MatRefBase, MatLitInt, 1, 0x44, 0x5, // => 17413
	3, MatRegListElement, 1, byte(BYTE), MatRefBase, MatX, 0x44, 0xe, // => 17422
	3, MatRegListElement, 1, byte(WORD), MatRefBase, MatLitInt, 2, 0x44, 0x18, // => 17432
	3, MatRegListElement, 1, byte(WORD), MatRefBase, MatX, 0x44, 0x21, // => 17441
	3, MatRegListElement, 1, byte(DWORD), MatRefBase, MatLitInt, 4, 0x44, 0x2b, // => 17451
	3, MatRegListElement, 1, byte(DWORD), MatRefBase, MatX, 0x44, 0x34, // => 17460
	3, MatRegListElement, 1, byte(QWORD), MatRefBase, MatLitInt, 8, 0x44, 0x3e, // => 17470
	3, MatRegListElement, 1, byte(QWORD), MatRefBase, MatX, 0x44, 0x47, // => 17479
	/* st2 */ 27,
	2, MatRegList, 2, byte(BYTE), MatRefBase, 0x44, 0x51, // => 17489
	2, MatRegList, 2, byte(WORD), MatRefBase, 0x44, 0x59, // => 17497
	2, MatRegList, 2, byte(DWORD), MatRefBase, 0x44, 0x61, // => 17505
	2, MatRegListStatic, 2, byte(QWORD), 2, MatRefBase, 0x44, 0x69, // => 17513
	3, MatRegListStatic, 2, byte(BYTE), 8, MatRefBase, MatLitInt, 16, 0x44, 0x71, // => 17521
	3, MatRegListStatic, 2, byte(WORD), 4, MatRefBase, MatLitInt, 16, 0x44, 0x78, // => 17528
	3, MatRegListStatic, 2, byte(DWORD), 2, MatRefBase, MatLitInt, 16, 0x44, 0x7f, // => 17535
	3, MatRegListStatic, 2, byte(BYTE), 16, MatRefBase, MatLitInt, 32, 0x44, 0x86, // => 17542
	3, MatRegListStatic, 2, byte(WORD), 8, MatRefBase, MatLitInt, 32, 0x44, 0x8d, // => 17549
	3, MatRegListStatic, 2, byte(DWORD), 4, MatRefBase, MatLitInt, 32, 0x44, 0x94, // => 17556
	3, MatRegListStatic, 2, byte(QWORD), 2, MatRefBase, MatLitInt, 32, 0x44, 0x9b, // => 17563
	3, MatRegList, 2, byte(BYTE), MatRefBase, MatX, 0x44, 0xa2, // => 17570
	3, MatRegList, 2, byte(WORD), MatRefBase, MatX, 0x44, 0xab, // => 17579
	3, MatRegList, 2, byte(DWORD), MatRefBase, MatX, 0x44, 0xb4, // => 17588
	3, MatRegListStatic, 2, byte(QWORD), 2, MatRefBase, MatX, 0x44, 0xbd, // => 17597
	2, MatRegListElement, 2, byte(BYTE), MatRefBase, 0x44, 0xc6, // => 17606
	2, MatRegListElement, 2, byte(WORD), MatRefBase, 0x44, 0xcf, // => 17615
	2, MatRegListElement, 2, byte(DWORD), MatRefBase, 0x44, 0xd8, // => 17624
	2, MatRegListElement, 2, byte(QWORD), MatRefBase, 0x44, 0xe1, // => 17633
	3, MatRegListElement, 2, byte(BYTE), MatRefBase, MatLitInt, 2, 0x44, 0xea, // => 17642
	3, MatRegListElement, 2, byte(BYTE), MatRefBase, MatX, 0x44, 0xf3, // => 17651
	3, MatRegListElement, 2, byte(WORD), MatRefBase, MatLitInt, 4, 0x44, 0xfd, // => 17661
	3, MatRegListElement, 2, byte(WORD), MatRefBase, MatX, 0x45, 0x6, // => 17670
	3, MatRegListElement, 2, byte(DWORD), MatRefBase, MatLitInt, 8, 0x45, 0x10, // => 17680
	3, MatRegListElement, 2, byte(DWORD), MatRefBase, MatX, 0x45, 0x19, // => 17689
	3, MatRegListElement, 2, byte(QWORD), MatRefBase, MatLitInt, 16, 0x45, 0x23, // => 17699
	3, MatRegListElement, 2, byte(QWORD), MatRefBase, MatX, 0x45, 0x2c, // => 17708
	/* st3 */ 27,
	2, MatRegList, 3, byte(BYTE), MatRefBase, 0x45, 0x36, // => 17718
	2, MatRegList, 3, byte(WORD), MatRefBase, 0x45, 0x3e, // => 17726
	2, MatRegList, 3, byte(DWORD), MatRefBase, 0x45, 0x46, // => 17734
	2, MatRegListStatic, 3, byte(QWORD), 2, MatRefBase, 0x45, 0x4e, // => 17742
	3, MatRegListStatic, 3, byte(BYTE), 8, MatRefBase, MatLitInt, 24, 0x45, 0x56, // => 17750
	3, MatRegListStatic, 3, byte(WORD), 4, MatRefBase, MatLitInt, 24, 0x45, 0x5d, // => 17757
	3, MatRegListStatic, 3, byte(DWORD), 2, MatRefBase, MatLitInt, 24, 0x45, 0x64, // => 17764
	3, MatRegListStatic, 3, byte(BYTE), 16, MatRefBase, MatLitInt, 48, 0x45, 0x6b, // => 17771
	3, MatRegListStatic, 3, byte(WORD), 8, MatRefBase, MatLitInt, 48, 0x45, 0x72, // => 17778
	3, MatRegListStatic, 3, byte(DWORD), 4, MatRefBase, MatLitInt, 48, 0x45, 0x79, // => 17785
	3, MatRegListStatic, 3, byte(QWORD), 2, MatRefBase, MatLitInt, 48, 0x45, 0x80, // => 17792
	3, MatRegList, 3, byte(BYTE), MatRefBase, MatX, 0x45, 0x87, // => 17799
	3, MatRegList, 3, byte(WORD), MatRefBase, MatX, 0x45, 0x90, // => 17808
	3, MatRegList, 3, byte(DWORD), MatRefBase, MatX, 0x45, 0x99, // => 17817
	3, MatRegListStatic, 3, byte(QWORD), 2, MatRefBase, MatX, 0x45, 0xa2, // => 17826
	2, MatRegListElement, 3, byte(BYTE), MatRefBase, 0x45, 0xab, // => 17835
	2, MatRegListElement, 3, byte(WORD), MatRefBase, 0x45, 0xb4, // => 17844
	2, MatRegListElement, 3, byte(DWORD), MatRefBase, 0x45, 0xbd, // => 17853
	2, MatRegListElement, 3, byte(QWORD), MatRefBase, 0x45, 0xc6, // => 17862
	3, MatRegListElement, 3, byte(BYTE), MatRefBase, MatLitInt, 3, 0x45, 0xcf, // => 17871
	3, MatRegListElement, 3, byte(BYTE), MatRefBase, MatX, 0x45, 0xd8, // => 17880
	3, MatRegListElement, 3, byte(WORD), MatRefBase, MatLitInt, 6, 0x45, 0xe2, // => 17890
	3, MatRegListElement, 3, byte(WORD), MatRefBase, MatX, 0x45, 0xeb, // => 17899
	3, MatRegListElement, 3, byte(DWORD), MatRefBase, MatLitInt, 12, 0x45, 0xf5, // => 17909
	3, MatRegListElement, 3, byte(DWORD), MatRefBase, MatX, 0x45, 0xfe, // => 17918
	3, MatRegListElement, 3, byte(QWORD), MatRefBase, MatLitInt, 24, 0x46, 0x8, // => 17928
	3, MatRegListElement, 3, byte(QWORD), MatRefBase, MatX, 0x46, 0x11, // => 17937
	/* st4 */ 27,
	2, MatRegList, 4, byte(BYTE), MatRefBase, 0x46, 0x1b, // => 17947
	2, MatRegList, 4, byte(WORD), MatRefBase, 0x46, 0x23, // => 17955
	2, MatRegList, 4, byte(DWORD), MatRefBase, 0x46, 0x2b, // => 17963
	2, MatRegListStatic, 4, byte(QWORD), 2, MatRefBase, 0x46, 0x33, // => 17971
	3, MatRegListStatic, 4, byte(BYTE), 8, MatRefBase, MatLitInt, 32, 0x46, 0x3b, // => 17979
	3, MatRegListStatic, 4, byte(WORD), 4, MatRefBase, MatLitInt, 32, 0x46, 0x42, // => 17986
	3, MatRegListStatic, 4, byte(DWORD), 2, MatRefBase, MatLitInt, 32, 0x46, 0x49, // => 17993
	3, MatRegListStatic, 4, byte(BYTE), 16, MatRefBase, MatLitInt, 64, 0x46, 0x50, // => 18000
	3, MatRegListStatic, 4, byte(WORD), 8, MatRefBase, MatLitInt, 64, 0x46, 0x57, // => 18007
	3, MatRegListStatic, 4, byte(DWORD), 4, MatRefBase, MatLitInt, 64, 0x46, 0x5e, // => 18014
	3, MatRegListStatic, 4, byte(QWORD), 2, MatRefBase, MatLitInt, 64, 0x46, 0x65, // => 18021
	3, MatRegList, 4, byte(BYTE), MatRefBase, MatX, 0x46, 0x6c, // => 18028
	3, MatRegList, 4, byte(WORD), MatRefBase, MatX, 0x46, 0x75, // => 18037
	3, MatRegList, 4, byte(DWORD), MatRefBase, MatX, 0x46, 0x7e, // => 18046
	3, MatRegListStatic, 4, byte(QWORD), 2, MatRefBase, MatX, 0x46, 0x87, // => 18055
	2, MatRegListElement, 4, byte(BYTE), MatRefBase, 0x46, 0x90, // => 18064
	2, MatRegListElement, 4, byte(WORD), MatRefBase, 0x46, 0x99, // => 18073
	2, MatRegListElement, 4, byte(DWORD), MatRefBase, 0x46, 0xa2, // => 18082
	2, MatRegListElement, 4, byte(QWORD), MatRefBase, 0x46, 0xab, // => 18091
	3, MatRegListElement, 4, byte(BYTE), MatRefBase, MatLitInt, 4, 0x46, 0xb4, // => 18100
	3, MatRegListElement, 4, byte(BYTE), MatRefBase, MatX, 0x46, 0xbd, // => 18109
	3, MatRegListElement, 4, byte(WORD), MatRefBase, MatLitInt, 8, 0x46, 0xc7, // => 18119
	3, MatRegListElement, 4, byte(WORD), MatRefBase, MatX, 0x46, 0xd0, // => 18128
	3, MatRegListElement, 4, byte(DWORD), MatRefBase, MatLitInt, 16, 0x46, 0xda, // => 18138
	3, MatRegListElement, 4, byte(DWORD), MatRefBase, MatX, 0x46, 0xe3, // => 18147
	3, MatRegListElement, 4, byte(QWORD), MatRefBase, MatLitInt, 32, 0x46, 0xed, // => 18157
	3, MatRegListElement, 4, byte(QWORD), MatRefBase, MatX, 0x46, 0xf6, // => 18166
	/* stadd */ 2,
	2, MatW, MatRefBase, 0x47, 0x0, // => 18176
	2, MatX, MatRefBase, 0x47, 0x7, // => 18183
	/* staddb */ 1,
	2, MatW, MatRefBase, 0x47, 0xe, // => 18190
	/* staddh */ 1,
	2, MatW, MatRefBase, 0x47, 0x15, // => 18197
	/* staddl */ 2,
	2, MatW, MatRefBase, 0x47, 0x1c, // => 18204
	2, MatX, MatRefBase, 0x47, 0x23, // => 18211
	/* staddlb */ 1,
	2, MatW, MatRefBase, 0x47, 0x2a, // => 18218
	/* staddlh */ 1,
	2, MatW, MatRefBase, 0x47, 0x31, // => 18225
	/* stclr */ 2,
	2, MatW, MatRefBase, 0x47, 0x38, // => 18232
	2, MatX, MatRefBase, 0x47, 0x3f, // => 18239
	/* stclrb */ 1,
	2, MatW, MatRefBase, 0x47, 0x46, // => 18246
	/* stclrh */ 1,
	2, MatW, MatRefBase, 0x47, 0x4d, // => 18253
	/* stclrl */ 2,
	2, MatW, MatRefBase, 0x47, 0x54, // => 18260
	2, MatX, MatRefBase, 0x47, 0x5b, // => 18267
	/* stclrlb */ 1,
	2, MatW, MatRefBase, 0x47, 0x62, // => 18274
	/* stclrlh */ 1,
	2, MatW, MatRefBase, 0x47, 0x69, // => 18281
	/* steor */ 2,
	2, MatW, MatRefBase, 0x47, 0x70, // => 18288
	2, MatX, MatRefBase, 0x47, 0x77, // => 18295
	/* steorb */ 1,
	2, MatW, MatRefBase, 0x47, 0x7e, // => 18302
	/* steorh */ 1,
	2, MatW, MatRefBase, 0x47, 0x85, // => 18309
	/* steorl */ 2,
	2, MatW, MatRefBase, 0x47, 0x8c, // => 18316
	2, MatX, MatRefBase, 0x47, 0x93, // => 18323
	/* steorlb */ 1,
	2, MatW, MatRefBase, 0x47, 0x9a, // => 18330
	/* steorlh */ 1,
	2, MatW, MatRefBase, 0x47, 0xa1, // => 18337
	/* stllr */ 2,
	2, MatW, MatRefBase, 0x47, 0xa8, // => 18344
	2, MatX, MatRefBase, 0x47, 0xaf, // => 18351
	/* stllrb */ 1,
	2, MatW, MatRefBase, 0x47, 0xb6, // => 18358
	/* stllrh */ 1,
	2, MatW, MatRefBase, 0x47, 0xbd, // => 18365
	/* stlr */ 2,
	2, MatW, MatRefBase, 0x47, 0xc4, // => 18372
	2, MatX, MatRefBase, 0x47, 0xcb, // => 18379
	/* stlrb */ 1,
	2, MatW, MatRefBase, 0x47, 0xd2, // => 18386
	/* stlrh */ 1,
	2, MatW, MatRefBase, 0x47, 0xd9, // => 18393
	/* stlur */ 2,
	2, MatW, MatRefOffset, 0x47, 0xe0, // => 18400
	2, MatX, MatRefOffset, 0x47, 0xe8, // => 18408
	/* stlurb */ 1,
	2, MatW, MatRefOffset, 0x47, 0xf0, // => 18416
	/* stlurh */ 1,
	2, MatW, MatRefOffset, 0x47, 0xf8, // => 18424
	/* stlxp */ 2,
	4, MatW, MatW, MatW, MatRefBase, 0x48, 0x0, // => 18432
	4, MatW, MatX, MatX, MatRefBase, 0x48, 0x9, // => 18441
	/* stlxr */ 2,
	3, MatW, MatW, MatRefBase, 0x48, 0x12, // => 18450
	3, MatW, MatX, MatRefBase, 0x48, 0x1a, // => 18458
	/* stlxrb */ 1,
	3, MatW, MatW, MatRefBase, 0x48, 0x22, // => 18466
	/* stlxrh */ 1,
	3, MatW, MatW, MatRefBase, 0x48, 0x2a, // => 18474
	/* stnp */ 5,
	3, MatS, MatS, MatRefOffset, 0x48, 0x32, // => 18482
	3, MatD, MatD, MatRefOffset, 0x48, 0x3c, // => 18492
	3, MatQ, MatQ, MatRefOffset, 0x48, 0x46, // => 18502
	3, MatW, MatW, MatRefOffset, 0x48, 0x50, // => 18512
	3, MatX, MatX, MatRefOffset, 0x48, 0x5a, // => 18522
	/* stp */ 15,
	4, MatS, MatS, MatRefBase, MatImm, 0x48, 0x64, // => 18532
	4, MatD, MatD, MatRefBase, MatImm, 0x48, 0x6e, // => 18542
	4, MatQ, MatQ, MatRefBase, MatImm, 0x48, 0x78, // => 18552
	3, MatS, MatS, MatRefPre, 0x48, 0x82, // => 18562
	3, MatD, MatD, MatRefPre, 0x48, 0x8c, // => 18572
	3, MatQ, MatQ, MatRefPre, 0x48, 0x96, // => 18582
	3, MatS, MatS, MatRefOffset, 0x48, 0xa0, // => 18592
	3, MatD, MatD, MatRefOffset, 0x48, 0xaa, // => 18602
	3, MatQ, MatQ, MatRefOffset, 0x48, 0xb4, // => 18612
	4, MatW, MatW, MatRefBase, MatImm, 0x48, 0xbe, // => 18622
	4, MatX, MatX, MatRefBase, MatImm, 0x48, 0xc8, // => 18632
	3, MatW, MatW, MatRefPre, 0x48, 0xd2, // => 18642
	3, MatX, MatX, MatRefPre, 0x48, 0xdc, // => 18652
	3, MatW, MatW, MatRefOffset, 0x48, 0xe6, // => 18662
	3, MatX, MatX, MatRefOffset, 0x48, 0xf0, // => 18672
	/* str */ 28,
	3, MatB, MatRefBase, MatImm, 0x48, 0xfa, // => 18682
	3, MatH, MatRefBase, MatImm, 0x49, 0x2, // => 18690
	3, MatS, MatRefBase, MatImm, 0x49, 0xa, // => 18698
	3, MatD, MatRefBase, MatImm, 0x49, 0x12, // => 18706
	3, MatQ, MatRefBase, MatImm, 0x49, 0x1a, // => 18714
	2, MatB, MatRefPre, 0x49, 0x22, // => 18722
	2, MatH, MatRefPre, 0x49, 0x2a, // => 18730
	2, MatS, MatRefPre, 0x49, 0x32, // => 18738
	2, MatD, MatRefPre, 0x49, 0x3a, // => 18746
	2, MatQ, MatRefPre, 0x49, 0x42, // => 18754
	2, MatB, MatRefOffset, 0x49, 0x4a, // => 18762
	2, MatH, MatRefOffset, 0x49, 0x54, // => 18772
	2, MatS, MatRefOffset, 0x49, 0x5f, // => 18783
	2, MatD, MatRefOffset, 0x49, 0x6a, // => 18794
	2, MatQ, MatRefOffset, 0x49, 0x75, // => 18805
	3, MatW, MatRefBase, MatImm, 0x49, 0x80, // => 18816
	3, MatX, MatRefBase, MatImm, 0x49, 0x88, // => 18824
	2, MatW, MatRefPre, 0x49, 0x90, // => 18832
	2, MatX, MatRefPre, 0x49, 0x98, // => 18840
	2, MatW, MatRefOffset, 0x49, 0xa0, // => 18848
	2, MatX, MatRefOffset, 0x49, 0xab, // => 18859
	2, MatB, MatRefIndex, 0x49, 0xb6, // => 18870
	2, MatH, MatRefIndex, 0x49, 0xc2, // => 18882
	2, MatS, MatRefIndex, 0x49, 0xce, // => 18894
	2, MatD, MatRefIndex, 0x49, 0xda, // => 18906
	2, MatQ, MatRefIndex, 0x49, 0xe6, // => 18918
	2, MatW, MatRefIndex, 0x49, 0xf2, // => 18930
	2, MatX, MatRefIndex, 0x49, 0xfe, // => 18942
	/* strb */ 4,
	3, MatW, MatRefBase, MatImm, 0x4a, 0xa, // => 18954
	2, MatW, MatRefPre, 0x4a, 0x12, // => 18962
	2, MatW, MatRefOffset, 0x4a, 0x1a, // => 18970
	2, MatW, MatRefIndex, 0x4a, 0x24, // => 18980
	/* strh */ 4,
	3, MatW, MatRefBase, MatImm, 0x4a, 0x30, // => 18992
	2, MatW, MatRefPre, 0x4a, 0x38, // => 19000
	2, MatW, MatRefOffset, 0x4a, 0x40, // => 19008
	2, MatW, MatRefIndex, 0x4a, 0x4b, // => 19019
	/* stset */ 2,
	2, MatW, MatRefBase, 0x4a, 0x57, // => 19031
	2, MatX, MatRefBase, 0x4a, 0x5e, // => 19038
	/* stsetb */ 1,
	2, MatW, MatRefBase, 0x4a, 0x65, // => 19045
	/* stseth */ 1,
	2, MatW, MatRefBase, 0x4a, 0x6c, // => 19052
	/* stsetl */ 2,
	2, MatW, MatRefBase, 0x4a, 0x73, // => 19059
	2, MatX, MatRefBase, 0x4a, 0x7a, // => 19066
	/* stsetlb */ 1,
	2, MatW, MatRefBase, 0x4a, 0x81, // => 19073
	/* stsetlh */ 1,
	2, MatW, MatRefBase, 0x4a, 0x88, // => 19080
	/* stsmax */ 2,
	2, MatW, MatRefBase, 0x4a, 0x8f, // => 19087
	2, MatX, MatRefBase, 0x4a, 0x96, // => 19094
	/* stsmaxb */ 1,
	2, MatW, MatRefBase, 0x4a, 0x9d, // => 19101
	/* stsmaxh */ 1,
	2, MatW, MatRefBase, 0x4a, 0xa4, // => 19108
	/* stsmaxl */ 2,
	2, MatW, MatRefBase, 0x4a, 0xab, // => 19115
	2, MatX, MatRefBase, 0x4a, 0xb2, // => 19122
	/* stsmaxlb */ 1,
	2, MatW, MatRefBase, 0x4a, 0xb9, // => 19129
	/* stsmaxlh */ 1,
	2, MatW, MatRefBase, 0x4a, 0xc0, // => 19136
	/* stsmin */ 2,
	2, MatW, MatRefBase, 0x4a, 0xc7, // => 19143
	2, MatX, MatRefBase, 0x4a, 0xce, // => 19150
	/* stsminb */ 1,
	2, MatW, MatRefBase, 0x4a, 0xd5, // => 19157
	/* stsminh */ 1,
	2, MatW, MatRefBase, 0x4a, 0xdc, // => 19164
	/* stsminl */ 2,
	2, MatW, MatRefBase, 0x4a, 0xe3, // => 19171
	2, MatX, MatRefBase, 0x4a, 0xea, // => 19178
	/* stsminlb */ 1,
	2, MatW, MatRefBase, 0x4a, 0xf1, // => 19185
	/* stsminlh */ 1,
	2, MatW, MatRefBase, 0x4a, 0xf8, // => 19192
	/* sttr */ 2,
	2, MatW, MatRefOffset, 0x4a, 0xff, // => 19199
	2, MatX, MatRefOffset, 0x4b, 0x7, // => 19207
	/* sttrb */ 1,
	2, MatW, MatRefOffset, 0x4b, 0xf, // => 19215
	/* sttrh */ 1,
	2, MatW, MatRefOffset, 0x4b, 0x17, // => 19223
	/* stumax */ 2,
	2, MatW, MatRefBase, 0x4b, 0x1f, // => 19231
	2, MatX, MatRefBase, 0x4b, 0x26, // => 19238
	/* stumaxb */ 1,
	2, MatW, MatRefBase, 0x4b, 0x2d, // => 19245
	/* stumaxh */ 1,
	2, MatW, MatRefBase, 0x4b, 0x34, // => 19252
	/* stumaxl */ 2,
	2, MatW, MatRefBase, 0x4b, 0x3b, // => 19259
	2, MatX, MatRefBase, 0x4b, 0x42, // => 19266
	/* stumaxlb */ 1,
	2, MatW, MatRefBase, 0x4b, 0x49, // => 19273
	/* stumaxlh */ 1,
	2, MatW, MatRefBase, 0x4b, 0x50, // => 19280
	/* stumin */ 2,
	2, MatW, MatRefBase, 0x4b, 0x57, // => 19287
	2, MatX, MatRefBase, 0x4b, 0x5e, // => 19294
	/* stuminb */ 1,
	2, MatW, MatRefBase, 0x4b, 0x65, // => 19301
	/* stuminh */ 1,
	2, MatW, MatRefBase, 0x4b, 0x6c, // => 19308
	/* stuminl */ 2,
	2, MatW, MatRefBase, 0x4b, 0x73, // => 19315
	2, MatX, MatRefBase, 0x4b, 0x7a, // => 19322
	/* stuminlb */ 1,
	2, MatW, MatRefBase, 0x4b, 0x81, // => 19329
	/* stuminlh */ 1,
	2, MatW, MatRefBase, 0x4b, 0x88, // => 19336
	/* stur */ 7,
	2, MatB, MatRefOffset, 0x4b, 0x8f, // => 19343
	2, MatH, MatRefOffset, 0x4b, 0x97, // => 19351
	2, MatS, MatRefOffset, 0x4b, 0x9f, // => 19359
	2, MatD, MatRefOffset, 0x4b, 0xa7, // => 19367
	2, MatQ, MatRefOffset, 0x4b, 0xaf, // => 19375
	2, MatW, MatRefOffset, 0x4b, 0xb7, // => 19383
	2, MatX, MatRefOffset, 0x4b, 0xbf, // => 19391
	/* sturb */ 1,
	2, MatW, MatRefOffset, 0x4b, 0xc7, // => 19399
	/* sturh */ 1,
	2, MatW, MatRefOffset, 0x4b, 0xcf, // => 19407
	/* stxp */ 2,
	4, MatW, MatW, MatW, MatRefBase, 0x4b, 0xd7, // => 19415
	4, MatW, MatX, MatX, MatRefBase, 0x4b, 0xe0, // => 19424
	/* stxr */ 2,
	3, MatW, MatW, MatRefBase, 0x4b, 0xe9, // => 19433
	3, MatW, MatX, MatRefBase, 0x4b, 0xf1, // => 19441
	/* stxrb */ 1,
	3, MatW, MatW, MatRefBase, 0x4b, 0xf9, // => 19449
	/* stxrh */ 1,
	3, MatW, MatW, MatRefBase, 0x4c, 0x1, // => 19457
	/* sub */ 12,
	5, MatW, MatW, MatW, MatEnd, MatMod, SymShifts, 0x4c, 0x9, // => 19465
	5, MatX, MatX, MatX, MatEnd, MatMod, SymShifts, 0x4c, 0x15, // => 19477
	5, MatWSP, MatWSP, MatW, MatEnd, MatMod, SymExtends, 0x4c, 0x21, // => 19489
	5, MatXSP, MatXSP, MatW, MatEnd, MatMod, SymExtendsW, 0x4c, 0x2e, // => 19502
	5, MatXSP, MatXSP, MatX, MatEnd, MatMod, SymExtendsX, 0x4c, 0x3b, // => 19515
	5, MatWSP, MatWSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x4c, 0x48, // => 19528
	5, MatXSP, MatXSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x4c, 0x55, // => 19541
	3, MatD, MatD, MatD, 0x4c, 0x62, // => 19554
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x4c, 0x6a, // => 19562
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x4c, 0x73, // => 19571
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x4c, 0x7c, // => 19580
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x4c, 0x85, // => 19589
	/* subhn */ 3,
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x4c, 0x8e, // => 19598
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x4c, 0x96, // => 19606
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x4c, 0x9e, // => 19614
	/* subhn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x4c, 0xa6, // => 19622
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x4c, 0xae, // => 19630
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x4c, 0xb6, // => 19638
	/* subs */ 7,
	5, MatW, MatW, MatW, MatEnd, MatMod, SymShifts, 0x4c, 0xbe, // => 19646
	5, MatX, MatX, MatX, MatEnd, MatMod, SymShifts, 0x4c, 0xca, // => 19658
	5, MatW, MatWSP, MatW, MatEnd, MatMod, SymExtends, 0x4c, 0xd6, // => 19670
	5, MatX, MatXSP, MatW, MatEnd, MatMod, SymExtendsW, 0x4c, 0xe3, // => 19683
	5, MatX, MatXSP, MatX, MatEnd, MatMod, SymExtendsX, 0x4c, 0xf0, // => 19696
	5, MatW, MatWSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x4c, 0xfd, // => 19709
	5, MatX, MatXSP, MatImm, MatEnd, MatLitMod, SymLSL, 0x4d, 0xa, // => 19722
	/* suqadd */ 8,
	2, MatB, MatB, 0x4d, 0x17, // => 19735
	2, MatH, MatH, 0x4d, 0x1e, // => 19742
	2, MatS, MatS, 0x4d, 0x25, // => 19749
	2, MatD, MatD, 0x4d, 0x2c, // => 19756
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x4d, 0x33, // => 19763
	2, MatV, byte(WORD), MatV, byte(WORD), 0x4d, 0x3b, // => 19771
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x4d, 0x43, // => 19779
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x4d, 0x4b, // => 19787
	/* svc */ 1,
	1, MatImm, 0x4d, 0x53, // => 19795
	/* swp */ 2,
	3, MatW, MatW, MatRefBase, 0x4d, 0x5b, // => 19803
	3, MatX, MatX, MatRefBase, 0x4d, 0x63, // => 19811
	/* swpa */ 2,
	3, MatW, MatW, MatRefBase, 0x4d, 0x6b, // => 19819
	3, MatX, MatX, MatRefBase, 0x4d, 0x73, // => 19827
	/* swpab */ 1,
	3, MatW, MatW, MatRefBase, 0x4d, 0x7b, // => 19835
	/* swpah */ 1,
	3, MatW, MatW, MatRefBase, 0x4d, 0x83, // => 19843
	/* swpal */ 2,
	3, MatW, MatW, MatRefBase, 0x4d, 0x8b, // => 19851
	3, MatX, MatX, MatRefBase, 0x4d, 0x93, // => 19859
	/* swpalb */ 1,
	3, MatW, MatW, MatRefBase, 0x4d, 0x9b, // => 19867
	/* swpalh */ 1,
	3, MatW, MatW, MatRefBase, 0x4d, 0xa3, // => 19875
	/* swpb */ 1,
	3, MatW, MatW, MatRefBase, 0x4d, 0xab, // => 19883
	/* swph */ 1,
	3, MatW, MatW, MatRefBase, 0x4d, 0xb3, // => 19891
	/* swpl */ 2,
	3, MatW, MatW, MatRefBase, 0x4d, 0xbb, // => 19899
	3, MatX, MatX, MatRefBase, 0x4d, 0xc3, // => 19907
	/* swplb */ 1,
	3, MatW, MatW, MatRefBase, 0x4d, 0xcb, // => 19915
	/* swplh */ 1,
	3, MatW, MatW, MatRefBase, 0x4d, 0xd3, // => 19923
	/* sxtb */ 2,
	2, MatW, MatW, 0x4d, 0xdb, // => 19931
	2, MatX, MatW, 0x4d, 0xe2, // => 19938
	/* sxth */ 2,
	2, MatW, MatW, 0x4d, 0xe9, // => 19945
	2, MatX, MatW, 0x4d, 0xf0, // => 19952
	/* sxtl */ 3,
	2, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, 0x4d, 0xf7, // => 19959
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, 0x4d, 0xfe, // => 19966
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, 0x4e, 0x5, // => 19973
	/* sxtl2 */ 3,
	2, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, 0x4e, 0xc, // => 19980
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, 0x4e, 0x13, // => 19987
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, 0x4e, 0x1a, // => 19994
	/* sxtw */ 1,
	2, MatX, MatW, 0x4e, 0x21, // => 20001
	/* sys */ 1,
	6, MatImm, MatSymbol, MatSymbol, MatImm, MatEnd, MatX, 0x4e, 0x28, // => 20008
	/* sysl */ 1,
	5, MatX, MatImm, MatSymbol, MatSymbol, MatImm, 0x4e, 0x3a, // => 20026
	/* tbl */ 4,
	3, MatV, byte(BYTE), MatRegListStatic, 2, byte(BYTE), 16, MatV, byte(BYTE), 0x4e, 0x4c, // => 20044
	3, MatV, byte(BYTE), MatRegListStatic, 3, byte(BYTE), 16, MatV, byte(BYTE), 0x4e, 0x55, // => 20053
	3, MatV, byte(BYTE), MatRegListStatic, 4, byte(BYTE), 16, MatV, byte(BYTE), 0x4e, 0x5e, // => 20062
	3, MatV, byte(BYTE), MatRegListStatic, 1, byte(BYTE), 16, MatV, byte(BYTE), 0x4e, 0x67, // => 20071
	/* tbnz */ 2,
	3, MatW, MatImm, MatOffset, 0x4e, 0x70, // => 20080
	3, MatX, MatImm, MatOffset, 0x4e, 0x7b, // => 20091
	/* tbx */ 4,
	3, MatV, byte(BYTE), MatRegListStatic, 2, byte(BYTE), 16, MatV, byte(BYTE), 0x4e, 0x8e, // => 20110
	3, MatV, byte(BYTE), MatRegListStatic, 3, byte(BYTE), 16, MatV, byte(BYTE), 0x4e, 0x97, // => 20119
	3, MatV, byte(BYTE), MatRegListStatic, 4, byte(BYTE), 16, MatV, byte(BYTE), 0x4e, 0xa0, // => 20128
	3, MatV, byte(BYTE), MatRegListStatic, 1, byte(BYTE), 16, MatV, byte(BYTE), 0x4e, 0xa9, // => 20137
	/* tbz */ 2,
	3, MatW, MatImm, MatOffset, 0x4e, 0xb2, // => 20146
	3, MatX, MatImm, MatOffset, 0x4e, 0xbd, // => 20157
	/* tlbi */ 1,
	3, MatSymbol, MatEnd, MatX, 0x4e, 0xd0, // => 20176
	/* trn1 */ 4,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x4e, 0xd9, // => 20185
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x4e, 0xe2, // => 20194
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x4e, 0xeb, // => 20203
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x4e, 0xf4, // => 20212
	/* trn2 */ 4,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x4e, 0xfd, // => 20221
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x4f, 0x6, // => 20230
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x4f, 0xf, // => 20239
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x4f, 0x18, // => 20248
	/* tsb */ 1,
	1, MatLitSymbol, byte(CSYNC), 0x4f, 0x21, // => 20257
	/* tst */ 4,
	2, MatW, MatImm, 0x4f, 0x26, // => 20262
	2, MatX, MatImm, 0x4f, 0x2f, // => 20271
	4, MatW, MatW, MatEnd, MatMod, SymRotates, 0x4f, 0x38, // => 20280
	4, MatX, MatX, MatEnd, MatMod, SymRotates, 0x4f, 0x43, // => 20291
	/* uaba */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x4f, 0x4e, // => 20302
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x4f, 0x57, // => 20311
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x4f, 0x60, // => 20320
	/* uabal */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x4f, 0x69, // => 20329
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x4f, 0x71, // => 20337
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x4f, 0x79, // => 20345
	/* uabal2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x4f, 0x81, // => 20353
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x4f, 0x89, // => 20361
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x4f, 0x91, // => 20369
	/* uabd */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x4f, 0x99, // => 20377
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x4f, 0xa2, // => 20386
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x4f, 0xab, // => 20395
	/* uabdl */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x4f, 0xb4, // => 20404
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x4f, 0xbc, // => 20412
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x4f, 0xc4, // => 20420
	/* uabdl2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x4f, 0xcc, // => 20428
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x4f, 0xd4, // => 20436
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x4f, 0xdc, // => 20444
	/* uadalp */ 3,
	2, MatV, byte(WORD), MatV, byte(BYTE), 0x4f, 0xe4, // => 20452
	2, MatV, byte(DWORD), MatV, byte(WORD), 0x4f, 0xec, // => 20460
	2, MatV, byte(QWORD), MatV, byte(DWORD), 0x4f, 0xf4, // => 20468
	/* uaddl */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x4f, 0xfc, // => 20476
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x50, 0x4, // => 20484
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x50, 0xc, // => 20492
	/* uaddl2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x50, 0x14, // => 20500
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x50, 0x1c, // => 20508
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x50, 0x24, // => 20516
	/* uaddlp */ 3,
	2, MatV, byte(WORD), MatV, byte(BYTE), 0x50, 0x2c, // => 20524
	2, MatV, byte(DWORD), MatV, byte(WORD), 0x50, 0x34, // => 20532
	2, MatV, byte(QWORD), MatV, byte(DWORD), 0x50, 0x3c, // => 20540
	/* uaddlv */ 3,
	2, MatH, MatV, byte(BYTE), 0x50, 0x44, // => 20548
	2, MatS, MatV, byte(WORD), 0x50, 0x4c, // => 20556
	2, MatD, MatVStatic, byte(DWORD), 4, 0x50, 0x54, // => 20564
	/* uaddw */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, 0x50, 0x5c, // => 20572
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, 0x50, 0x64, // => 20580
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, 0x50, 0x6c, // => 20588
	/* uaddw2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, 0x50, 0x74, // => 20596
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, 0x50, 0x7c, // => 20604
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, 0x50, 0x84, // => 20612
	/* ubfiz */ 2,
	4, MatW, MatW, MatImm, MatImm, 0x50, 0x8c, // => 20620
	4, MatX, MatX, MatImm, MatImm, 0x50, 0x9c, // => 20636
	/* ubfm */ 2,
	4, MatW, MatW, MatImm, MatImm, 0x50, 0xac, // => 20652
	4, MatX, MatX, MatImm, MatImm, 0x50, 0xb9, // => 20665
	/* ubfx */ 2,
	4, MatW, MatW, MatImm, MatImm, 0x50, 0xc8, // => 20680
	4, MatX, MatX, MatImm, MatImm, 0x50, 0xd7, // => 20695
	/* ucvtf */ 24,
	3, MatH, MatH, MatImm, 0x50, 0xe6, // => 20710
	3, MatS, MatS, MatImm, 0x50, 0xf3, // => 20723
	3, MatD, MatD, MatImm, 0x51, 0x0, // => 20736
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x51, 0xd, // => 20749
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x51, 0x19, // => 20761
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x51, 0x25, // => 20773
	2, MatH, MatH, 0x51, 0x31, // => 20785
	2, MatS, MatS, 0x51, 0x38, // => 20792
	2, MatD, MatD, 0x51, 0x3f, // => 20799
	2, MatV, byte(WORD), MatV, byte(WORD), 0x51, 0x46, // => 20806
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x51, 0x4e, // => 20814
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x51, 0x56, // => 20822
	3, MatH, MatW, MatImm, 0x51, 0x5e, // => 20830
	3, MatS, MatW, MatImm, 0x51, 0x6b, // => 20843
	3, MatD, MatW, MatImm, 0x51, 0x78, // => 20856
	3, MatH, MatX, MatImm, 0x51, 0x85, // => 20869
	3, MatS, MatX, MatImm, 0x51, 0x90, // => 20880
	3, MatD, MatX, MatImm, 0x51, 0x9b, // => 20891
	2, MatH, MatW, 0x51, 0xa6, // => 20902
	2, MatS, MatW, 0x51, 0xad, // => 20909
	2, MatD, MatW, 0x51, 0xb4, // => 20916
	2, MatH, MatX, 0x51, 0xbb, // => 20923
	2, MatS, MatX, 0x51, 0xc2, // => 20930
	2, MatD, MatX, 0x51, 0xc9, // => 20937
	/* udf */ 1,
	1, MatImm, 0x51, 0xd0, // => 20944
	/* udiv */ 2,
	3, MatW, MatW, MatW, 0x51, 0xd8, // => 20952
	3, MatX, MatX, MatX, 0x51, 0xe0, // => 20960
	/* udot */ 4,
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(BYTE), 8, MatVStaticElement, byte(BYTE), 4, 0x51, 0xe8, // => 20968
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(BYTE), 16, MatVStaticElement, byte(BYTE), 4, 0x51, 0xf2, // => 20978
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x51, 0xfc, // => 20988
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x52, 0x4, // => 20996
	/* uhadd */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x52, 0xc, // => 21004
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x52, 0x15, // => 21013
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x52, 0x1e, // => 21022
	/* uhsub */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x52, 0x27, // => 21031
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x52, 0x30, // => 21040
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x52, 0x39, // => 21049
	/* umaddl */ 1,
	4, MatX, MatW, MatW, MatX, 0x52, 0x42, // => 21058
	/* umax */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x52, 0x4b, // => 21067
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x52, 0x54, // => 21076
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x52, 0x5d, // => 21085
	/* umaxp */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x52, 0x66, // => 21094
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x52, 0x6f, // => 21103
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x52, 0x78, // => 21112
	/* umaxv */ 3,
	2, MatB, MatV, byte(BYTE), 0x52, 0x81, // => 21121
	2, MatH, MatV, byte(WORD), 0x52, 0x89, // => 21129
	2, MatS, MatVStatic, byte(DWORD), 4, 0x52, 0x91, // => 21137
	/* umin */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x52, 0x99, // => 21145
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x52, 0xa2, // => 21154
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x52, 0xab, // => 21163
	/* uminp */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x52, 0xb4, // => 21172
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x52, 0xbd, // => 21181
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x52, 0xc6, // => 21190
	/* uminv */ 3,
	2, MatB, MatV, byte(BYTE), 0x52, 0xcf, // => 21199
	2, MatH, MatV, byte(WORD), 0x52, 0xd7, // => 21207
	2, MatS, MatVStatic, byte(DWORD), 4, 0x52, 0xdf, // => 21215
	/* umlal */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x52, 0xe7, // => 21223
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVElement, byte(DWORD), 0x52, 0xf1, // => 21233
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x52, 0xfb, // => 21243
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x53, 0x3, // => 21251
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x53, 0xb, // => 21259
	/* umlal2 */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), 0x53, 0x13, // => 21267
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x53, 0x1d, // => 21277
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x53, 0x27, // => 21287
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x53, 0x2f, // => 21295
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x53, 0x37, // => 21303
	/* umlsl */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x53, 0x3f, // => 21311
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVElement, byte(DWORD), 0x53, 0x49, // => 21321
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x53, 0x53, // => 21331
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x53, 0x5b, // => 21339
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x53, 0x63, // => 21347
	/* umlsl2 */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), 0x53, 0x6b, // => 21355
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x53, 0x75, // => 21365
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x53, 0x7f, // => 21375
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x53, 0x87, // => 21383
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x53, 0x8f, // => 21391
	/* umnegl */ 1,
	3, MatX, MatW, MatW, 0x53, 0x97, // => 21399
	/* umov */ 4,
	2, MatW, MatVElement, byte(BYTE), 0x53, 0x9f, // => 21407
	2, MatW, MatVElement, byte(WORD), 0x53, 0xa9, // => 21417
	2, MatW, MatVElement, byte(DWORD), 0x53, 0xb3, // => 21427
	2, MatX, MatVElement, byte(QWORD), 0x53, 0xbd, // => 21437
	/* umsubl */ 1,
	4, MatX, MatW, MatW, MatX, 0x53, 0xc7, // => 21447
	/* umulh */ 1,
	3, MatX, MatX, MatX, 0x53, 0xd0, // => 21456
	/* umull */ 6,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVElement, byte(WORD), 0x53, 0xd8, // => 21464
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVElement, byte(DWORD), 0x53, 0xe2, // => 21474
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x53, 0xec, // => 21484
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x53, 0xf4, // => 21492
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x53, 0xfc, // => 21500
	3, MatX, MatW, MatW, 0x54, 0x4, // => 21508
	/* umull2 */ 5,
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVElement, byte(WORD), 0x54, 0xc, // => 21516
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVElement, byte(DWORD), 0x54, 0x16, // => 21526
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x54, 0x20, // => 21536
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x54, 0x28, // => 21544
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x54, 0x30, // => 21552
	/* uqadd */ 8,
	3, MatB, MatB, MatB, 0x54, 0x38, // => 21560
	3, MatH, MatH, MatH, 0x54, 0x40, // => 21568
	3, MatS, MatS, MatS, 0x54, 0x48, // => 21576
	3, MatD, MatD, MatD, 0x54, 0x50, // => 21584
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x54, 0x58, // => 21592
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x54, 0x61, // => 21601
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x54, 0x6a, // => 21610
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x54, 0x73, // => 21619
	/* uqrshl */ 8,
	3, MatB, MatB, MatB, 0x54, 0x7c, // => 21628
	3, MatH, MatH, MatH, 0x54, 0x84, // => 21636
	3, MatS, MatS, MatS, 0x54, 0x8c, // => 21644
	3, MatD, MatD, MatD, 0x54, 0x94, // => 21652
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x54, 0x9c, // => 21660
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x54, 0xa5, // => 21669
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x54, 0xae, // => 21678
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x54, 0xb7, // => 21687
	/* uqrshrn */ 6,
	3, MatB, MatH, MatImm, 0x54, 0xc0, // => 21696
	3, MatH, MatS, MatImm, 0x54, 0xcd, // => 21709
	3, MatS, MatD, MatImm, 0x54, 0xda, // => 21722
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatImm, 0x54, 0xe7, // => 21735
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatImm, 0x54, 0xf2, // => 21746
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x54, 0xfd, // => 21757
	/* uqrshrn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatImm, 0x55, 0x8, // => 21768
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatImm, 0x55, 0x13, // => 21779
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatImm, 0x55, 0x1e, // => 21790
	/* uqshl */ 16,
	3, MatB, MatB, MatImm, 0x55, 0x29, // => 21801
	3, MatH, MatH, MatImm, 0x55, 0x33, // => 21811
	3, MatS, MatS, MatImm, 0x55, 0x3d, // => 21821
	3, MatD, MatD, MatImm, 0x55, 0x47, // => 21831
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x55, 0x51, // => 21841
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x55, 0x5c, // => 21852
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x55, 0x67, // => 21863
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x55, 0x72, // => 21874
	3, MatB, MatB, MatB, 0x55, 0x7d, // => 21885
	3, MatH, MatH, MatH, 0x55, 0x85, // => 21893
	3, MatS, MatS, MatS, 0x55, 0x8d, // => 21901
	3, MatD, MatD, MatD, 0x55, 0x95, // => 21909
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x55, 0x9d, // => 21917
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x55, 0xa6, // => 21926
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x55, 0xaf, // => 21935
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x55, 0xb8, // => 21944
	/* uqshrn */ 6,
	3, MatB, MatH, MatImm, 0x55, 0xc1, // => 21953
	3, MatH, MatS, MatImm, 0x55, 0xce, // => 21966
	3, MatS, MatD, MatImm, 0x55, 0xdb, // => 21979
	3, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, MatImm, 0x55, 0xe8, // => 21992
	3, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, MatImm, 0x55, 0xf3, // => 22003
	3, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x55, 0xfe, // => 22014
	/* uqshrn2 */ 3,
	3, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, MatImm, 0x56, 0x9, // => 22025
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, MatImm, 0x56, 0x14, // => 22036
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, MatImm, 0x56, 0x1f, // => 22047
	/* uqsub */ 8,
	3, MatB, MatB, MatB, 0x56, 0x2a, // => 22058
	3, MatH, MatH, MatH, 0x56, 0x32, // => 22066
	3, MatS, MatS, MatS, 0x56, 0x3a, // => 22074
	3, MatD, MatD, MatD, 0x56, 0x42, // => 22082
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x56, 0x4a, // => 22090
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x56, 0x53, // => 22099
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x56, 0x5c, // => 22108
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x56, 0x65, // => 22117
	/* uqxtn */ 6,
	2, MatB, MatH, 0x56, 0x6e, // => 22126
	2, MatH, MatS, 0x56, 0x75, // => 22133
	2, MatS, MatD, 0x56, 0x7c, // => 22140
	2, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, 0x56, 0x83, // => 22147
	2, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, 0x56, 0x8a, // => 22154
	2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, 0x56, 0x91, // => 22161
	/* uqxtn2 */ 3,
	2, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, 0x56, 0x98, // => 22168
	2, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, 0x56, 0x9f, // => 22175
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, 0x56, 0xa6, // => 22182
	/* urecpe */ 1,
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x56, 0xad, // => 22189
	/* urhadd */ 3,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x56, 0xb5, // => 22197
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x56, 0xbe, // => 22206
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x56, 0xc7, // => 22215
	/* urshl */ 5,
	3, MatD, MatD, MatD, 0x56, 0xd0, // => 22224
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x56, 0xd8, // => 22232
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x56, 0xe1, // => 22241
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x56, 0xea, // => 22250
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x56, 0xf3, // => 22259
	/* urshr */ 5,
	3, MatD, MatD, MatImm, 0x56, 0xfc, // => 22268
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x57, 0x9, // => 22281
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x57, 0x15, // => 22293
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x57, 0x21, // => 22305
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x57, 0x2d, // => 22317
	/* ursqrte */ 1,
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x57, 0x39, // => 22329
	/* ursra */ 5,
	3, MatD, MatD, MatImm, 0x57, 0x41, // => 22337
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x57, 0x4e, // => 22350
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x57, 0x5a, // => 22362
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x57, 0x66, // => 22374
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x57, 0x72, // => 22386
	/* ushl */ 5,
	3, MatD, MatD, MatD, 0x57, 0x7e, // => 22398
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x57, 0x86, // => 22406
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x57, 0x8f, // => 22415
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x57, 0x98, // => 22424
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x57, 0xa1, // => 22433
	/* ushll */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatImm, 0x57, 0xaa, // => 22442
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatImm, 0x57, 0xb4, // => 22452
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatImm, 0x57, 0xbe, // => 22462
	/* ushll2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatImm, 0x57, 0xc8, // => 22472
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatImm, 0x57, 0xd2, // => 22482
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatImm, 0x57, 0xdc, // => 22492
	/* ushr */ 5,
	3, MatD, MatD, MatImm, 0x57, 0xe6, // => 22502
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x57, 0xf3, // => 22515
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x57, 0xff, // => 22527
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x58, 0xb, // => 22539
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x58, 0x17, // => 22551
	/* usqadd */ 8,
	2, MatB, MatB, 0x58, 0x23, // => 22563
	2, MatH, MatH, 0x58, 0x2a, // => 22570
	2, MatS, MatS, 0x58, 0x31, // => 22577
	2, MatD, MatD, 0x58, 0x38, // => 22584
	2, MatV, byte(BYTE), MatV, byte(BYTE), 0x58, 0x3f, // => 22591
	2, MatV, byte(WORD), MatV, byte(WORD), 0x58, 0x47, // => 22599
	2, MatV, byte(DWORD), MatV, byte(DWORD), 0x58, 0x4f, // => 22607
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x58, 0x57, // => 22615
	/* usra */ 5,
	3, MatD, MatD, MatImm, 0x58, 0x5f, // => 22623
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatImm, 0x58, 0x6c, // => 22636
	3, MatV, byte(WORD), MatV, byte(WORD), MatImm, 0x58, 0x78, // => 22648
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatImm, 0x58, 0x84, // => 22660
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x58, 0x90, // => 22672
	/* usubl */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, MatVStatic, byte(BYTE), 8, 0x58, 0x9c, // => 22684
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, MatVStatic, byte(WORD), 4, 0x58, 0xa4, // => 22692
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(DWORD), 2, 0x58, 0xac, // => 22700
	/* usubl2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, MatVStatic, byte(BYTE), 16, 0x58, 0xb4, // => 22708
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, 0x58, 0xbc, // => 22716
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, 0x58, 0xc4, // => 22724
	/* usubw */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, 0x58, 0xcc, // => 22732
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, 0x58, 0xd4, // => 22740
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, 0x58, 0xdc, // => 22748
	/* usubw2 */ 3,
	3, MatVStatic, byte(WORD), 8, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, 0x58, 0xe4, // => 22756
	3, MatVStatic, byte(DWORD), 4, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, 0x58, 0xec, // => 22764
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, 0x58, 0xf4, // => 22772
	/* uxtb */ 1,
	2, MatW, MatW, 0x58, 0xfc, // => 22780
	/* uxth */ 1,
	2, MatW, MatW, 0x59, 0x3, // => 22787
	/* uxtl */ 3,
	2, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 8, 0x59, 0xa, // => 22794
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 4, 0x59, 0x11, // => 22801
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 2, 0x59, 0x18, // => 22808
	/* uxtl2 */ 3,
	2, MatVStatic, byte(WORD), 8, MatVStatic, byte(BYTE), 16, 0x59, 0x1f, // => 22815
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(WORD), 8, 0x59, 0x26, // => 22822
	2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(DWORD), 4, 0x59, 0x2d, // => 22829
	/* uzp1 */ 4,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x59, 0x34, // => 22836
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x59, 0x3d, // => 22845
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x59, 0x46, // => 22854
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x59, 0x4f, // => 22863
	/* uzp2 */ 4,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x59, 0x58, // => 22872
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x59, 0x61, // => 22881
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x59, 0x6a, // => 22890
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x59, 0x73, // => 22899
	/* wfe */ 1,
	0, 0x59, 0x7c, // => 22908
	/* wfi */ 1,
	0, 0x59, 0x81, // => 22913
	/* xar */ 1,
	4, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatImm, 0x59, 0x86, // => 22918
	/* xpacd */ 1,
	1, MatX, 0x59, 0x91, // => 22929
	/* xpaci */ 1,
	1, MatX, 0x59, 0x97, // => 22935
	/* xpaclri */ 1,
	0, 0x59, 0x9d, // => 22941
	/* xtn */ 3,
	2, MatVStatic, byte(BYTE), 8, MatVStatic, byte(WORD), 8, 0x59, 0xa2, // => 22946
	2, MatVStatic, byte(WORD), 4, MatVStatic, byte(DWORD), 4, 0x59, 0xa9, // => 22953
	2, MatVStatic, byte(DWORD), 2, MatVStatic, byte(QWORD), 2, 0x59, 0xb0, // => 22960
	/* xtn2 */ 3,
	2, MatVStatic, byte(BYTE), 16, MatVStatic, byte(WORD), 8, 0x59, 0xb7, // => 22967
	2, MatVStatic, byte(WORD), 8, MatVStatic, byte(DWORD), 4, 0x59, 0xbe, // => 22974
	2, MatVStatic, byte(DWORD), 4, MatVStatic, byte(QWORD), 2, 0x59, 0xc5, // => 22981
	/* yield */ 1,
	0, 0x59, 0xcc, // => 22988
	/* zip1 */ 4,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x59, 0xd1, // => 22993
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x59, 0xda, // => 23002
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x59, 0xe3, // => 23011
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x59, 0xec, // => 23020
	/* zip2 */ 4,
	3, MatV, byte(BYTE), MatV, byte(BYTE), MatV, byte(BYTE), 0x59, 0xf5, // => 23029
	3, MatV, byte(WORD), MatV, byte(WORD), MatV, byte(WORD), 0x59, 0xfe, // => 23038
	3, MatV, byte(DWORD), MatV, byte(DWORD), MatV, byte(DWORD), 0x5a, 0x7, // => 23047
	3, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, MatVStatic, byte(QWORD), 2, 0x5a, 0x10, // => 23056
}
